name: Run CBOM on top 250 Python repos

on:
  workflow_dispatch:

jobs:
  build-matrix:
    name: Build analysis matrix
    runs-on: ubuntu-latest
    outputs:
      repositories: ${{ steps.build-matrix.outputs.repositories }}
    steps:
      - uses: actions/checkout@v4
      - id: build-matrix
        run: |
          set -ex
          REPOS=$(cat pqc.json | jq -c '.python_2000_all[500:505]')
          echo "repositories=${REPOS}" >> "$GITHUB_OUTPUT"
  top250:
    uses: ./.github/workflows/cbom-top250-reusable-workflow.yml
    needs: build-matrix
    strategy:
      fail-fast: false
      matrix:
        repository: ${{ fromJSON(needs.build-matrix.outputs.repositories) }}
    with:
        repositoryNameWithOwner: ${{ matrix.repository }}
        postSummary: false
    secrets: inherit
  commit-data:
    name: Commit data back to repo
    runs-on: ubuntu-latest
    needs: top250
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: cbom-results
          path: ${{ github.workspace }}/cbom-results
      - run: |
          # Commit data to new branch and create PR
          set -ex
          BRANCH_NAME="top250-python-${{ github.run_id }}-${{ github.run_attempt }}"
          git switch -c "${BRANCH_NAME}"
          rsync -ai ./cbom-results/ ./data/
          rm -rf ./cbom-results
          git config --global user.name 'CBOM Data Action'
          git config --global user.email 'advanced-security@users.noreply.github.com'
          git add .
          git commit -m "top250-python-${{ github.run_id }}-${{ github.run_attempt }}"
          git push --set-upstream origin "${BRANCH_NAME}"
          gh pr create \
            --title "Top 250 Python Run #${{ github.run_id }} Attempt #${{ github.run_attempt }}" \
            --fill --label data-pr
          gh pr merge --rebase --auto 
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
