{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.3",
        "notifications" : [ {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        } ],
        "rules" : [ {
          "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "name" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "shortDescription" : {
            "text" : "Unknown Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
            "kind" : "problem",
            "name" : "Unknown Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "name" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "shortDescription" : {
            "text" : "All Cryptographic Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
            "kind" : "problem",
            "name" : "All Cryptographic Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Symmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with symmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with symmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Symmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/iv-sources",
          "name" : "py/quantum-readiness/cbom/iv-sources",
          "shortDescription" : {
            "text" : "Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/iv-sources",
            "kind" : "problem",
            "name" : "Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "shortDescription" : {
            "text" : "All Asymmetric Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "description" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
            "kind" : "problem",
            "name" : "All Asymmetric Algorithms",
            "preci" : "cbom\n       cryptography",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-exchange",
          "name" : "py/quantum-readiness/cbom/key-exchange",
          "shortDescription" : {
            "text" : "Key Exchange Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-exchange",
            "kind" : "problem",
            "name" : "Key Exchange Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/hash-algorithms",
          "name" : "py/quantum-readiness/cbom/hash-algorithms",
          "shortDescription" : {
            "text" : "Hash Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/hash-algorithms",
            "kind" : "problem",
            "name" : "Hash Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Symmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Symmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "name" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "shortDescription" : {
            "text" : "Known asymmetric key source generation"
          },
          "fullDescription" : {
            "text" : "Finds all known potential sources for asymmetric key generation while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all known potential sources for asymmetric key generation while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
            "kind" : "problem",
            "name" : "Known asymmetric key source generation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Asymmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with asymmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with asymmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Asymmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-derivation",
          "name" : "py/quantum-readiness/cbom/key-derivation",
          "shortDescription" : {
            "text" : "Key Derivation Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key derivation using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key derivation using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-derivation",
            "kind" : "problem",
            "name" : "Key Derivation Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/signing-algorithms",
          "name" : "py/quantum-readiness/cbom/signing-algorithms",
          "shortDescription" : {
            "text" : "Signing Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of signing algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of signing algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/signing-algorithms",
            "kind" : "problem",
            "name" : "Signing Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "shortDescription" : {
            "text" : "Authenticated Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of authenticated encryption schemes using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of authenticated encryption schemes using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
            "kind" : "problem",
            "name" : "Authenticated Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Asymmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Asymmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/block-cipher-mode",
          "name" : "py/quantum-readiness/cbom/block-cipher-mode",
          "shortDescription" : {
            "text" : "Block cipher mode of operation"
          },
          "fullDescription" : {
            "text" : "Finds all potential block cipher modes of operations using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential block cipher modes of operations using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/block-cipher-mode",
            "kind" : "problem",
            "name" : "Block cipher mode of operation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "name" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "shortDescription" : {
            "text" : "Elliptic Curve Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of elliptic curve algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of elliptic curve algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
            "kind" : "problem",
            "name" : "Elliptic Curve Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "codeql/python-queries",
        "semanticVersion" : "0.9.3+ff65ffafb003e86bd4c18f2c031f5faaf6f1038b",
        "locations" : [ {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.3/x64/codeql/qlpacks/codeql/python-queries/0.9.3/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.3/x64/codeql/qlpacks/codeql/python-queries/0.9.3/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake/_shared/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_shared/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 15
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 16
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-file-share/azure/storage/fileshare/_shared/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 17
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_shared/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 18
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 19
      }
    }, {
      "location" : {
        "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_artifact_cache.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 20
      }
    }, {
      "location" : {
        "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 21
      }
    }, {
      "location" : {
        "uri" : "sdk/appconfiguration/azure-appconfiguration/azure/appconfiguration/_azure_appconfiguration_requests.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 22
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 23
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoretable/azure/eventhub/extensions/checkpointstoretable/_vendor/data/tables/_common_conversion.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 24
      }
    }, {
      "location" : {
        "uri" : "sdk/tables/azure-data-tables/azure/data/tables/_common_conversion.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 25
      }
    }, {
      "location" : {
        "uri" : "sdk/eventgrid/azure-eventgrid/azure/eventgrid/_helpers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 26
      }
    }, {
      "location" : {
        "uri" : "sdk/containerregistry/azure-containerregistry/azure/containerregistry/_helpers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 27
      }
    }, {
      "location" : {
        "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 28
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 29
      }
    }, {
      "location" : {
        "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/entities/_util.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 30
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub/azure/eventhub/_utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 31
      }
    }, {
      "location" : {
        "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 32
      }
    }, {
      "location" : {
        "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 33
      }
    }, {
      "location" : {
        "uri" : "sdk/servicebus/azure-servicebus/samples/sync_samples/authenticate_using_azure_sas_credential.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 34
      }
    }, {
      "location" : {
        "uri" : "sdk/servicebus/azure-servicebus/samples/async_samples/authenticate_using_azure_sas_credential_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 35
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub/samples/sync_samples/authenticate_with_azure_sas_credential.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 36
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/authenticate_with_azure_sas_credential_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 37
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub/samples/sync_samples/authenticate_with_sas_token.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 38
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/authenticate_with_sas_token_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 39
      }
    }, {
      "location" : {
        "uri" : "sdk/batch/azure-batch/azure/batch/batch_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 40
      }
    }, {
      "location" : {
        "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 41
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/ec_key.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 42
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 43
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 44
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 45
      }
    }, {
      "location" : {
        "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/aio/endpoint_component.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 46
      }
    }, {
      "location" : {
        "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/endpoint_component.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 47
      }
    }, {
      "location" : {
        "uri" : "sdk/servicebus/azure-servicebus/samples/sync_samples/generate_sas_token_and_authenticate_client.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 48
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/iot_hub_connection_string_receive_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 49
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-file-share/azure/storage/fileshare/_shared/policies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 50
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/policies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 51
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_shared/policies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 52
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/policies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 53
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake/_shared/policies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 54
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_shared/policies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 55
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-networktraversal/azure/communication/networktraversal/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 56
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-email/azure/communication/email/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 57
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-jobrouter/azure/communication/jobrouter/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 58
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-rooms/azure/communication/rooms/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 59
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-chat/azure/communication/chat/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 60
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-identity/azure/communication/identity/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 61
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-sms/azure/communication/sms/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 62
      }
    }, {
      "location" : {
        "uri" : "sdk/communication/azure-communication-phonenumbers/azure/communication/phonenumbers/_shared/policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 63
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 64
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 65
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 66
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/samples/sample_get_set_policy.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 67
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/samples/sample_get_set_policy_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 68
      }
    }, {
      "location" : {
        "uri" : "sdk/deviceupdate/azure-iot-deviceupdate/samples/ImportUpdate/sample_import_update.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 69
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 70
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 71
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/tests/perfstress_tests/sign.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 72
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 73
      }
    }, {
      "location" : {
        "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 74
      }
    }, {
      "location" : {
        "uri" : "sdk/confidentialledger/azure-confidentialledger/tests/test_confidential_ledger_client.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 75
      }
    }, {
      "location" : {
        "uri" : "sdk/confidentialledger/azure-confidentialledger/tests/test_confidential_ledger_client_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 76
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 77
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 78
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_examples_crypto.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 79
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_examples_crypto_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 80
      }
    }, {
      "location" : {
        "uri" : "sdk/ml/azure-ai-ml/tests/internal_utils/unittests/test_get_content_hash.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 81
      }
    }, {
      "location" : {
        "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 82
      }
    }, {
      "location" : {
        "uri" : "sdk/batch/azure-mgmt-batch/tests/test_mgmt_batch.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 83
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 84
      }
    }, {
      "location" : {
        "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 85
      }
    }, {
      "location" : {
        "uri" : "tools/azure-devtools/src/azure_devtools/scenario_tests/utilities.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 86
      }
    }, {
      "location" : {
        "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 87
      }
    }, {
      "location" : {
        "uri" : "sdk/confidentialledger/azure-confidentialledger/samples/verify_service.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 88
      }
    }, {
      "location" : {
        "uri" : "sdk/confidentialledger/azure-confidentialledger/samples/verify_service_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 89
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 90
      }
    }, {
      "location" : {
        "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 91
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/uploads.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 92
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/uploads.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 93
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/uploads_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 94
      }
    }, {
      "location" : {
        "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/uploads_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 95
      }
    } ],
    "results" : [ {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 52,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    def __init__(self, key, iv):\n        super(_AesCbcCryptoTransform, self).__init__(key)\n        self._cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())\n\n    def transform(self, data):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7a216566210ab03:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n        self._tag = auth_tag or bytearray()\n        self._hmac = hmac.HMAC(self._hmac_key, hash_algorithm, backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d005b47f539d092:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 16,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "class _AesKeyWrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_wrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4cb5471014fac830:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 16,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "class _AesKeyUnwrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_unwrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edab668dc57b2757:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dac8083f60d87f47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe05c485feda2d0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2703226f716907b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "739c3aa75a188ed9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils import recorded_by_proxy\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aea659ac6f2f07a:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils.aio import recorded_by_proxy_async\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f78740b04f326b3:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/azure/storage/fileshare/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_artifact_cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "        \"\"\"Hash the file content in the file list.\"\"\"\n        ordered_file_list = copy.copy(file_list)\n        hasher = hashlib.sha256()\n        ordered_file_list.sort()\n        for item in ordered_file_list:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f6f76aa84b9cda0f:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 236,
            "startColumn" : 13,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 234,
            "endLine" : 238,
            "snippet" : {
              "text" : "\ndef get_object_hash(path: Union[str, Path], ignore_file: IgnoreFile = IgnoreFile()) -> str:\n    _hash = hashlib.md5(b\"Initialize for october 2021 AML CLI version\") # nosec\n    if Path(path).is_dir():\n        object_hash = _get_dir_hash(directory=path, _hash=_hash, ignore_file=ignore_file)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "54258820c50055f0:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 292,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 290,
            "endLine" : 294,
            "snippet" : {
              "text" : "    # file_list is a list of tuples, (absolute_path, relative_path)\n\n    _hash = hashlib.sha256()\n    # Add file count to the hash and add '#' around file name then add each file's size to avoid collision like:\n    # Case 1:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d93a85f4c244d05f:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 18,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "    from azure.ai.ml.operations import ComponentOperations, DataOperations, EnvironmentOperations, ModelOperations\n\nhash_type = type(hashlib.md5()) # nosec\n\nmodule_logger = logging.getLogger(__name__)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "892769705b1b1e70:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/appconfiguration/azure-appconfiguration/azure/appconfiguration/_azure_appconfiguration_requests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 41,
            "endLine" : 45,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/appconfiguration/azure-appconfiguration/azure/appconfiguration/_azure_appconfiguration_requests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 61,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        decoded_secret = base64.b64decode(self._credentials.secret)\n        digest = hmac.new(\n            decoded_secret, string_to_sign.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n        signature = base64.b64encode(digest).decode(\"utf-8\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "523636bba857cfc5:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric.ec import EllipticCurvePrivateKey\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.x509.base import load_pem_x509_certificate\nfrom cryptography.x509 import Certificate\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8d65fe236ce4540:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric.ec import EllipticCurvePrivateKey\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.x509.base import load_pem_x509_certificate\nfrom cryptography.x509 import Certificate\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8d65fe236ce4540:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoretable/azure/eventhub/extensions/checkpointstoretable/_vendor/data/tables/_common_conversion.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode(\"utf-8\")\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = _encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/tables/azure-data-tables/azure/data/tables/_common_conversion.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode(\"utf-8\")\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = _encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 518,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 516,
            "endLine" : 520,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 519,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 517,
            "endLine" : 521,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 518,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 516,
            "endLine" : 520,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 519,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 517,
            "endLine" : 521,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventgrid/azure-eventgrid/azure/eventgrid/_helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 53,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(key)\n    bytes_message = message.encode(\"ascii\")\n    hmac_new = hmac.new(decoded_key, bytes_message, hashlib.sha256).digest()\n\n    return base64.b64encode(hmac_new)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd3467573a67c81d:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/containerregistry/azure-containerregistry/azure/containerregistry/_helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 24,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "    value = data.read()\n    data.seek(0)\n    return \"sha256:\" + hashlib.sha256(value).hexdigest()\n\ndef _validate_digest(data, digest):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ebef35054332f6a:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 21,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "    if rootNode.is_file():\n        return rootNode.bytehash\n    h = hashlib.new(HASH_ALGORITHM)\n    for child in rootNode.children:\n        if child.is_file():\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a834ccfaa7429768:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 21,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "\ndef _get_hash(filePath, name, file_type):\n    h = hashlib.new(HASH_ALGORITHM)\n    if not os.access(filePath, os.R_OK):\n        print(filePath, os.R_OK)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4bade7156d18692:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 18,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from collections import deque\nHASH_FILE_CHUNK_SIZE = 65536\nHASH_ALGORITHM = \"sha512\"\n\n''' Copied from ml-components\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3de781d92a2aefc4:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 15,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from collections import deque\nHASH_FILE_CHUNK_SIZE = 65536\nHASH_ALGORITHM = \"sha512\"\n\n''' Copied from ml-components\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3de781d92a2aefc4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 788,
            "startColumn" : 25,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 786,
            "endLine" : 790,
            "snippet" : {
              "text" : "                        self.signature_bytes,\n                        signed_data.encode(\"utf-8\"),\n                        padding.PKCS1v15(),\n                        SHA256(),\n                    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1220cdc5dfb6bd81:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 910,
            "startColumn" : 25,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 908,
            "endLine" : 912,
            "snippet" : {
              "text" : "                return_value.encode(\"utf-8\"),\n                algorithm=SHA256(),\n                padding=padding.PKCS1v15(),\n            )\n        else:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4591da3fb1c1e1bf:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 51,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.hashes import SHA256\nfrom cryptography.exceptions import InvalidSignature\nfrom cryptography.hazmat.backends import default_backend\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee9d1c10265735cd:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 74,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/entities/_util.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 167,
            "startColumn" : 16,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 165,
            "endLine" : 169,
            "snippet" : {
              "text" : "def get_md5_string(text):\n    try:\n        return hashlib.md5(text.encode(\"utf8\")).hexdigest()  # nosec\n    except Exception as ex:\n        raise ex\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e08b2576270b1ae:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/azure/eventhub/_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 368,
            "startColumn" : 71,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 366,
            "endLine" : 370,
            "snippet" : {
              "text" : "    ttl = int(expiry)\n    sign_key = '%s\\n%d' % (encoded_uri, ttl)\n    signature = b64encode(HMAC(encoded_key, sign_key.encode('utf-8'), sha256).digest())\n    result = {\n        'sr': audience,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "92a10a0e0b0c14bc:1",
        "primaryLocationStartColumnFingerprint" : "66"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/azure/eventhub/_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "import logging\nfrom base64 import b64encode\nfrom hashlib import sha256\nfrom hmac import HMAC\nfrom urllib.parse import urlencode, quote_plus\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f31ebc7bbe610d1:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 40,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "\n        cert = x509.load_pem_x509_certificate(pem_bytes, default_backend())\n        fingerprint = cert.fingerprint(hashes.SHA1())  # nosec\n        self._thumbprint = six.ensure_str(base64.urlsafe_b64encode(fingerprint), encoding=\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d2b0c3158a695e1c:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 50,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 42,
            "snippet" : {
              "text" : "    def sign(self, plaintext: bytes) -> bytes:\n        \"\"\"Sign bytes using RS256\"\"\"\n        return self._private_key.sign(plaintext, padding.PKCS1v15(), hashes.SHA256())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e4a906f58573d38:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 70,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 42,
            "snippet" : {
              "text" : "    def sign(self, plaintext: bytes) -> bytes:\n        \"\"\"Sign bytes using RS256\"\"\"\n        return self._private_key.sign(plaintext, padding.PKCS1v15(), hashes.SHA256())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e4a906f58573d38:1",
        "primaryLocationStartColumnFingerprint" : "61"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 31,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    def __init__(self, key, iv):\n        super(_AesCbcCryptoTransform, self).__init__(key)\n        self._cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())\n\n    def transform(self, data):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7a216566210ab03:1",
        "primaryLocationStartColumnFingerprint" : "22"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 52,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    def __init__(self, key, iv):\n        super(_AesCbcCryptoTransform, self).__init__(key)\n        self._cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())\n\n    def transform(self, data):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7a216566210ab03:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 32,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        self._aes_key = key[: len(key) // 2]\n        self._hmac_key = key[len(key) // 2 :]\n        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66444cd132b87b14:1",
        "primaryLocationStartColumnFingerprint" : "23"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 54,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        self._aes_key = key[: len(key) // 2]\n        self._hmac_key = key[len(key) // 2 :]\n        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66444cd132b87b14:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 76,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        self._aes_key = key[: len(key) // 2]\n        self._hmac_key = key[len(key) // 2 :]\n        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66444cd132b87b14:1",
        "primaryLocationStartColumnFingerprint" : "67"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 31,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n        self._tag = auth_tag or bytearray()\n        self._hmac = hmac.HMAC(self._hmac_key, hash_algorithm, backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d005b47f539d092:1",
        "primaryLocationStartColumnFingerprint" : "22"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n        self._tag = auth_tag or bytearray()\n        self._hmac = hmac.HMAC(self._hmac_key, hash_algorithm, backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d005b47f539d092:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 16,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "class _AesKeyWrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_wrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4cb5471014fac830:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 16,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "class _AesKeyUnwrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_unwrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edab668dc57b2757:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 34,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "\n    body = text.encode(\"utf-8\")\n    digest = hmac.new(key, body, sha256).digest()\n    signature = base64.encodebytes(digest).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "abfc9f52375c9c08:1",
        "primaryLocationStartColumnFingerprint" : "29"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "\nimport base64\nfrom hashlib import sha256\nimport hmac\nimport warnings\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d82bd0a80a78617:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/servicebus/azure-servicebus/samples/sync_samples/authenticate_using_azure_sas_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/servicebus/azure-servicebus/samples/async_samples/authenticate_using_azure_sas_credential_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/sync_samples/authenticate_with_azure_sas_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/authenticate_with_azure_sas_credential_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/sync_samples/authenticate_with_sas_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/authenticate_with_sas_token_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/batch/azure-batch/azure/batch/batch_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 61,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 105,
            "endLine" : 109,
            "snippet" : {
              "text" : "            raise ValueError(\"Invalid key value: {}\".format(self._key))\n\n        signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n        digest = signed_hmac_sha256.digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889f54:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dac8083f60d87f47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe05c485feda2d0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 28,
            "endLine" : 82,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 84,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = 'local:' + kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 44,
            "endLine" : 92,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 94,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n        raise ValueError('Unknown key wrap algorithm.')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59b9925e7f9078c0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 45,
            "endLine" : 102,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 104,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n        raise ValueError('Unknown key wrap algorithm.')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59b9925e7f9078c0:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 36,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "    private_key = serialization.load_pem_private_key(certificate_data, password, backend=default_backend())\n    cert = x509.load_pem_x509_certificate(certificate_data, default_backend())\n    fingerprint = cert.fingerprint(hashes.SHA1())  # nosec\n    return _Cert(certificate_data, private_key, fingerprint)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de3516adb8a05bd:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 36,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "    pem_bytes = b\"\".join(pem_sections)\n\n    fingerprint = cert.fingerprint(hashes.SHA1())  # nosec\n\n    return _Cert(pem_bytes, private_key, fingerprint)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "617c85d8f30aff78:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/ec_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 59,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "        curve_cls = _kv_crv_to_crypto_cls[curve]\n\n        public_numbers = EllipticCurvePublicNumbers(x, y, curve_cls())\n        self._public_key = public_numbers.public_key(default_backend())\n        self._private_key = None\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cbcaa656b9df6bd:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "class Ecdsa256(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es256_k\n    _default_hash_algorithm = hashes.SHA256()\n    coordinate_length = 32\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83de77f214f62dc5:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 55,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 53,
            "endLine" : 57,
            "snippet" : {
              "text" : "class Es256(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es256\n    _default_hash_algorithm = hashes.SHA256()\n    coordinate_length = 32\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b5d49d577d097473:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "class Es384(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es384\n    _default_hash_algorithm = hashes.SHA384()\n    coordinate_length = 48\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fac763787b16885:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "class Es512(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es512\n    _default_hash_algorithm = hashes.SHA512()\n    coordinate_length = 66\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3897e12fa3de2575:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 210,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 208,
            "endLine" : 212,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 210,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 208,
            "endLine" : 212,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 44,
            "endLine" : 70,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 72,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 45,
            "endLine" : 81,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 83,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 28,
            "endLine" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 64,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 69,
            "startColumn" : 44,
            "endLine" : 72,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 67,
            "endLine" : 74,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 45,
            "endLine" : 83,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 85,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 44,
            "endLine" : 70,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 72,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 45,
            "endLine" : 81,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 83,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/aio/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 123,
            "startColumn" : 23,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 121,
            "endLine" : 125,
            "snippet" : {
              "text" : "        json_repr = json.dumps(self.make_hash(res)).encode(\"utf-8\")\n\n        hash_object = hashlib.sha1(json_repr)   # nosec\n        hashed_result = hash_object.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a933e9c7f729b85c:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/aio/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 130,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 128,
            "endLine" : 132,
            "snippet" : {
              "text" : "            json_repr = json.dumps(self.make_hash(res)).encode(\"utf-8\")\n\n            hash_object = hashlib.sha1(json_repr)   # nosec\n            hashed_result = hash_object.hexdigest()\n        self.last_result.add(hashed_result)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb1805a60d382256:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 23,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "        json_repr = json_repr.encode(\"utf-8\")\n\n        hash_object = hashlib.sha1(json_repr)   # nosec\n        hashed_result = hash_object.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a933e9c7f729b85c:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 139,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 137,
            "endLine" : 141,
            "snippet" : {
              "text" : "            json_repr = json_repr.encode(\"utf-8\")\n\n            hash_object = hashlib.sha1(json_repr)   # nosec\n            hashed_result = hash_object.hexdigest()\n        self.last_result.add(hashed_result)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb1805a60d382256:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/servicebus/azure-servicebus/samples/sync_samples/generate_sas_token_and_authenticate_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 29,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 27,
            "endLine" : 31,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/iot_hub_connection_string_receive_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 74,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "    ttl = int(expiry)\n    sign_key = '%s\\n%d' % (encoded_uri, ttl)\n    signature = b64encode(HMAC(b64decode(key), sign_key.encode('utf-8'), sha256).digest())\n    result = {\n        'sr': uri,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19dcc113aaf9d972:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/iot_hub_connection_string_receive_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "import time\nfrom base64 import b64encode, b64decode\nfrom hashlib import sha256\nfrom hmac import HMAC\nimport asyncio\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18b2b3777dea3dc9:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2703226f716907b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "739c3aa75a188ed9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/azure/storage/fileshare/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 342,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 340,
            "endLine" : 344,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 325,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 323,
            "endLine" : 327,
            "snippet" : {
              "text" : "    @staticmethod\n    def get_content_md5(data):\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 356,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 354,
            "endLine" : 358,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 325,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 323,
            "endLine" : 327,
            "snippet" : {
              "text" : "    @staticmethod\n    def get_content_md5(data):\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 342,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 340,
            "endLine" : 344,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 348,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 346,
            "endLine" : 350,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-networktraversal/azure/communication/networktraversal/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-networktraversal/azure/communication/networktraversal/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-email/azure/communication/email/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-email/azure/communication/email/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-jobrouter/azure/communication/jobrouter/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-jobrouter/azure/communication/jobrouter/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-rooms/azure/communication/rooms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-rooms/azure/communication/rooms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-chat/azure/communication/chat/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-chat/azure/communication/chat/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-identity/azure/communication/identity/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-identity/azure/communication/identity/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-sms/azure/communication/sms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-sms/azure/communication/sms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-phonenumbers/azure/communication/phonenumbers/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-phonenumbers/azure/communication/phonenumbers/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 40,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "class _Rsa1_5Encryptor(CryptoTransform):\n    def transform(self, data):\n        return self._key.encrypt(data, padding.PKCS1v15())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d4c35b812da8c5d3:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 40,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "class _Rsa1_5Decryptor(CryptoTransform):\n    def transform(self, data):\n        return self._key.decrypt(data, padding.PKCS1v15())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "68c6396e57b0a6ed:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 39,
            "startColumn" : 24,
            "endLine" : 41,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 37,
            "endLine" : 43,
            "snippet" : {
              "text" : "\n    def transform(self, data):\n        oaep_padding = padding.OAEP(\n            mgf=padding.MGF1(algorithm=self._hash_cls()), algorithm=self._hash_cls(), label=None\n        )\n        return self._key.decrypt(data, oaep_padding)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe578d670af13fe:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 24,
            "endLine" : 53,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 55,
            "snippet" : {
              "text" : "\n    def transform(self, data):\n        oaep_padding = padding.OAEP(\n            mgf=padding.MGF1(algorithm=self._hash_cls()), algorithm=self._hash_cls(), label=None\n        )\n        return self._key.encrypt(data, oaep_padding)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe578d670af13fe:2",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 39,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "\n    def create_encryptor(self, key):\n        return _RsaOaepEncryptor(key, hashes.SHA1)\n\n    def create_decryptor(self, key):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37b9d5e4e1158502:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 39,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "\n    def create_decryptor(self, key):\n        return _RsaOaepDecryptor(key, hashes.SHA1)\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "619df96cdb0bc3e3:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 39,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "\n    def create_encryptor(self, key):\n        return _RsaOaepEncryptor(key, hashes.SHA256)\n\n    def create_decryptor(self, key):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a1ad1a8f9c5eea8:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 39,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 72,
            "endLine" : 76,
            "snippet" : {
              "text" : "\n    def create_decryptor(self, key):\n        return _RsaOaepDecryptor(key, hashes.SHA256)\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "13a680056f29cfd4:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 97,
            "startColumn" : 25,
            "endColumn" : 106
          },
          "contextRegion" : {
            "startLine" : 95,
            "endLine" : 99,
            "snippet" : {
              "text" : "        key.key_ops = RsaKey.PRIVATE_KEY_DEFAULT_OPS\n        # pylint:disable=protected-access\n        key._rsa_impl = generate_private_key(public_exponent=e, key_size=size, backend=default_backend())\n        return key\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2bb08a85b5bdfc0:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "from cryptography.exceptions import InvalidSignature\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb0c614f771aa806:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 5,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bee962d939220de:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 5,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32b2290994f46880:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 5,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "532d126267ee34f7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 5,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce965f34b2f2e8c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a72fde53b241843:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edbda524754e6e04:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1231e96840de149:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 29,
            "startColumn" : 53,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 27,
            "endLine" : 31,
            "snippet" : {
              "text" : "class RsaSsaPkcs1v15(SignatureAlgorithm):\n    def create_signature_transform(self, key):\n        return RsaSignatureTransform(key, lambda _: padding.PKCS1v15(), self._default_hash_algorithm)\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f089a3b1bb2ddde:1",
        "primaryLocationStartColumnFingerprint" : "44"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PSS"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 16,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "\n    def _get_padding(self, digest):\n        return padding.PSS(mgf=padding.MGF1(self._default_hash_algorithm), salt_length=len(digest))\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19b347ac58579328:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "class Ps256(RsaSsaPss):\n    _name = KeyVaultSignatureAlgorithm.ps256\n    _default_hash_algorithm = hashes.SHA256()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b879c96372e6a3c0:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "class Ps384(RsaSsaPss):\n    _name = KeyVaultSignatureAlgorithm.ps384\n    _default_hash_algorithm = hashes.SHA384()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fce903e06a652c7b:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "class Ps512(RsaSsaPss):\n    _name = KeyVaultSignatureAlgorithm.ps512\n    _default_hash_algorithm = hashes.SHA512()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "db65c2b8fc273b0d:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "class Rs256(RsaSsaPkcs1v15):\n    _name = KeyVaultSignatureAlgorithm.rs256\n    _default_hash_algorithm = hashes.SHA256()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5ab60bf7f4866d9c:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "class Rs384(RsaSsaPkcs1v15):\n    _name = KeyVaultSignatureAlgorithm.rs384\n    _default_hash_algorithm = hashes.SHA384()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f254674ec04f657:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "class Rs512(RsaSsaPkcs1v15):\n    _name = KeyVaultSignatureAlgorithm.rs512\n    _default_hash_algorithm = hashes.SHA512()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "542371c5afa35c04:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_get_set_policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 247,
            "startColumn" : 34,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 245,
            "endLine" : 249,
            "snippet" : {
              "text" : "\n            # Generate the Sha256 hash of the attestation token.\n            hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n            hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n            expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_get_set_policy_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 34,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "\n            # Generate the Sha256 hash of the attestation token.\n            hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n            hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n            expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/deviceupdate/azure-iot-deviceupdate/samples/ImportUpdate/sample_import_update.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "    with open(file_path, \"rb\") as f:\n        bytes = f.read()  # read entire file as bytes\n        return base64.b64encode(hashlib.sha256(bytes).digest()).decode(\"utf-8\")\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60b0f2f035b3555c:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 93,
            "startColumn" : 23,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 91,
            "endLine" : 95,
            "snippet" : {
              "text" : "        builder.sign(\n            private_key=signing_key,\n            algorithm=hashes.SHA256(),\n            backend=default_backend(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e00b3c5eb69bb148:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 18,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 16,
            "endLine" : 20,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography import x509\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509 import (\n    BasicConstraints,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d5daaf648d56a63:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "\nclass Sha256(_Sha2HashAlgorithm):\n    _algorithm_cls = hashes.SHA256\n    _name = \"SHA256\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "696bd588f9d4b853:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\nclass Sha384(_Sha2HashAlgorithm):\n    _algorithm_cls = hashes.SHA384\n    _name = \"SHA384\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b63b1d8ffc029ea8:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "\nclass Sha512(_Sha2HashAlgorithm):\n    _algorithm_cls = hashes.SHA512\n    _name = \"SHA512\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e141bf76747fbb5a:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/perfstress_tests/sign.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 72
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "        self.test_algorithm = SignatureAlgorithm.rs256\n        plaintext = os.urandom(2048)\n        hasher = hashlib.sha256()\n        hasher.update(plaintext)\n        self.digest = hasher.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f6ca87a63ed0ae31:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SECP256R1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 37,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    def _create_ecds_key():  # type: () -> str\n        return (\n            ec.generate_private_key(ec.SECP256R1(), backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f899d206ecb96580:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 218,
            "startColumn" : 27,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 216,
            "endLine" : 220,
            "snippet" : {
              "text" : "            builder.sign(\n                private_key=signing_key,\n                algorithm=hashes.SHA256(),\n                backend=default_backend(),\n            )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e00b3c5eb69bb148:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 59,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import ec, rsa\nfrom cryptography.x509 import (\n    BasicConstraints,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1b5048875916efe:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils import recorded_by_proxy\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aea659ac6f2f07a:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils.aio import recorded_by_proxy_async\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f78740b04f326b3:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 78,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "    else:\n        assert \"x5c\" not in deserialized_header\n    assert urlsafeb64_decode(deserialized_header[\"x5t\"]) == cert.fingerprint(hashes.SHA1())  # nosec\n\n    cert.public_key().verify(signature, signed_part.encode(\"utf-8\"), padding.PKCS1v15(), hashes.SHA256())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9b1db06cadd5e22f:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 280,
            "startColumn" : 70,
            "endColumn" : 88
          },
          "contextRegion" : {
            "startLine" : 278,
            "endLine" : 282,
            "snippet" : {
              "text" : "    assert urlsafeb64_decode(deserialized_header[\"x5t\"]) == cert.fingerprint(hashes.SHA1())  # nosec\n\n    cert.public_key().verify(signature, signed_part.encode(\"utf-8\"), padding.PKCS1v15(), hashes.SHA256())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6939e177f4ffed4b:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 280,
            "startColumn" : 90,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 278,
            "endLine" : 282,
            "snippet" : {
              "text" : "    assert urlsafeb64_decode(deserialized_header[\"x5t\"]) == cert.fingerprint(hashes.SHA1())  # nosec\n\n    cert.public_key().verify(signature, signed_part.encode(\"utf-8\"), padding.PKCS1v15(), hashes.SHA256())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6939e177f4ffed4b:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/tests/test_confidential_ledger_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 75
          },
          "region" : {
            "startLine" : 422,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 420,
            "endLine" : 424,
            "snippet" : {
              "text" : "        assert (\n            constitution[\"digest\"].lower() == \n            hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n        )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae34a0705e655712:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/tests/test_confidential_ledger_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 473,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 471,
            "endLine" : 475,
            "snippet" : {
              "text" : "        assert (\n            constitution[\"digest\"].lower() == \n            hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n        )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12202e8f8b604841:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 155,
            "startColumn" : 58,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 153,
            "endLine" : 157,
            "snippet" : {
              "text" : "        crypto_client._client = None\n\n        crypto_client.verify(SignatureAlgorithm.es256_k, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n\n    @pytest.mark.parametrize(\"api_version,is_hsm\",all_api_versions)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd14956ba7c7b350:1",
        "primaryLocationStartColumnFingerprint" : "49"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\n        crypto_client.encrypt(EncryptionAlgorithm.rsa_oaep, self.plaintext)\n        crypto_client.verify(SignatureAlgorithm.rs256, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n        crypto_client.wrap_key(KeyWrapAlgorithm.rsa_oaep, self.plaintext)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e831f21ce3088517:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e682f7e6376664:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 220,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 218,
            "endLine" : 222,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90de5662b6fb840:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 460,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 458,
            "endLine" : 462,
            "snippet" : {
              "text" : "            crypto_client = self.create_crypto_client(key, api_version=key_client.api_version)\n            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 461,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 459,
            "endLine" : 463,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 462,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 460,
            "endLine" : 464,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 463,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 461,
            "endLine" : 465,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 464,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 462,
            "endLine" : 466,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 465,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 463,
            "endLine" : 467,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 486,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 484,
            "endLine" : 488,
            "snippet" : {
              "text" : "            local_client = CryptographyClient.from_jwk(key.key)\n            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 487,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 485,
            "endLine" : 489,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 488,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 486,
            "endLine" : 490,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 489,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 487,
            "endLine" : 491,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 490,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 488,
            "endLine" : 492,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 491,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 489,
            "endLine" : 493,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 507,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 505,
            "endLine" : 509,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 508,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 506,
            "endLine" : 510,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:1",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 509,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 507,
            "endLine" : 511,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 510,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 508,
            "endLine" : 512,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 532,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 530,
            "endLine" : 534,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 533,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 531,
            "endLine" : 535,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:2",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 535,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 533,
            "endLine" : 537,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 62,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "        crypto_client._client = None\n\n        await crypto_client.verify(SignatureAlgorithm.es256, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n\n    @pytest.mark.asyncio\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "115829314658a805:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 62,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "\n        await crypto_client.encrypt(EncryptionAlgorithm.rsa_oaep, self.plaintext)\n        await crypto_client.verify(SignatureAlgorithm.rs256, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n        await crypto_client.wrap_key(KeyWrapAlgorithm.rsa_oaep, self.plaintext)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c6961177ea0307a:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fa72d9b38d0a0aa:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 221,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 219,
            "endLine" : 223,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90de5662b6fb840:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 471,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 469,
            "endLine" : 473,
            "snippet" : {
              "text" : "            crypto_client = self.create_crypto_client(key, is_async=True, api_version=key_client.api_version)\n            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 472,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 470,
            "endLine" : 474,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 473,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 471,
            "endLine" : 475,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 474,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 472,
            "endLine" : 476,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 475,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 473,
            "endLine" : 477,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 476,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 474,
            "endLine" : 478,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 498,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 496,
            "endLine" : 500,
            "snippet" : {
              "text" : "            local_client = CryptographyClient.from_jwk(key.key)\n            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 499,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 497,
            "endLine" : 501,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 500,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 498,
            "endLine" : 502,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 501,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 499,
            "endLine" : 503,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 502,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 500,
            "endLine" : 504,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 503,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 501,
            "endLine" : 505,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 520,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 518,
            "endLine" : 522,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 521,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 519,
            "endLine" : 523,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:1",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 522,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 520,
            "endLine" : 524,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 523,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 521,
            "endLine" : 525,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 546,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 544,
            "endLine" : 548,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 547,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 545,
            "endLine" : 549,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:2",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 548,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 546,
            "endLine" : 550,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 549,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 547,
            "endLine" : 551,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_examples_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "        from azure.keyvault.keys.crypto import SignatureAlgorithm\n\n        digest = hashlib.sha256(b\"plaintext\").digest()\n\n        # sign returns the signature and the metadata required to verify it\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd8ab8c8643a8efe:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_examples_crypto_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "        from azure.keyvault.keys.crypto import SignatureAlgorithm\n\n        digest = hashlib.sha256(b\"plaintext\").digest()\n\n        # sign returns the signature and the metadata required to verify it\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd8ab8c8643a8efe:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/tests/internal_utils/unittests/test_get_content_hash.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "\n        hash = get_content_hash(tmp_path)\n        actual_hash = hashlib.sha256()\n        actual_hash.update(b\"4\")\n        actual_hash.update(b\"#file1.txt#\" + str(len(content1)).encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35b1c8a65a05d13a:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/tests/internal_utils/unittests/test_get_content_hash.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "\n        hash = get_content_hash(file_path)\n        actual_hash = hashlib.sha256()\n        actual_hash.update(b\"1\")\n        actual_hash.update(b\"#file1.txt#\" + str(len(content1)).encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8e5f03fd236720b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 65,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    \"key,algorithm,hash_function\",\n    (\n        (EC_KEYS[KeyCurveName.p_256], SignatureAlgorithm.es256, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed8b1f7ecbc9fec2:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 69,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "    (\n        (EC_KEYS[KeyCurveName.p_256], SignatureAlgorithm.es256, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n        (EC_KEYS[KeyCurveName.p_521], SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df9c0dd139fdb78a:1",
        "primaryLocationStartColumnFingerprint" : "60"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 65,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 21,
            "endLine" : 25,
            "snippet" : {
              "text" : "        (EC_KEYS[KeyCurveName.p_256], SignatureAlgorithm.es256, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n        (EC_KEYS[KeyCurveName.p_521], SignatureAlgorithm.es512, hashlib.sha512),\n    ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d69ca1f485877aa:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 65,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n        (EC_KEYS[KeyCurveName.p_521], SignatureAlgorithm.es512, hashlib.sha512),\n    ),\n)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4412c881b982e35d:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "    (\n        (\n            (SignatureAlgorithm.ps256, hashlib.sha256),\n            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 87,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 85,
            "endLine" : 89,
            "snippet" : {
              "text" : "        (\n            (SignatureAlgorithm.ps256, hashlib.sha256),\n            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 88,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 86,
            "endLine" : 90,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.ps256, hashlib.sha256),\n            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 91,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n            (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n            (SignatureAlgorithm.rs512, hashlib.sha512),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b167f4b1b5642fae:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 91,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 89,
            "endLine" : 93,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n            (SignatureAlgorithm.rs512, hashlib.sha512),\n        )\n    ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "597c44e13861d6b0:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/batch/azure-mgmt-batch/tests/test_mgmt_batch.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "def get_redacted_key(key):\n    redacted_value = \"redacted\"\n    digest = hashlib.sha256(six.ensure_binary(key)).digest()\n    redacted_value += six.ensure_str(binascii.hexlify(digest))[:6]\n    return redacted_value\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3f9864fc03d6b861:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "        expected_policy = AttestationPolicyToken(attestation_policy)\n\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 138,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 136,
            "endLine" : 140,
            "snippet" : {
              "text" : "            signing_certificate=signing_certificate,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:2",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 173,
            "endLine" : 177,
            "snippet" : {
              "text" : "            signing_certificate=signing_certificate,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:3",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 78,
            "snippet" : {
              "text" : "        expected_policy = AttestationPolicyToken(attestation_policy)\n\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "            signing_certificate=signing_certificate,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:2",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 197,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 195,
            "endLine" : 199,
            "snippet" : {
              "text" : "            signing_certificate=decoded_cert,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:3",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 447,
            "startColumn" : 21,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 445,
            "endLine" : 449,
            "snippet" : {
              "text" : "        # Create decryption cipher\n        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9678eb31fde772:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 448,
            "startColumn" : 16,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 446,
            "endLine" : 450,
            "snippet" : {
              "text" : "        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18ecf8f845aa0094:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 452,
            "startColumn" : 21,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 450,
            "endLine" : 454,
            "snippet" : {
              "text" : "        # Create decryption cipher\n        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9678eb31fde772:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 453,
            "startColumn" : 16,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 451,
            "endLine" : 455,
            "snippet" : {
              "text" : "        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18ecf8f845aa0094:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES\nUse of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tools/azure-devtools/src/azure_devtools/scenario_tests/utilities.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 86
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 12,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "\ndef get_sha1_hash(file_path):\n    sha1 = hashlib.sha256()\n    with open(file_path, \"rb\") as f:\n        while True:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b4feb9d0c6db4ea4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 604,
            "startColumn" : 19,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 602,
            "endLine" : 606,
            "snippet" : {
              "text" : "    # serialize dict with order so same dict will have same content\n    serialized_component_interface = json.dumps(items, sort_keys=True)\n    object_hash = hashlib.md5() # nosec\n    object_hash.update(serialized_component_interface.encode(\"utf-8\"))\n    return str(UUID(object_hash.hexdigest()))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b0a149381a0d26f:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/samples/verify_service.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 97,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 95,
            "endLine" : 99,
            "snippet" : {
              "text" : "        assert (\n            constitution[\"digest\"].lower() ==\n            hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n        )\n        print(f'\\tConstitution (truncated): {constitution[\"script\"][:24]}...')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "adaad808c090e137:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/samples/verify_service_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 89
          },
          "region" : {
            "startLine" : 104,
            "startColumn" : 21,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 102,
            "endLine" : 106,
            "snippet" : {
              "text" : "                assert (\n                    constitution[\"digest\"].lower() ==\n                    hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n                )\n                print(f'\\tConstitution (truncated): {constitution[\"script\"][:24]}...')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "adaad808c090e137:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 611,
            "startColumn" : 67,
            "endColumn" : 104
          },
          "contextRegion" : {
            "startLine" : 609,
            "endLine" : 613,
            "snippet" : {
              "text" : "            raise ValueError(\"Missing required metadata for decryption.\")\n\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, encryption_data.content_encryption_IV)\n\n        # decrypt data\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "660a2a23dc806967:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 669,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 667,
            "endLine" : 671,
            "snippet" : {
              "text" : "        # AES256 uses 256 bit (32 byte) keys and always with 16 byte blocks\n        content_encryption_key = os.urandom(32)\n        initialization_vector = os.urandom(16)\n\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, initialization_vector)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42f23f6e7b0f72af:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 802,
            "startColumn" : 22,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 800,
            "endLine" : 804,
            "snippet" : {
              "text" : "\n            if start_offset >= 16:\n                iv = content[:16]\n                content = content[16:]\n                start_offset -= 16\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f808564e8eb3001:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 806,
            "startColumn" : 22,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 804,
            "endLine" : 808,
            "snippet" : {
              "text" : "                start_offset -= 16\n            else:\n                iv = encryption_data.content_encryption_IV\n\n            if end_range == blob_size - 1:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60a316a75dc028ac:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 812,
            "startColumn" : 18,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 810,
            "endLine" : 814,
            "snippet" : {
              "text" : "        else:\n            unpad = True\n            iv = encryption_data.content_encryption_IV\n\n        if blob_type == 'PageBlob':\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce04b248a14a42e2:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 898,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 896,
            "endLine" : 900,
            "snippet" : {
              "text" : "        # AES256 CBC uses 256 bit (32 byte) keys and always with 16 byte blocks\n        content_encryption_key = os.urandom(32)\n        initialization_vector = os.urandom(16)\n\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, initialization_vector)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42f23f6e7b0f72af:2",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 611,
            "startColumn" : 67,
            "endColumn" : 104
          },
          "contextRegion" : {
            "startLine" : 609,
            "endLine" : 613,
            "snippet" : {
              "text" : "            raise ValueError(\"Missing required metadata for decryption.\")\n\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, encryption_data.content_encryption_IV)\n\n        # decrypt data\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "660a2a23dc806967:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 669,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 667,
            "endLine" : 671,
            "snippet" : {
              "text" : "        # AES256 uses 256 bit (32 byte) keys and always with 16 byte blocks\n        content_encryption_key = os.urandom(32)\n        initialization_vector = os.urandom(16)\n\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, initialization_vector)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42f23f6e7b0f72af:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 802,
            "startColumn" : 22,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 800,
            "endLine" : 804,
            "snippet" : {
              "text" : "\n            if start_offset >= 16:\n                iv = content[:16]\n                content = content[16:]\n                start_offset -= 16\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f808564e8eb3001:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 806,
            "startColumn" : 22,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 804,
            "endLine" : 808,
            "snippet" : {
              "text" : "                start_offset -= 16\n            else:\n                iv = encryption_data.content_encryption_IV\n\n            if end_range == blob_size - 1:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60a316a75dc028ac:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 812,
            "startColumn" : 18,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 810,
            "endLine" : 814,
            "snippet" : {
              "text" : "        else:\n            unpad = True\n            iv = encryption_data.content_encryption_IV\n\n        if blob_type == 'PageBlob':\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce04b248a14a42e2:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 898,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 896,
            "endLine" : 900,
            "snippet" : {
              "text" : "        # AES256 CBC uses 256 bit (32 byte) keys and always with 16 byte blocks\n        content_encryption_key = os.urandom(32)\n        initialization_vector = os.urandom(16)\n\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, initialization_vector)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "42f23f6e7b0f72af:2",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 63,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "        raise ValueError('Specified encryption algorithm is not supported.')\n\n    cipher = _generate_AES_CBC_cipher(content_encryption_key, encryption_data.content_encryption_IV)\n\n    # decrypt data\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "660a2a23dc806967:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 324,
            "startColumn" : 29,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 322,
            "endLine" : 326,
            "snippet" : {
              "text" : "    # AES256 uses 256 bit (32 byte) keys and always with 16 byte blocks\n    content_encryption_key = urandom(32)\n    initialization_vector = urandom(16)\n\n    cipher = _generate_AES_CBC_cipher(content_encryption_key, initialization_vector)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40c42c1e7204f0af:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 416,
            "startColumn" : 18,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 414,
            "endLine" : 418,
            "snippet" : {
              "text" : "\n        if start_offset >= 16:\n            iv = content[:16]\n            content = content[16:]\n            start_offset -= 16\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f808564e8eb3001:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 420,
            "startColumn" : 18,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 418,
            "endLine" : 422,
            "snippet" : {
              "text" : "            start_offset -= 16\n        else:\n            iv = encryption_data.content_encryption_IV\n\n        if end_range == blob_size - 1:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60a316a75dc028ac:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 426,
            "startColumn" : 14,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 424,
            "endLine" : 428,
            "snippet" : {
              "text" : "    else:\n        unpad = True\n        iv = encryption_data.content_encryption_IV\n\n    if blob_type == 'PageBlob':\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e21c4227f000d1eb:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 478,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 476,
            "endLine" : 480,
            "snippet" : {
              "text" : "    # AES256 uses 256 bit (32 byte) keys and always with 16 byte blocks\n    content_encryption_key = os.urandom(32)\n    initialization_vector = os.urandom(16)\n\n    # Queue encoding functions all return unicode strings, and encryption should\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "826fa6c893c08b88:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 63,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "        raise ValueError('Specified encryption algorithm is not supported.')\n\n    cipher = _generate_AES_CBC_cipher(content_encryption_key, encryption_data.content_encryption_IV)\n\n    # decrypt data\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "660a2a23dc806967:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 324,
            "startColumn" : 29,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 322,
            "endLine" : 326,
            "snippet" : {
              "text" : "    # AES256 uses 256 bit (32 byte) keys and always with 16 byte blocks\n    content_encryption_key = urandom(32)\n    initialization_vector = urandom(16)\n\n    cipher = _generate_AES_CBC_cipher(content_encryption_key, initialization_vector)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "40c42c1e7204f0af:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 416,
            "startColumn" : 18,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 414,
            "endLine" : 418,
            "snippet" : {
              "text" : "\n        if start_offset >= 16:\n            iv = content[:16]\n            content = content[16:]\n            start_offset -= 16\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4f808564e8eb3001:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 420,
            "startColumn" : 18,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 418,
            "endLine" : 422,
            "snippet" : {
              "text" : "            start_offset -= 16\n        else:\n            iv = encryption_data.content_encryption_IV\n\n        if end_range == blob_size - 1:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60a316a75dc028ac:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 426,
            "startColumn" : 14,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 424,
            "endLine" : 428,
            "snippet" : {
              "text" : "    else:\n        unpad = True\n        iv = encryption_data.content_encryption_IV\n\n    if blob_type == 'PageBlob':\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e21c4227f000d1eb:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 478,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 476,
            "endLine" : 480,
            "snippet" : {
              "text" : "    # AES256 uses 256 bit (32 byte) keys and always with 16 byte blocks\n    content_encryption_key = os.urandom(32)\n    initialization_vector = os.urandom(16)\n\n    # Queue encoding functions all return unicode strings, and encryption should\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "826fa6c893c08b88:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 90
          },
          "region" : {
            "startLine" : 745,
            "startColumn" : 14,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 743,
            "endLine" : 747,
            "snippet" : {
              "text" : "\n        encryption_data = _dict_to_encryption_data(loads(content.properties.metadata['encryptiondata']))\n        iv = encryption_data.content_encryption_IV\n        content_encryption_key = _validate_and_unwrap_cek(encryption_data, kek, None)\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, iv)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de90566f59f481c0:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 91
          },
          "region" : {
            "startLine" : 749,
            "startColumn" : 14,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 747,
            "endLine" : 751,
            "snippet" : {
              "text" : "\n        encryption_data = _dict_to_encryption_data(loads(content.properties.metadata['encryptiondata']))\n        iv = encryption_data.content_encryption_IV\n        content_encryption_key = _validate_and_unwrap_cek(encryption_data, kek, None)\n        cipher = _generate_AES_CBC_cipher(content_encryption_key, iv)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de90566f59f481c0:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 448,
            "startColumn" : 20,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 446,
            "endLine" : 450,
            "snippet" : {
              "text" : "        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18ecf8f845aa0094:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 453,
            "startColumn" : 20,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 451,
            "endLine" : 455,
            "snippet" : {
              "text" : "        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18ecf8f845aa0094:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/uploads.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 92
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        encryptor, padder = get_blob_encryptor_and_padder(\n            encryption_options.get('cek'),\n            encryption_options.get('vector'),\n            uploader_class is not PageBlobChunkUploader)\n        kwargs['encryptor'] = encryptor\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91db92eb10ea4966:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/uploads.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 93
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        encryptor, padder = get_blob_encryptor_and_padder(\n            encryption_options.get('cek'),\n            encryption_options.get('vector'),\n            uploader_class is not PageBlobChunkUploader)\n        kwargs['encryptor'] = encryptor\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91db92eb10ea4966:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/uploads_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 94
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        encryptor, padder = get_blob_encryptor_and_padder(\n            encryption_options.get('cek'),\n            encryption_options.get('vector'),\n            uploader_class is not PageBlobChunkUploader)\n        kwargs['encryptor'] = encryptor\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91db92eb10ea4966:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/iv-sources",
      "ruleIndex" : 3,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/iv-sources",
        "index" : 3
      },
      "message" : {
        "text" : "Block mode IV/Nonce source"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/uploads_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 95
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        encryptor, padder = get_blob_encryptor_and_padder(\n            encryption_options.get('cek'),\n            encryption_options.get('vector'),\n            uploader_class is not PageBlobChunkUploader)\n        kwargs['encryptor'] = encryptor\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "91db92eb10ea4966:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric.ec import EllipticCurvePrivateKey\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.x509.base import load_pem_x509_certificate\nfrom cryptography.x509 import Certificate\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8d65fe236ce4540:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric.ec import EllipticCurvePrivateKey\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.x509.base import load_pem_x509_certificate\nfrom cryptography.x509 import Certificate\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8d65fe236ce4540:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 74,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 28,
            "endLine" : 82,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 84,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = 'local:' + kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/ec_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 59,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "        curve_cls = _kv_crv_to_crypto_cls[curve]\n\n        public_numbers = EllipticCurvePublicNumbers(x, y, curve_cls())\n        self._public_key = public_numbers.public_key(default_backend())\n        self._private_key = None\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5cbcaa656b9df6bd:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 28,
            "endLine" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 64,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 97,
            "startColumn" : 25,
            "endColumn" : 106
          },
          "contextRegion" : {
            "startLine" : 95,
            "endLine" : 99,
            "snippet" : {
              "text" : "        key.key_ops = RsaKey.PRIVATE_KEY_DEFAULT_OPS\n        # pylint:disable=protected-access\n        key._rsa_impl = generate_private_key(public_exponent=e, key_size=size, backend=default_backend())\n        return key\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2bb08a85b5bdfc0:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "from cryptography.exceptions import InvalidSignature\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb0c614f771aa806:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 5,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bee962d939220de:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 5,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32b2290994f46880:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 5,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "532d126267ee34f7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 5,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce965f34b2f2e8c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a72fde53b241843:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edbda524754e6e04:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1231e96840de149:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 18,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 16,
            "endLine" : 20,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography import x509\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509 import (\n    BasicConstraints,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d5daaf648d56a63:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm SECP256R1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 37,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    def _create_ecds_key():  # type: () -> str\n        return (\n            ec.generate_private_key(ec.SECP256R1(), backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f899d206ecb96580:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 59,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import ec, rsa\nfrom cryptography.x509 import (\n    BasicConstraints,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1b5048875916efe:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/azure/storage/fileshare/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_artifact_cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 73,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 71,
            "endLine" : 75,
            "snippet" : {
              "text" : "        \"\"\"Hash the file content in the file list.\"\"\"\n        ordered_file_list = copy.copy(file_list)\n        hasher = hashlib.sha256()\n        ordered_file_list.sort()\n        for item in ordered_file_list:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f6f76aa84b9cda0f:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 236,
            "startColumn" : 13,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 234,
            "endLine" : 238,
            "snippet" : {
              "text" : "\ndef get_object_hash(path: Union[str, Path], ignore_file: IgnoreFile = IgnoreFile()) -> str:\n    _hash = hashlib.md5(b\"Initialize for october 2021 AML CLI version\") # nosec\n    if Path(path).is_dir():\n        object_hash = _get_dir_hash(directory=path, _hash=_hash, ignore_file=ignore_file)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "54258820c50055f0:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 292,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 290,
            "endLine" : 294,
            "snippet" : {
              "text" : "    # file_list is a list of tuples, (absolute_path, relative_path)\n\n    _hash = hashlib.sha256()\n    # Add file count to the hash and add '#' around file name then add each file's size to avoid collision like:\n    # Case 1:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d93a85f4c244d05f:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/_asset_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 18,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "    from azure.ai.ml.operations import ComponentOperations, DataOperations, EnvironmentOperations, ModelOperations\n\nhash_type = type(hashlib.md5()) # nosec\n\nmodule_logger = logging.getLogger(__name__)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "892769705b1b1e70:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/appconfiguration/azure-appconfiguration/azure/appconfiguration/_azure_appconfiguration_requests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 41,
            "endLine" : 45,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/appconfiguration/azure-appconfiguration/azure/appconfiguration/_azure_appconfiguration_requests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 61,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        decoded_secret = base64.b64decode(self._credentials.secret)\n        digest = hmac.new(\n            decoded_secret, string_to_sign.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n        signature = base64.b64encode(digest).decode(\"utf-8\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "523636bba857cfc5:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoretable/azure/eventhub/extensions/checkpointstoretable/_vendor/data/tables/_common_conversion.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode(\"utf-8\")\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = _encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/tables/azure-data-tables/azure/data/tables/_common_conversion.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "    if isinstance(string_to_sign, six.text_type):\n        string_to_sign = string_to_sign.encode(\"utf-8\")\n    signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n    digest = signed_hmac_sha256.digest()\n    encoded_digest = _encode_base64(digest)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889faf:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventgrid/azure-eventgrid/azure/eventgrid/_helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 53,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(key)\n    bytes_message = message.encode(\"ascii\")\n    hmac_new = hmac.new(decoded_key, bytes_message, hashlib.sha256).digest()\n\n    return base64.b64encode(hmac_new)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd3467573a67c81d:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/containerregistry/azure-containerregistry/azure/containerregistry/_helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 24,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "    value = data.read()\n    data.seek(0)\n    return \"sha256:\" + hashlib.sha256(value).hexdigest()\n\ndef _validate_digest(data, digest):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ebef35054332f6a:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 21,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "    if rootNode.is_file():\n        return rootNode.bytehash\n    h = hashlib.new(HASH_ALGORITHM)\n    for child in rootNode.children:\n        if child.is_file():\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a834ccfaa7429768:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 21,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "\ndef _get_hash(filePath, name, file_type):\n    h = hashlib.new(HASH_ALGORITHM)\n    if not os.access(filePath, os.R_OK):\n        print(filePath, os.R_OK)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4bade7156d18692:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 18,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from collections import deque\nHASH_FILE_CHUNK_SIZE = 65536\nHASH_ALGORITHM = \"sha512\"\n\n''' Copied from ml-components\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3de781d92a2aefc4:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_internal/entities/_merkle_tree.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 15,
            "endColumn" : 15
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from collections import deque\nHASH_FILE_CHUNK_SIZE = 65536\nHASH_ALGORITHM = \"sha512\"\n\n''' Copied from ml-components\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3de781d92a2aefc4:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 51,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.hashes import SHA256\nfrom cryptography.exceptions import InvalidSignature\nfrom cryptography.hazmat.backends import default_backend\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ee9d1c10265735cd:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/entities/_util.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 167,
            "startColumn" : 16,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 165,
            "endLine" : 169,
            "snippet" : {
              "text" : "def get_md5_string(text):\n    try:\n        return hashlib.md5(text.encode(\"utf8\")).hexdigest()  # nosec\n    except Exception as ex:\n        raise ex\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e08b2576270b1ae:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/azure/eventhub/_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 368,
            "startColumn" : 71,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 366,
            "endLine" : 370,
            "snippet" : {
              "text" : "    ttl = int(expiry)\n    sign_key = '%s\\n%d' % (encoded_uri, ttl)\n    signature = b64encode(HMAC(encoded_key, sign_key.encode('utf-8'), sha256).digest())\n    result = {\n        'sr': audience,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "92a10a0e0b0c14bc:1",
        "primaryLocationStartColumnFingerprint" : "66"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/azure/eventhub/_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "import logging\nfrom base64 import b64encode\nfrom hashlib import sha256\nfrom hmac import HMAC\nfrom urllib.parse import urlencode, quote_plus\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f31ebc7bbe610d1:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 40,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "\n        cert = x509.load_pem_x509_certificate(pem_bytes, default_backend())\n        fingerprint = cert.fingerprint(hashes.SHA1())  # nosec\n        self._thumbprint = six.ensure_str(base64.urlsafe_b64encode(fingerprint), encoding=\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d2b0c3158a695e1c:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 70,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 42,
            "snippet" : {
              "text" : "    def sign(self, plaintext: bytes) -> bytes:\n        \"\"\"Sign bytes using RS256\"\"\"\n        return self._private_key.sign(plaintext, padding.PKCS1v15(), hashes.SHA256())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e4a906f58573d38:1",
        "primaryLocationStartColumnFingerprint" : "61"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 32,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        self._aes_key = key[: len(key) // 2]\n        self._hmac_key = key[len(key) // 2 :]\n        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66444cd132b87b14:1",
        "primaryLocationStartColumnFingerprint" : "23"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 54,
            "endColumn" : 67
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        self._aes_key = key[: len(key) // 2]\n        self._hmac_key = key[len(key) // 2 :]\n        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66444cd132b87b14:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 76,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        self._aes_key = key[: len(key) // 2]\n        self._hmac_key = key[len(key) // 2 :]\n        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "66444cd132b87b14:1",
        "primaryLocationStartColumnFingerprint" : "67"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 34,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "\n    body = text.encode(\"utf-8\")\n    digest = hmac.new(key, body, sha256).digest()\n    signature = base64.encodebytes(digest).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "abfc9f52375c9c08:1",
        "primaryLocationStartColumnFingerprint" : "29"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "\nimport base64\nfrom hashlib import sha256\nimport hmac\nimport warnings\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5d82bd0a80a78617:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/servicebus/azure-servicebus/samples/sync_samples/authenticate_using_azure_sas_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/servicebus/azure-servicebus/samples/async_samples/authenticate_using_azure_sas_credential_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/sync_samples/authenticate_with_azure_sas_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/authenticate_with_azure_sas_credential_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/sync_samples/authenticate_with_sas_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/authenticate_with_sas_token_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/batch/azure-batch/azure/batch/batch_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 61,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 105,
            "endLine" : 109,
            "snippet" : {
              "text" : "            raise ValueError(\"Invalid key value: {}\".format(self._key))\n\n        signed_hmac_sha256 = hmac.HMAC(key, string_to_sign, hashlib.sha256)\n        digest = signed_hmac_sha256.digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "eeef258b0d889f54:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 36,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "    private_key = serialization.load_pem_private_key(certificate_data, password, backend=default_backend())\n    cert = x509.load_pem_x509_certificate(certificate_data, default_backend())\n    fingerprint = cert.fingerprint(hashes.SHA1())  # nosec\n    return _Cert(certificate_data, private_key, fingerprint)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de3516adb8a05bd:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 36,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "    pem_bytes = b\"\".join(pem_sections)\n\n    fingerprint = cert.fingerprint(hashes.SHA1())  # nosec\n\n    return _Cert(pem_bytes, private_key, fingerprint)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "617c85d8f30aff78:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "class Ecdsa256(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es256_k\n    _default_hash_algorithm = hashes.SHA256()\n    coordinate_length = 32\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83de77f214f62dc5:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 55,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 53,
            "endLine" : 57,
            "snippet" : {
              "text" : "class Es256(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es256\n    _default_hash_algorithm = hashes.SHA256()\n    coordinate_length = 32\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b5d49d577d097473:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "class Es384(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es384\n    _default_hash_algorithm = hashes.SHA384()\n    coordinate_length = 48\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fac763787b16885:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/ecdsa.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "class Es512(_Ecdsa):\n    _name = KeyVaultSignatureAlgorithm.es512\n    _default_hash_algorithm = hashes.SHA512()\n    coordinate_length = 66\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3897e12fa3de2575:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 51,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : ")\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n    aes_key_wrap,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86b169c6f2975a0e:1",
        "primaryLocationStartColumnFingerprint" : "50"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/aio/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 123,
            "startColumn" : 23,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 121,
            "endLine" : 125,
            "snippet" : {
              "text" : "        json_repr = json.dumps(self.make_hash(res)).encode(\"utf-8\")\n\n        hash_object = hashlib.sha1(json_repr)   # nosec\n        hashed_result = hash_object.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a933e9c7f729b85c:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/aio/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 130,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 128,
            "endLine" : 132,
            "snippet" : {
              "text" : "            json_repr = json.dumps(self.make_hash(res)).encode(\"utf-8\")\n\n            hash_object = hashlib.sha1(json_repr)   # nosec\n            hashed_result = hash_object.hexdigest()\n        self.last_result.add(hashed_result)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb1805a60d382256:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 23,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "        json_repr = json_repr.encode(\"utf-8\")\n\n        hash_object = hashlib.sha1(json_repr)   # nosec\n        hashed_result = hash_object.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a933e9c7f729b85c:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/cosmos/azure-cosmos/azure/cosmos/_execution_context/endpoint_component.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 139,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 137,
            "endLine" : 141,
            "snippet" : {
              "text" : "            json_repr = json_repr.encode(\"utf-8\")\n\n            hash_object = hashlib.sha1(json_repr)   # nosec\n            hashed_result = hash_object.hexdigest()\n        self.last_result.add(hashed_result)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb1805a60d382256:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/servicebus/azure-servicebus/samples/sync_samples/generate_sas_token_and_authenticate_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 29,
            "startColumn" : 57,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 27,
            "endLine" : 31,
            "snippet" : {
              "text" : "    expiry = str(int(time.time() + token_ttl))\n    string_to_sign = (uri + '\\n' + expiry).encode('utf-8')\n    signed_hmac_sha256 = hmac.HMAC(sas, string_to_sign, hashlib.sha256)\n    signature = url_parse_quote(base64.b64encode(signed_hmac_sha256.digest()))\n    return 'SharedAccessSignature sr={}&sig={}&se={}&skn={}'.format(uri, signature, expiry, sas_name)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6f8c3b0a693276cc:1",
        "primaryLocationStartColumnFingerprint" : "52"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/iot_hub_connection_string_receive_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 74,
            "endColumn" : 80
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "    ttl = int(expiry)\n    sign_key = '%s\\n%d' % (encoded_uri, ttl)\n    signature = b64encode(HMAC(b64decode(key), sign_key.encode('utf-8'), sha256).digest())\n    result = {\n        'sr': uri,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19dcc113aaf9d972:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub/samples/async_samples/iot_hub_connection_string_receive_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "import time\nfrom base64 import b64encode, b64decode\nfrom hashlib import sha256\nfrom hmac import HMAC\nimport asyncio\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18b2b3777dea3dc9:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/azure/storage/fileshare/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 342,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 340,
            "endLine" : 344,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 325,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 323,
            "endLine" : 327,
            "snippet" : {
              "text" : "    @staticmethod\n    def get_content_md5(data):\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 356,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 354,
            "endLine" : 358,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 325,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 323,
            "endLine" : 327,
            "snippet" : {
              "text" : "    @staticmethod\n    def get_content_md5(data):\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-datalake/azure/storage/filedatalake/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 342,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 340,
            "endLine" : 344,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_shared/policies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 348,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 346,
            "endLine" : 350,
            "snippet" : {
              "text" : "        # we have to perform a None check.\n        data = data or b\"\"\n        md5 = hashlib.md5() # nosec\n        if isinstance(data, bytes):\n            md5.update(data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e88d8d736ace892b:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-networktraversal/azure/communication/networktraversal/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-networktraversal/azure/communication/networktraversal/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-email/azure/communication/email/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-email/azure/communication/email/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-jobrouter/azure/communication/jobrouter/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-jobrouter/azure/communication/jobrouter/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-rooms/azure/communication/rooms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-rooms/azure/communication/rooms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-chat/azure/communication/chat/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-chat/azure/communication/chat/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-identity/azure/communication/identity/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-identity/azure/communication/identity/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-sms/azure/communication/sms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-sms/azure/communication/sms/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-phonenumbers/azure/communication/phonenumbers/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 52,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        digest = hmac.new(\n            decoded_secret, value.encode(\"utf-8\"), hashlib.sha256\n        ).digest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "545f4cabfdf9867e:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/communication/azure-communication-phonenumbers/azure/communication/phonenumbers/_shared/policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        if request.http_request.body is None:\n            request.http_request.body = \"\"\n        content_digest = hashlib.sha256(\n            (request.http_request.body.encode(\"utf-8\"))\n        ).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a9c035cc08b1428d:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 39,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "\n    def create_encryptor(self, key):\n        return _RsaOaepEncryptor(key, hashes.SHA1)\n\n    def create_decryptor(self, key):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "37b9d5e4e1158502:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 39,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "\n    def create_decryptor(self, key):\n        return _RsaOaepDecryptor(key, hashes.SHA1)\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "619df96cdb0bc3e3:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 39,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "\n    def create_encryptor(self, key):\n        return _RsaOaepEncryptor(key, hashes.SHA256)\n\n    def create_decryptor(self, key):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7a1ad1a8f9c5eea8:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 39,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 72,
            "endLine" : 76,
            "snippet" : {
              "text" : "\n    def create_decryptor(self, key):\n        return _RsaOaepDecryptor(key, hashes.SHA256)\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "13a680056f29cfd4:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "class Ps256(RsaSsaPss):\n    _name = KeyVaultSignatureAlgorithm.ps256\n    _default_hash_algorithm = hashes.SHA256()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b879c96372e6a3c0:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "class Ps384(RsaSsaPss):\n    _name = KeyVaultSignatureAlgorithm.ps384\n    _default_hash_algorithm = hashes.SHA384()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fce903e06a652c7b:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "class Ps512(RsaSsaPss):\n    _name = KeyVaultSignatureAlgorithm.ps512\n    _default_hash_algorithm = hashes.SHA512()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "db65c2b8fc273b0d:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "class Rs256(RsaSsaPkcs1v15):\n    _name = KeyVaultSignatureAlgorithm.rs256\n    _default_hash_algorithm = hashes.SHA256()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5ab60bf7f4866d9c:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "class Rs384(RsaSsaPkcs1v15):\n    _name = KeyVaultSignatureAlgorithm.rs384\n    _default_hash_algorithm = hashes.SHA384()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9f254674ec04f657:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 31,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "class Rs512(RsaSsaPkcs1v15):\n    _name = KeyVaultSignatureAlgorithm.rs512\n    _default_hash_algorithm = hashes.SHA512()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "542371c5afa35c04:1",
        "primaryLocationStartColumnFingerprint" : "26"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_get_set_policy.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 247,
            "startColumn" : 34,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 245,
            "endLine" : 249,
            "snippet" : {
              "text" : "\n            # Generate the Sha256 hash of the attestation token.\n            hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n            hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n            expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_get_set_policy_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 34,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "\n            # Generate the Sha256 hash of the attestation token.\n            hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n            hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n            expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/deviceupdate/azure-iot-deviceupdate/samples/ImportUpdate/sample_import_update.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "    with open(file_path, \"rb\") as f:\n        bytes = f.read()  # read entire file as bytes\n        return base64.b64encode(hashlib.sha256(bytes).digest()).decode(\"utf-8\")\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "60b0f2f035b3555c:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 93,
            "startColumn" : 23,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 91,
            "endLine" : 95,
            "snippet" : {
              "text" : "        builder.sign(\n            private_key=signing_key,\n            algorithm=hashes.SHA256(),\n            backend=default_backend(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e00b3c5eb69bb148:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "\nclass Sha256(_Sha2HashAlgorithm):\n    _algorithm_cls = hashes.SHA256\n    _name = \"SHA256\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "696bd588f9d4b853:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\nclass Sha384(_Sha2HashAlgorithm):\n    _algorithm_cls = hashes.SHA384\n    _name = \"SHA384\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b63b1d8ffc029ea8:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/sha_2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 22,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "\nclass Sha512(_Sha2HashAlgorithm):\n    _algorithm_cls = hashes.SHA512\n    _name = \"SHA512\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e141bf76747fbb5a:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/perfstress_tests/sign.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 72
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "        self.test_algorithm = SignatureAlgorithm.rs256\n        plaintext = os.urandom(2048)\n        hasher = hashlib.sha256()\n        hasher.update(plaintext)\n        self.digest = hasher.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f6ca87a63ed0ae31:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 218,
            "startColumn" : 27,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 216,
            "endLine" : 220,
            "snippet" : {
              "text" : "            builder.sign(\n                private_key=signing_key,\n                algorithm=hashes.SHA256(),\n                backend=default_backend(),\n            )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e00b3c5eb69bb148:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 78,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "    else:\n        assert \"x5c\" not in deserialized_header\n    assert urlsafeb64_decode(deserialized_header[\"x5t\"]) == cert.fingerprint(hashes.SHA1())  # nosec\n\n    cert.public_key().verify(signature, signed_part.encode(\"utf-8\"), padding.PKCS1v15(), hashes.SHA256())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9b1db06cadd5e22f:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 280,
            "startColumn" : 90,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 278,
            "endLine" : 282,
            "snippet" : {
              "text" : "    assert urlsafeb64_decode(deserialized_header[\"x5t\"]) == cert.fingerprint(hashes.SHA1())  # nosec\n\n    cert.public_key().verify(signature, signed_part.encode(\"utf-8\"), padding.PKCS1v15(), hashes.SHA256())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6939e177f4ffed4b:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/tests/test_confidential_ledger_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 75
          },
          "region" : {
            "startLine" : 422,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 420,
            "endLine" : 424,
            "snippet" : {
              "text" : "        assert (\n            constitution[\"digest\"].lower() == \n            hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n        )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae34a0705e655712:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/tests/test_confidential_ledger_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 473,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 471,
            "endLine" : 475,
            "snippet" : {
              "text" : "        assert (\n            constitution[\"digest\"].lower() == \n            hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n        )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "12202e8f8b604841:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 155,
            "startColumn" : 58,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 153,
            "endLine" : 157,
            "snippet" : {
              "text" : "        crypto_client._client = None\n\n        crypto_client.verify(SignatureAlgorithm.es256_k, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n\n    @pytest.mark.parametrize(\"api_version,is_hsm\",all_api_versions)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bd14956ba7c7b350:1",
        "primaryLocationStartColumnFingerprint" : "49"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 172,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 170,
            "endLine" : 174,
            "snippet" : {
              "text" : "\n        crypto_client.encrypt(EncryptionAlgorithm.rsa_oaep, self.plaintext)\n        crypto_client.verify(SignatureAlgorithm.rs256, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n        crypto_client.wrap_key(KeyWrapAlgorithm.rsa_oaep, self.plaintext)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e831f21ce3088517:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e682f7e6376664:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 220,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 218,
            "endLine" : 222,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90de5662b6fb840:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 460,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 458,
            "endLine" : 462,
            "snippet" : {
              "text" : "            crypto_client = self.create_crypto_client(key, api_version=key_client.api_version)\n            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 461,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 459,
            "endLine" : 463,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 462,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 460,
            "endLine" : 464,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 463,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 461,
            "endLine" : 465,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 464,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 462,
            "endLine" : 466,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 465,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 463,
            "endLine" : 467,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 486,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 484,
            "endLine" : 488,
            "snippet" : {
              "text" : "            local_client = CryptographyClient.from_jwk(key.key)\n            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 487,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 485,
            "endLine" : 489,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 488,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 486,
            "endLine" : 490,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 489,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 487,
            "endLine" : 491,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 490,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 488,
            "endLine" : 492,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 491,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 489,
            "endLine" : 493,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 507,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 505,
            "endLine" : 509,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 508,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 506,
            "endLine" : 510,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:1",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 509,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 507,
            "endLine" : 511,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 510,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 508,
            "endLine" : 512,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 532,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 530,
            "endLine" : 534,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 533,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 531,
            "endLine" : 535,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:2",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 535,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 533,
            "endLine" : 537,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 62,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "        crypto_client._client = None\n\n        await crypto_client.verify(SignatureAlgorithm.es256, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n\n    @pytest.mark.asyncio\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "115829314658a805:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 62,
            "endColumn" : 76
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "\n        await crypto_client.encrypt(EncryptionAlgorithm.rsa_oaep, self.plaintext)\n        await crypto_client.verify(SignatureAlgorithm.rs256, hashlib.sha256(self.plaintext).digest(), self.plaintext)\n        await crypto_client.wrap_key(KeyWrapAlgorithm.rsa_oaep, self.plaintext)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c6961177ea0307a:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 199,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 197,
            "endLine" : 201,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4fa72d9b38d0a0aa:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 221,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 219,
            "endLine" : 223,
            "snippet" : {
              "text" : "        key_name = self.get_resource_name(\"keysign\")\n\n        md = hashlib.sha256()\n        md.update(self.plaintext)\n        digest = md.digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "90de5662b6fb840:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 471,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 469,
            "endLine" : 473,
            "snippet" : {
              "text" : "            crypto_client = self.create_crypto_client(key, is_async=True, api_version=key_client.api_version)\n            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 472,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 470,
            "endLine" : 474,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 473,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 471,
            "endLine" : 475,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps256, hashlib.sha256),\n                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 474,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 472,
            "endLine" : 476,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps384, hashlib.sha384),\n                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 475,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 473,
            "endLine" : 477,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.ps512, hashlib.sha512),\n                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 476,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 474,
            "endLine" : 478,
            "snippet" : {
              "text" : "                (SignatureAlgorithm.rs256, hashlib.sha256),\n                (SignatureAlgorithm.rs384, hashlib.sha384),\n                (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 498,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 496,
            "endLine" : 500,
            "snippet" : {
              "text" : "            local_client = CryptographyClient.from_jwk(key.key)\n            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 499,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 497,
            "endLine" : 501,
            "snippet" : {
              "text" : "            for signature_algorithm, hash_function in (\n                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 500,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 498,
            "endLine" : 502,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps256, hashlib.sha256),\n                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 501,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 499,
            "endLine" : 503,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps384, hashlib.sha384),\n                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 502,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 500,
            "endLine" : 504,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.ps512, hashlib.sha512),\n                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "89e6fe74d6b7d648:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 503,
            "startColumn" : 48,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 501,
            "endLine" : 505,
            "snippet" : {
              "text" : "                    (SignatureAlgorithm.rs256, hashlib.sha256),\n                    (SignatureAlgorithm.rs384, hashlib.sha384),\n                    (SignatureAlgorithm.rs512, hashlib.sha512),\n            ):\n                digest = hash_function(self.plaintext).digest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "76c279f8709e501c:2",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 520,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 518,
            "endLine" : 522,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 521,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 519,
            "endLine" : 523,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:1",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 522,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 520,
            "endLine" : 524,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 523,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 521,
            "endLine" : 525,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 546,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 544,
            "endLine" : 548,
            "snippet" : {
              "text" : "        \"\"\"Sign with Key Vault, verify locally\"\"\"\n        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e5f713bd9e136a31:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 547,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 545,
            "endLine" : 549,
            "snippet" : {
              "text" : "        matrix = {\n            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "503fb1cf9d695224:2",
        "primaryLocationStartColumnFingerprint" : "51"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 548,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 546,
            "endLine" : 550,
            "snippet" : {
              "text" : "            KeyCurveName.p_256: (SignatureAlgorithm.es256, hashlib.sha256),\n            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b93750381eade141:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_crypto_client_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 549,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 547,
            "endLine" : 551,
            "snippet" : {
              "text" : "            KeyCurveName.p_256_k: (SignatureAlgorithm.es256_k, hashlib.sha256),\n            KeyCurveName.p_384: (SignatureAlgorithm.es384, hashlib.sha384),\n            KeyCurveName.p_521: (SignatureAlgorithm.es512, hashlib.sha512),\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d53a8bcd2ff0eb9d:2",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_examples_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "        from azure.keyvault.keys.crypto import SignatureAlgorithm\n\n        digest = hashlib.sha256(b\"plaintext\").digest()\n\n        # sign returns the signature and the metadata required to verify it\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd8ab8c8643a8efe:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_examples_crypto_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "        from azure.keyvault.keys.crypto import SignatureAlgorithm\n\n        digest = hashlib.sha256(b\"plaintext\").digest()\n\n        # sign returns the signature and the metadata required to verify it\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd8ab8c8643a8efe:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/tests/internal_utils/unittests/test_get_content_hash.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "\n        hash = get_content_hash(tmp_path)\n        actual_hash = hashlib.sha256()\n        actual_hash.update(b\"4\")\n        actual_hash.update(b\"#file1.txt#\" + str(len(content1)).encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "35b1c8a65a05d13a:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/tests/internal_utils/unittests/test_get_content_hash.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "\n        hash = get_content_hash(file_path)\n        actual_hash = hashlib.sha256()\n        actual_hash.update(b\"1\")\n        actual_hash.update(b\"#file1.txt#\" + str(len(content1)).encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8e5f03fd236720b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 65,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    \"key,algorithm,hash_function\",\n    (\n        (EC_KEYS[KeyCurveName.p_256], SignatureAlgorithm.es256, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed8b1f7ecbc9fec2:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 69,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "    (\n        (EC_KEYS[KeyCurveName.p_256], SignatureAlgorithm.es256, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n        (EC_KEYS[KeyCurveName.p_521], SignatureAlgorithm.es512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "df9c0dd139fdb78a:1",
        "primaryLocationStartColumnFingerprint" : "60"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 65,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 21,
            "endLine" : 25,
            "snippet" : {
              "text" : "        (EC_KEYS[KeyCurveName.p_256], SignatureAlgorithm.es256, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n        (EC_KEYS[KeyCurveName.p_521], SignatureAlgorithm.es512, hashlib.sha512),\n    ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d69ca1f485877aa:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 65,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        (EC_KEYS[KeyCurveName.p_256_k], SignatureAlgorithm.es256_k, hashlib.sha256),\n        (EC_KEYS[KeyCurveName.p_384], SignatureAlgorithm.es384, hashlib.sha384),\n        (EC_KEYS[KeyCurveName.p_521], SignatureAlgorithm.es512, hashlib.sha512),\n    ),\n)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4412c881b982e35d:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 86,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 84,
            "endLine" : 88,
            "snippet" : {
              "text" : "    (\n        (\n            (SignatureAlgorithm.ps256, hashlib.sha256),\n            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "39e26ba4d6c123e5:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 87,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 85,
            "endLine" : 89,
            "snippet" : {
              "text" : "        (\n            (SignatureAlgorithm.ps256, hashlib.sha256),\n            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "341ec58306023f27:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 88,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 86,
            "endLine" : 90,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.ps256, hashlib.sha256),\n            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e80bb1d55d7f9ded:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 91,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.ps384, hashlib.sha384),\n            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n            (SignatureAlgorithm.rs512, hashlib.sha512),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "322897f8f66847a1:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.ps512, hashlib.sha512),\n            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n            (SignatureAlgorithm.rs512, hashlib.sha512),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b167f4b1b5642fae:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/tests/test_local_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 91,
            "startColumn" : 40,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 89,
            "endLine" : 93,
            "snippet" : {
              "text" : "            (SignatureAlgorithm.rs256, hashlib.sha256),\n            (SignatureAlgorithm.rs384, hashlib.sha384),\n            (SignatureAlgorithm.rs512, hashlib.sha512),\n        )\n    ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "597c44e13861d6b0:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/batch/azure-mgmt-batch/tests/test_mgmt_batch.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "def get_redacted_key(key):\n    redacted_value = \"redacted\"\n    digest = hashlib.sha256(six.ensure_binary(key)).digest()\n    redacted_value += six.ensure_str(binascii.hexlify(digest))[:6]\n    return redacted_value\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3f9864fc03d6b861:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 69,
            "snippet" : {
              "text" : "        expected_policy = AttestationPolicyToken(attestation_policy)\n\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 138,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 136,
            "endLine" : 140,
            "snippet" : {
              "text" : "            signing_certificate=signing_certificate,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:2",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 84
          },
          "region" : {
            "startLine" : 175,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 173,
            "endLine" : 177,
            "snippet" : {
              "text" : "            signing_certificate=signing_certificate,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:3",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 78,
            "snippet" : {
              "text" : "        expected_policy = AttestationPolicyToken(attestation_policy)\n\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "            signing_certificate=signing_certificate,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:2",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_policy_getset_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 85
          },
          "region" : {
            "startLine" : 197,
            "startColumn" : 30,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 195,
            "endLine" : 199,
            "snippet" : {
              "text" : "            signing_certificate=decoded_cert,\n        )\n        hasher = hashes.Hash(hashes.SHA256(), backend=default_backend())\n        hasher.update(expected_policy.to_jwt_string().encode(\"utf-8\"))\n        expected_hash = hasher.finalize()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb17a1815cb771ef:3",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tools/azure-devtools/src/azure_devtools/scenario_tests/utilities.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 86
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 12,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "\ndef get_sha1_hash(file_path):\n    sha1 = hashlib.sha256()\n    with open(file_path, \"rb\") as f:\n        while True:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b4feb9d0c6db4ea4:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/ml/azure-ai-ml/azure/ai/ml/_utils/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 87
          },
          "region" : {
            "startLine" : 604,
            "startColumn" : 19,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 602,
            "endLine" : 606,
            "snippet" : {
              "text" : "    # serialize dict with order so same dict will have same content\n    serialized_component_interface = json.dumps(items, sort_keys=True)\n    object_hash = hashlib.md5() # nosec\n    object_hash.update(serialized_component_interface.encode(\"utf-8\"))\n    return str(UUID(object_hash.hexdigest()))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b0a149381a0d26f:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/samples/verify_service.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 88
          },
          "region" : {
            "startLine" : 97,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 95,
            "endLine" : 99,
            "snippet" : {
              "text" : "        assert (\n            constitution[\"digest\"].lower() ==\n            hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n        )\n        print(f'\\tConstitution (truncated): {constitution[\"script\"][:24]}...')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "adaad808c090e137:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/confidentialledger/azure-confidentialledger/samples/verify_service_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 89
          },
          "region" : {
            "startLine" : 104,
            "startColumn" : 21,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 102,
            "endLine" : 106,
            "snippet" : {
              "text" : "                assert (\n                    constitution[\"digest\"].lower() ==\n                    hashlib.sha256(constitution[\"script\"].encode()).hexdigest().lower()\n                )\n                print(f'\\tConstitution (truncated): {constitution[\"script\"][:24]}...')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "adaad808c090e137:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 518,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 516,
            "endLine" : 520,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 518,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 516,
            "endLine" : 520,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 31,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    def __init__(self, key, iv):\n        super(_AesCbcCryptoTransform, self).__init__(key)\n        self._cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())\n\n    def transform(self, data):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7a216566210ab03:1",
        "primaryLocationStartColumnFingerprint" : "22"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 31,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n        self._tag = auth_tag or bytearray()\n        self._hmac = hmac.HMAC(self._hmac_key, hash_algorithm, backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d005b47f539d092:1",
        "primaryLocationStartColumnFingerprint" : "22"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 16,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "class _AesKeyWrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_wrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4cb5471014fac830:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 16,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "class _AesKeyUnwrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_unwrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edab668dc57b2757:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dac8083f60d87f47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe05c485feda2d0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 209,
            "startColumn" : 17,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 207,
            "endLine" : 211,
            "snippet" : {
              "text" : "\n    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c41c33c9b6bb884e:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2703226f716907b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "739c3aa75a188ed9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils import recorded_by_proxy\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aea659ac6f2f07a:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils.aio import recorded_by_proxy_async\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f78740b04f326b3:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 447,
            "startColumn" : 21,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 445,
            "endLine" : 449,
            "snippet" : {
              "text" : "        # Create decryption cipher\n        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9678eb31fde772:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 452,
            "startColumn" : 21,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 450,
            "endLine" : 454,
            "snippet" : {
              "text" : "        # Create decryption cipher\n        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b9678eb31fde772:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 28,
            "endLine" : 82,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 84,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = 'local:' + kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 81,
            "startColumn" : 58,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 79,
            "endLine" : 83,
            "snippet" : {
              "text" : "    def __init__(self, kid):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 59,
            "startColumn" : 58,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 57,
            "endLine" : 61,
            "snippet" : {
              "text" : "    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 28,
            "endLine" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 64,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 58,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 59,
            "startColumn" : 58,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 57,
            "endLine" : 61,
            "snippet" : {
              "text" : "    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 97,
            "startColumn" : 25,
            "endColumn" : 106
          },
          "contextRegion" : {
            "startLine" : 95,
            "endLine" : 99,
            "snippet" : {
              "text" : "        key.key_ops = RsaKey.PRIVATE_KEY_DEFAULT_OPS\n        # pylint:disable=protected-access\n        key._rsa_impl = generate_private_key(public_exponent=e, key_size=size, backend=default_backend())\n        return key\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2bb08a85b5bdfc0:1",
        "primaryLocationStartColumnFingerprint" : "16"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 91,
            "startColumn" : 44,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 89,
            "endLine" : 93,
            "snippet" : {
              "text" : "\n    @staticmethod\n    def generate(kid=None, kty=\"RSA\", size=2048, e=65537):\n        key = RsaKey()\n        key.kid = kid or str(uuid.uuid4())\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 41,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm SECP256R1 with key config source [ControlFlowNode for Attribute()](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 13,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    def _create_ecds_key():  # type: () -> str\n        return (\n            ec.generate_private_key(ec.SECP256R1(), backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f899d206ecb96580:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 37,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    def _create_ecds_key():  # type: () -> str\n        return (\n            ec.generate_private_key(ec.SECP256R1(), backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for Attribute()"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 45,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 788,
            "startColumn" : 25,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 786,
            "endLine" : 790,
            "snippet" : {
              "text" : "                        self.signature_bytes,\n                        signed_data.encode(\"utf-8\"),\n                        padding.PKCS1v15(),\n                        SHA256(),\n                    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1220cdc5dfb6bd81:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 910,
            "startColumn" : 25,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 908,
            "endLine" : 912,
            "snippet" : {
              "text" : "                return_value.encode(\"utf-8\"),\n                algorithm=SHA256(),\n                padding=padding.PKCS1v15(),\n            )\n        else:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4591da3fb1c1e1bf:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 50,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 42,
            "snippet" : {
              "text" : "    def sign(self, plaintext: bytes) -> bytes:\n        \"\"\"Sign bytes using RS256\"\"\"\n        return self._private_key.sign(plaintext, padding.PKCS1v15(), hashes.SHA256())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e4a906f58573d38:1",
        "primaryLocationStartColumnFingerprint" : "41"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 89,
            "startColumn" : 44,
            "endLine" : 92,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 87,
            "endLine" : 94,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n        raise ValueError('Unknown key wrap algorithm.')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59b9925e7f9078c0:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 45,
            "endLine" : 102,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 104,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n        raise ValueError('Unknown key wrap algorithm.')\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "59b9925e7f9078c0:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 44,
            "endLine" : 70,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 72,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 45,
            "endLine" : 81,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 83,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 69,
            "startColumn" : 44,
            "endLine" : 72,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 67,
            "endLine" : 74,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 45,
            "endLine" : 83,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 85,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 67,
            "startColumn" : 44,
            "endLine" : 70,
            "endColumn" : 59
          },
          "contextRegion" : {
            "startLine" : 65,
            "endLine" : 72,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.public_key.encrypt(key,\n                                           OAEP(\n                                               mgf=MGF1(algorithm=SHA1()),  # nosec\n                                               algorithm=SHA1(),    # nosec\n                                               label=None)\n                                           )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 78,
            "startColumn" : 45,
            "endLine" : 81,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 76,
            "endLine" : 83,
            "snippet" : {
              "text" : "        if algorithm == 'RSA':\n            return self.private_key.decrypt(key,\n                                            OAEP(\n                                                mgf=MGF1(algorithm=SHA1()), # nosec\n                                                algorithm=SHA1(),   # nosec\n                                                label=None)\n                                            )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8a80c7fccde5835b:2",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 40,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "class _Rsa1_5Encryptor(CryptoTransform):\n    def transform(self, data):\n        return self._key.encrypt(data, padding.PKCS1v15())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d4c35b812da8c5d3:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 40,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "class _Rsa1_5Decryptor(CryptoTransform):\n    def transform(self, data):\n        return self._key.decrypt(data, padding.PKCS1v15())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "68c6396e57b0a6ed:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 39,
            "startColumn" : 24,
            "endLine" : 41,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 37,
            "endLine" : 43,
            "snippet" : {
              "text" : "\n    def transform(self, data):\n        oaep_padding = padding.OAEP(\n            mgf=padding.MGF1(algorithm=self._hash_cls()), algorithm=self._hash_cls(), label=None\n        )\n        return self._key.decrypt(data, oaep_padding)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe578d670af13fe:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 24,
            "endLine" : 53,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 55,
            "snippet" : {
              "text" : "\n    def transform(self, data):\n        oaep_padding = padding.OAEP(\n            mgf=padding.MGF1(algorithm=self._hash_cls()), algorithm=self._hash_cls(), label=None\n        )\n        return self._key.encrypt(data, oaep_padding)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe578d670af13fe:2",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 29,
            "startColumn" : 53,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 27,
            "endLine" : 31,
            "snippet" : {
              "text" : "class RsaSsaPkcs1v15(SignatureAlgorithm):\n    def create_signature_transform(self, key):\n        return RsaSignatureTransform(key, lambda _: padding.PKCS1v15(), self._default_hash_algorithm)\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7f089a3b1bb2ddde:1",
        "primaryLocationStartColumnFingerprint" : "44"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PSS"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/rsa_signing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 16,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "\n    def _get_padding(self, digest):\n        return padding.PSS(mgf=padding.MGF1(self._default_hash_algorithm), salt_length=len(digest))\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "19b347ac58579328:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm PKCS1V15"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/tests/test_certificate_credential.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 280,
            "startColumn" : 70,
            "endColumn" : 88
          },
          "contextRegion" : {
            "startLine" : 278,
            "endLine" : 282,
            "snippet" : {
              "text" : "    assert urlsafeb64_decode(deserialized_header[\"x5t\"]) == cert.fingerprint(hashes.SHA1())  # nosec\n\n    cert.public_key().verify(signature, signed_part.encode(\"utf-8\"), padding.PKCS1v15(), hashes.SHA256())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6939e177f4ffed4b:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils import recorded_by_proxy\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aea659ac6f2f07a:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils.aio import recorded_by_proxy_async\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f78740b04f326b3:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm AES"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric.ec import EllipticCurvePrivateKey\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.x509.base import load_pem_x509_certificate\nfrom cryptography.x509 import Certificate\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8d65fe236ce4540:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_common.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric.ec import EllipticCurvePrivateKey\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.x509.base import load_pem_x509_certificate\nfrom cryptography.x509 import Certificate\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f8d65fe236ce4540:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/azure/security/attestation/_models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 74,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.serialization import Encoding\nfrom cryptography.x509 import Certificate, load_pem_x509_certificate\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom six import string_types, raise_from\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8903ad145984f851:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_internal/aadclient_certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import padding\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 28,
            "endLine" : 82,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 84,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = 'local:' + kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/identity/azure-identity/azure/identity/_credentials/certificate.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography import x509\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey\nfrom cryptography.hazmat.backends import default_backend\nimport six\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2394d8a1ef45dab9:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 28,
            "endLine" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 64,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 28,
            "endLine" : 60,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 62,
            "snippet" : {
              "text" : "class RSAKeyWrapper:\n    def __init__(self, kid='local:key2'):\n        self.private_key = generate_private_key(public_exponent=65537,\n                                                key_size=2048,\n                                                backend=default_backend())\n        self.public_key = self.private_key.public_key()\n        self.kid = kid\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f1e0c5dd3be88066:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 79
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "    MGF1,\n)\nfrom cryptography.hazmat.primitives.asymmetric.rsa import generate_private_key\nfrom cryptography.hazmat.primitives.hashes import SHA1\nfrom cryptography.hazmat.primitives.keywrap import (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8cbe9ad9134fb788:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 97,
            "startColumn" : 25,
            "endColumn" : 106
          },
          "contextRegion" : {
            "startLine" : 95,
            "endLine" : 99,
            "snippet" : {
              "text" : "        key.key_ops = RsaKey.PRIVATE_KEY_DEFAULT_OPS\n        # pylint:disable=protected-access\n        key._rsa_impl = generate_private_key(public_exponent=e, key_size=size, backend=default_backend())\n        return key\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f2bb08a85b5bdfc0:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "from cryptography.exceptions import InvalidSignature\nfrom cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb0c614f771aa806:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 5,
            "endColumn" : 18
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bee962d939220de:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 5,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "from cryptography.hazmat.primitives.asymmetric.rsa import (\n    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32b2290994f46880:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 5,
            "endColumn" : 21
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "    RSAPrivateKey,\n    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "532d126267ee34f7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 5,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "    RSAPrivateNumbers,\n    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce965f34b2f2e8c:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "    RSAPublicNumbers,\n    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a72fde53b241843:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "    generate_private_key,\n    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edbda524754e6e04:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/rsa_key.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 5,
            "endColumn" : 17
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "    rsa_crt_dmp1,\n    rsa_crt_dmq1,\n    rsa_crt_iqmp,\n)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1231e96840de149:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 9,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "    \"\"\"\n    return (\n        rsa.generate_private_key(65537, 2048, backend=default_backend())\n        .private_bytes(\n            serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/samples/sample_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 18,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 16,
            "endLine" : 20,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography import x509\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509 import (\n    BasicConstraints,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3d5daaf648d56a63:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 174,
            "startColumn" : 13,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 172,
            "endLine" : 176,
            "snippet" : {
              "text" : "    def _create_rsa_key():  # type: () -> str\n        return (\n            rsa.generate_private_key(65537, 2048, backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1ce5bb19f189a9b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 59,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import ec, rsa\nfrom cryptography.x509 import (\n    BasicConstraints,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1b5048875916efe:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 519,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 517,
            "endLine" : 521,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/azure/storage/queue/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 519,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 517,
            "endLine" : 521,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/azure/storage/blob/_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 52,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "    def __init__(self, key, iv):\n        super(_AesCbcCryptoTransform, self).__init__(key)\n        self._cipher = Cipher(algorithms.AES(key), modes.CBC(iv), backend=default_backend())\n\n    def transform(self, data):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7a216566210ab03:1",
        "primaryLocationStartColumnFingerprint" : "43"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_cbc_hmac.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 62,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "        hash_algorithm = {256: hashes.SHA256(), 384: hashes.SHA384(), 512: hashes.SHA512()}[len(key) * 8]\n\n        self._cipher = Cipher(algorithms.AES(self._aes_key), modes.CBC(iv), backend=default_backend())\n        self._tag = auth_tag or bytearray()\n        self._hmac = hmac.HMAC(self._hmac_key, hash_algorithm, backend=default_backend())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d005b47f539d092:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 16,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "class _AesKeyWrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_wrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4cb5471014fac830:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/keyvault/azure-keyvault-keys/azure/keyvault/keys/crypto/_internal/algorithms/aes_kw.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 16,
            "endColumn" : 66
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "class _AesKeyUnwrapTransform(CryptoTransform):\n    def transform(self, data):\n        return aes_key_unwrap(self._key, data, default_backend())\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "edab668dc57b2757:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dac8083f60d87f47:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/samples/blob_samples_client_side_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 57,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 55,
            "endLine" : 59,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n        raise ValueError('Unknown key wrap algorithm.')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ffe05c485feda2d0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob/azure/eventhub/extensions/checkpointstoreblob/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 210,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 208,
            "endLine" : 212,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/eventhub/azure-eventhub-checkpointstoreblob-aio/azure/eventhub/extensions/checkpointstoreblobaio/_vendor/storage/blob/_shared/encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 210,
            "startColumn" : 12,
            "endColumn" : 19
          },
          "contextRegion" : {
            "startLine" : 208,
            "endLine" : 212,
            "snippet" : {
              "text" : "    backend = default_backend()\n    algorithm = AES(cek)\n    mode = CBC(iv)\n    return Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5bc12fa74e8ede8e:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b25005d3fc88de2:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-file-share/tests/encryption_test_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(_ERROR_UNKNOWN_KEY_WRAP_ALGORITHM)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2f38e0dbc0404153:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 20,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "    def wrap_key(self, key, algorithm='A256KW'):\n        if algorithm == 'A256KW':\n            return aes_key_wrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2703226f716907b:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm ECB"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/perfstress_tests/key_wrapper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 26,
            "startColumn" : 20,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 24,
            "endLine" : 28,
            "snippet" : {
              "text" : "    def unwrap_key(self, key, algorithm):\n        if algorithm == 'A256KW':\n            return aes_key_unwrap(self.kek, key, self.backend)\n\n        raise ValueError(\"Unknown key wrap algorithm.\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "739c3aa75a188ed9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils import recorded_by_proxy\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aea659ac6f2f07a:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-blob/tests/test_blob_encryption_v2_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    _GCM_TAG_LENGTH,\n)\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\n\nfrom devtools_testutils.aio import recorded_by_proxy_async\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5f78740b04f326b3:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 448,
            "startColumn" : 16,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 446,
            "endLine" : 450,
            "snippet" : {
              "text" : "        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18ecf8f845aa0094:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 453,
            "startColumn" : 16,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 451,
            "endLine" : 455,
            "snippet" : {
              "text" : "        backend = backends.default_backend()\n        algorithm = AES(content_encryption_key)\n        mode = CBC(encryption_data.content_encryption_IV)\n        cipher = Cipher(algorithm, mode, backend)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "18ecf8f845aa0094:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm GCM"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/storage/azure-storage-queue/tests/test_queue_encryption_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 57,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "from cryptography.hazmat import backends\nfrom cryptography.hazmat.primitives.ciphers import Cipher\nfrom cryptography.hazmat.primitives.ciphers.aead import AESGCM\nfrom cryptography.hazmat.primitives.ciphers.algorithms import AES\nfrom cryptography.hazmat.primitives.ciphers.modes import CBC\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f90e3b8245b3c49b:1",
        "primaryLocationStartColumnFingerprint" : "56"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
      "ruleIndex" : 15,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
        "index" : 15
      },
      "message" : {
        "text" : "Use of algorithm SECP256R1 with key size (in bits) 256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "sdk/attestation/azure-security-attestation/tests/test_attestation_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 37,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    def _create_ecds_key():  # type: () -> str\n        return (\n            ec.generate_private_key(ec.SECP256R1(), backend=default_backend())\n            .private_bytes(\n                serialization.Encoding.PEM,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f899d206ecb96580:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    } ],
    "automationDetails" : {
      "id" : "CBOM:azure/azure-sdk-for-python/python/"
    },
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}