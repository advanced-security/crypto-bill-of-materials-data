{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.2",
        "notifications" : [ {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        } ],
        "rules" : [ {
          "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "name" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "shortDescription" : {
            "text" : "Unknown Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
            "kind" : "problem",
            "name" : "Unknown Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "name" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "shortDescription" : {
            "text" : "All Cryptographic Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
            "kind" : "problem",
            "name" : "All Cryptographic Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Symmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with symmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with symmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Symmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/iv-sources",
          "name" : "py/quantum-readiness/cbom/iv-sources",
          "shortDescription" : {
            "text" : "Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/iv-sources",
            "kind" : "problem",
            "name" : "Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "shortDescription" : {
            "text" : "All Asymmetric Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "description" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
            "kind" : "problem",
            "name" : "All Asymmetric Algorithms",
            "preci" : "cbom\n       cryptography",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-exchange",
          "name" : "py/quantum-readiness/cbom/key-exchange",
          "shortDescription" : {
            "text" : "Key Exchange Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-exchange",
            "kind" : "problem",
            "name" : "Key Exchange Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/hash-algorithms",
          "name" : "py/quantum-readiness/cbom/hash-algorithms",
          "shortDescription" : {
            "text" : "Hash Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/hash-algorithms",
            "kind" : "problem",
            "name" : "Hash Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Symmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Symmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "name" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "shortDescription" : {
            "text" : "Known asymmetric key source generation"
          },
          "fullDescription" : {
            "text" : "Finds all known potential sources for asymmetric key generation while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all known potential sources for asymmetric key generation while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
            "kind" : "problem",
            "name" : "Known asymmetric key source generation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Asymmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with asymmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with asymmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Asymmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-derivation",
          "name" : "py/quantum-readiness/cbom/key-derivation",
          "shortDescription" : {
            "text" : "Key Derivation Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key derivation using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key derivation using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-derivation",
            "kind" : "problem",
            "name" : "Key Derivation Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/signing-algorithms",
          "name" : "py/quantum-readiness/cbom/signing-algorithms",
          "shortDescription" : {
            "text" : "Signing Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of signing algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of signing algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/signing-algorithms",
            "kind" : "problem",
            "name" : "Signing Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "shortDescription" : {
            "text" : "Authenticated Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of authenticated encryption schemes using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of authenticated encryption schemes using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
            "kind" : "problem",
            "name" : "Authenticated Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Asymmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Asymmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/block-cipher-mode",
          "name" : "py/quantum-readiness/cbom/block-cipher-mode",
          "shortDescription" : {
            "text" : "Block cipher mode of operation"
          },
          "fullDescription" : {
            "text" : "Finds all potential block cipher modes of operations using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential block cipher modes of operations using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/block-cipher-mode",
            "kind" : "problem",
            "name" : "Block cipher mode of operation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "name" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "shortDescription" : {
            "text" : "Elliptic Curve Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of elliptic curve algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of elliptic curve algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
            "kind" : "problem",
            "name" : "Elliptic Curve Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "codeql/python-queries",
        "semanticVersion" : "0.9.2+78fcbd07d654881d9d3395efc0ea371c392529de",
        "locations" : [ {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.2/x64/codeql/qlpacks/codeql/python-queries/0.9.2/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.2/x64/codeql/qlpacks/codeql/python-queries/0.9.2/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "Solutions/Digital%20Shadows/Data%20Connectors/Digital%20Shadows/DigitalShadowsConnectorAzureFunction/AS_api.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "Solutions/OneLoginIAM/Data%20Connectors/OneLoginWebhooksTrigger/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "Solutions/Armis/Data%20Connectors/ArmisActivities/ArmisActivitySentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "Solutions/TheHive/Data%20Connectors/TheHiveWebhooksTrigger/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "Solutions/Alibaba%20Cloud/DataConnectors/AliCloudSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "Solutions/CyberArkEPM/DataConnectors/CyberArkEPMSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "Solutions/SlackAudit/Data%20Connectors/SlackAuditAPISentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    }, {
      "location" : {
        "uri" : "Solutions/Mulesoft/Data%20Connectors/MuleSoftCloudhubSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      }
    }, {
      "location" : {
        "uri" : "Solutions/HolmSecurity/Data%20Connectors/AzureFunctionHolmSecurityAssetsConn/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      }
    }, {
      "location" : {
        "uri" : "Solutions/ESET%20Inspect/Data%20Connectors/datacollector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      }
    }, {
      "location" : {
        "uri" : "Solutions/SailPointIdentityNow/Data%20Connectors/SearchEvent/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      }
    }, {
      "location" : {
        "uri" : "Solutions/Neustar%20IP%20GeoPoint/Playbooks/NeustarIPGeoPoint_FunctionAppConnector/GetIPGeoInfo/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      }
    }, {
      "location" : {
        "uri" : "Solutions/ImpervaCloudWAF/Data%20Connectors/ImpervaWAFCloudSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      }
    }, {
      "location" : {
        "uri" : "DataConnectors/AWS-SecurityHubFindings/AzFunAWSSecurityHubIngestion/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      }
    }, {
      "location" : {
        "uri" : "Solutions/Bitglass/Data%20Connectors/BitglassSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 15
      }
    }, {
      "location" : {
        "uri" : "Solutions/Trend%20Micro%20Cloud%20App%20Security/Data%20Connectors/TrendMicroCASSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 16
      }
    }, {
      "location" : {
        "uri" : "Solutions/PDNS%20Block%20Data%20Connector/DataConnectors/block-data-connector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 17
      }
    }, {
      "location" : {
        "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityAnamolies/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 18
      }
    }, {
      "location" : {
        "uri" : "Solutions/Lookout/Data%20Connectors/LookoutAPISentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 19
      }
    }, {
      "location" : {
        "uri" : "DataConnectors/AWS-S3-AzureFunction/AzFun-AWS-S3-Ingestion/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 20
      }
    }, {
      "location" : {
        "uri" : "Solutions/GoogleWorkspaceReports/Data%20Connectors/GWorkspaceReportsAPISentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 21
      }
    }, {
      "location" : {
        "uri" : "Solutions/CiscoUmbrella/Data%20Connectors/ciscoUmbrellaDataConn/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 22
      }
    }, {
      "location" : {
        "uri" : "Solutions/GitHub/Data%20Connectors/GithubWebhook/GithubWebhookConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 23
      }
    }, {
      "location" : {
        "uri" : "DataConnectors/AWS-CloudTrail-AzureFunction/AzFunAWSCloudTrailLogsIngestion/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 24
      }
    }, {
      "location" : {
        "uri" : "Solutions/Armis/Data%20Connectors/ArmisDevice/ArmisDeviceSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 25
      }
    }, {
      "location" : {
        "uri" : "Solutions/Salesforce%20Service%20Cloud/Data%20Connectors/SalesforceSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 26
      }
    }, {
      "location" : {
        "uri" : "Solutions/Armis/Data%20Connectors/ArmisAlerts/ArmisAlertSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 27
      }
    }, {
      "location" : {
        "uri" : "Solutions/Armorblox/Data%20Connectors/ArmorbloxAzureSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 28
      }
    }, {
      "location" : {
        "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityEvents/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 29
      }
    }, {
      "location" : {
        "uri" : "Solutions/Workplace%20from%20Facebook/Data%20Connectors/WorkplaceFacebook/WorkplaceWebhooksTrigger/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 30
      }
    }, {
      "location" : {
        "uri" : "Solutions/AtlassianConfluenceAudit/Data%20Connector/AtlassianConfluenceAudit/ConfluenceAuditAPISentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 31
      }
    }, {
      "location" : {
        "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityViolations/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 32
      }
    }, {
      "location" : {
        "uri" : "Solutions/SentinelOne/Data%20Connectors/SentinelOneSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 33
      }
    }, {
      "location" : {
        "uri" : "Solutions/AtlassianJiraAudit/Data%20Connectors/JiraAuditAPISentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 34
      }
    }, {
      "location" : {
        "uri" : "Solutions/ZoomReports/Data%20Connectors/ZoomSentinelConnector/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 35
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/azure_monitor_collector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 36
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/azure_monitor_collector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 37
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/azure_monitor_collector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 38
      }
    }, {
      "location" : {
        "uri" : "Solutions/TenableIO/Data%20Connectors/azure_sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 39
      }
    }, {
      "location" : {
        "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/SharedCode/azure_sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 40
      }
    }, {
      "location" : {
        "uri" : "Solutions/Vectra%20XDR/Data%20Connectors/VectraDataConnector/SharedCode/azure_sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 41
      }
    }, {
      "location" : {
        "uri" : "Solutions/Authomize/Data%20Connectors/AuthomizeSentinelConnector/azureworker.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 42
      }
    }, {
      "location" : {
        "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 43
      }
    }, {
      "location" : {
        "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/AlertsGraphStatisticsDetails/bitsight.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 44
      }
    }, {
      "location" : {
        "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/CompaniesDetails/bitsight_companies.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 45
      }
    }, {
      "location" : {
        "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/FindingsSummaryDetails/bitsight_findings_summary.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 46
      }
    }, {
      "location" : {
        "uri" : "Solutions/Vectra%20XDR/Data%20Connectors/VectraDataConnector/SharedCode/collector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 47
      }
    }, {
      "location" : {
        "uri" : "Solutions/Trend%20Micro%20Vision%20One/Data%20Connectors/AzureFunctionTrendMicroXDR/shared_code/data_collector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 48
      }
    }, {
      "location" : {
        "uri" : "Solutions/Dataminr%20Pulse/Data%20Connectors/DataminrPulseAlerts/RetryFailedIndicators/post_to_log_analytics.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 49
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 50
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 51
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 52
      }
    }, {
      "location" : {
        "uri" : "Solutions/Dataminr%20Pulse/Data%20Connectors/DataminrPulseAlerts/DataminrPulseAlertsSentinelActivity/sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 53
      }
    }, {
      "location" : {
        "uri" : "Solutions/ZeroFox/Data%20Connectors/CTI/connections/sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 54
      }
    }, {
      "location" : {
        "uri" : "Solutions/CofenseTriage/Data%20Connectors/CofenseTriageDataConnector/CofenseBasedIndicatorCreator/sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 55
      }
    }, {
      "location" : {
        "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 56
      }
    }, {
      "location" : {
        "uri" : "Solutions/RubrikSecurityCloud/Data%20Connectors/RubrikWebhookEvents/RubrikActivity/sentinel.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 57
      }
    }, {
      "location" : {
        "uri" : "Solutions/Feedly/Data%20Connectors/FeedlySentinelConnector/sentinel_api.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 58
      }
    }, {
      "location" : {
        "uri" : "Solutions/MailRisk/Data%20Connectors/sentinel_api.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 59
      }
    }, {
      "location" : {
        "uri" : "Solutions/Oracle%20Cloud%20Infrastructure/Data%20Connectors/AzureFunctionOCILogs/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 60
      }
    }, {
      "location" : {
        "uri" : "Solutions/GoogleCloudPlatformDNS/Data%20Connectors/AzureFunctionGCPDNS/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 61
      }
    }, {
      "location" : {
        "uri" : "Solutions/Sophos%20Endpoint%20Protection/Data%20Connectors/AzureFunctionSophos/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 62
      }
    }, {
      "location" : {
        "uri" : "Solutions/Auth0/Data%20Connectors/Auth0Connector/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 63
      }
    }, {
      "location" : {
        "uri" : "Solutions/Snowflake/Data%20Connectors/AzureFunctionSnowflake/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 64
      }
    }, {
      "location" : {
        "uri" : "Solutions/Google%20Apigee/Data%20Connectors/AzureFunctionApigeeX/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 65
      }
    }, {
      "location" : {
        "uri" : "Solutions/Cisco%20Secure%20Endpoint/Data%20Connectors/AzureFunctionCiscoSecureEndpoint/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 66
      }
    }, {
      "location" : {
        "uri" : "Solutions/CiscoDuoSecurity/Data%20Connectors/AzureFunctionCiscoDuo/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 67
      }
    }, {
      "location" : {
        "uri" : "Solutions/Box/Data%20Connectors/AzureFunctionBox/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 68
      }
    }, {
      "location" : {
        "uri" : "Solutions/GoogleCloudPlatformIAM/Data%20Connectors/AzureFunctionGCPIAM/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 69
      }
    }, {
      "location" : {
        "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 70
      }
    }, {
      "location" : {
        "uri" : "Solutions/Proofpoint%20On%20demand(POD)%20Email%20Security/Data%20Connectors/ProofpointSentinelConnector/sentinel_connector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 71
      }
    }, {
      "location" : {
        "uri" : "Solutions/Rapid7InsightVM/Data%20Connectors/InsightVMCloudAPISentinelConnector/sentinel_connector_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 72
      }
    }, {
      "location" : {
        "uri" : "Solutions/Cloudflare/Data%20Connectors/AzureFunctionCloudflare/sentinel_connector_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 73
      }
    }, {
      "location" : {
        "uri" : "Solutions/PaloAltoPrismaCloud/Data%20Connectors/AzureFunctionPrismaCloud/sentinel_connector_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 74
      }
    }, {
      "location" : {
        "uri" : "Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Data%20Connectors/CrowdstrikeReplicator/CrowdstrikeFalconAPISentinelConnector/sentinel_connector_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 75
      }
    }, {
      "location" : {
        "uri" : "Solutions/Google%20Cloud%20Platform%20Cloud%20Monitoring/Data%20Connectors/AzureFunctionGCPMonitor/sentinel_connector_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 76
      }
    }, {
      "location" : {
        "uri" : "Solutions/AbnormalSecurity/Data%20Connectors/SentinelFunctionsOrchestrator/sentinel_connector_async.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 77
      }
    }, {
      "location" : {
        "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 78
      }
    }, {
      "location" : {
        "uri" : "Solutions/HYAS%20Protect/Data%20Connectors/HyasProtect/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 79
      }
    }, {
      "location" : {
        "uri" : "Solutions/Cybersixgill-Actionable-Alerts/Data%20Connectors/CybersixgillAlerts/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 80
      }
    }, {
      "location" : {
        "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardRatings/SecurityScorecardRatingsSentinelConnector/writers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 81
      }
    }, {
      "location" : {
        "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardFactor/SecurityScorecardFactorSentinelConnector/writers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 82
      }
    }, {
      "location" : {
        "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardIssue/SecurityScorecardIssueSentinelConnector/writers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 83
      }
    } ],
    "results" : [ {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 9,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\n    key = Fernet.generate_key()\n    f = Fernet(key)\n\n    def __init__(self, azure_function_name) -> None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e793d43b89d7a28:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Digital%20Shadows/Data%20Connectors/Digital%20Shadows/DigitalShadowsConnectorAzureFunction/AS_api.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/OneLoginIAM/Data%20Connectors/OneLoginWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armis/Data%20Connectors/ArmisActivities/ArmisActivitySentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 358,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 356,
            "endLine" : 360,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/TheHive/Data%20Connectors/TheHiveWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Alibaba%20Cloud/DataConnectors/AliCloudSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CyberArkEPM/DataConnectors/CyberArkEPMSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SlackAudit/Data%20Connectors/SlackAuditAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 197,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Mulesoft/Data%20Connectors/MuleSoftCloudhubSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 55,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 53,
            "endLine" : 57,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/HolmSecurity/Data%20Connectors/AzureFunctionHolmSecurityAssetsConn/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash).encode('utf-8')  \n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest())\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ESET%20Inspect/Data%20Connectors/datacollector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n    ).decode()\n    authorization = f\"SharedKey {customer_id}:{encoded_hash}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa91e2392e:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SailPointIdentityNow/Data%20Connectors/SearchEvent/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Neustar%20IP%20GeoPoint/Playbooks/NeustarIPGeoPoint_FunctionAppConnector/GetIPGeoInfo/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from urllib import response\nfrom os import environ\nfrom hashlib import sha256\nfrom time import time\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a560947f8afe2051:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ImpervaCloudWAF/Data%20Connectors/ImpervaWAFCloudSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 202,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 200,
            "endLine" : 204,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "DataConnectors/AWS-SecurityHubFindings/AzFunAWSSecurityHubIngestion/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 251,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Bitglass/Data%20Connectors/BitglassSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Trend%20Micro%20Cloud%20App%20Security/Data%20Connectors/TrendMicroCASSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 134,
            "endLine" : 138,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/PDNS%20Block%20Data%20Connector/DataConnectors/block-data-connector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 94,
            "startColumn" : 19,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 92,
            "endLine" : 96,
            "snippet" : {
              "text" : "        base64.b64decode(shared_key),\r\n        content.encode('utf-8'),\r\n        digestmod=hashlib.sha256\r\n    ).digest()\r\n\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc578fd95796f7d8:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityAnamolies/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.sharedkey)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout/Data%20Connectors/LookoutAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "DataConnectors/AWS-S3-AzureFunction/AzFun-AWS-S3-Ingestion/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 538,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 536,
            "endLine" : 540,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GoogleWorkspaceReports/Data%20Connectors/GWorkspaceReportsAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 188,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 186,
            "endLine" : 190,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CiscoUmbrella/Data%20Connectors/ciscoUmbrellaDataConn/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GitHub/Data%20Connectors/GithubWebhook/GithubWebhookConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 101,
            "endColumn" : 115
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "     # check webhook signature if GitHubWebhookSecret exists\n     if ((github_webhook_secret not in (None, '') and not str(github_webhook_secret).isspace())):    \n        hash_object = hmac.new(github_webhook_secret.encode('utf-8'), msg=req.get_body(), digestmod=hashlib.sha256)\n        expected_signature = \"sha256=\" + hash_object.hexdigest()\n        if 'x-hub-signature-256' not in req.headers:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "77999e1e6e0eb635:1",
        "primaryLocationStartColumnFingerprint" : "92"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GitHub/Data%20Connectors/GithubWebhook/GithubWebhookConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 92,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 90,
            "endLine" : 94,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "DataConnectors/AWS-CloudTrail-AzureFunction/AzFunAWSCloudTrailLogsIngestion/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 415,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 413,
            "endLine" : 417,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armis/Data%20Connectors/ArmisDevice/ArmisDeviceSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 358,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 356,
            "endLine" : 360,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Salesforce%20Service%20Cloud/Data%20Connectors/SalesforceSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armis/Data%20Connectors/ArmisAlerts/ArmisAlertSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 353,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 351,
            "endLine" : 355,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armorblox/Data%20Connectors/ArmorbloxAzureSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 112,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 110,
            "endLine" : 114,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(SENTINEL_WORKSPACE_KEY)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(SENTINEL_WORKSPACE_ID, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityEvents/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.sharedkey)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Workplace%20from%20Facebook/Data%20Connectors/WorkplaceFacebook/WorkplaceWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 38,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    message = bytes(message, 'utf-8')\n    secret = bytes(secret, 'utf-8')\n    hash = hmac.new(secret, message, hashlib.sha1)\n    return hash.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd1170d22aea3723:1",
        "primaryLocationStartColumnFingerprint" : "33"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Workplace%20from%20Facebook/Data%20Connectors/WorkplaceFacebook/WorkplaceWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/AtlassianConfluenceAudit/Data%20Connector/AtlassianConfluenceAudit/ConfluenceAuditAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityViolations/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.sharedkey)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SentinelOne/Data%20Connectors/SentinelOneSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/AtlassianJiraAudit/Data%20Connectors/JiraAuditAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ZoomReports/Data%20Connectors/ZoomSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 287,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 285,
            "endLine" : 289,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/azure_monitor_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/azure_monitor_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/azure_monitor_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\r\n        ).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/TenableIO/Data%20Connectors/azure_sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 51,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self._workspace_key)\n        encoded_hash = base64.b64encode(hmac.new(\n            decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(\n            self._workspace_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28f2723ef8ebccdb:1",
        "primaryLocationStartColumnFingerprint" : "38"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/SharedCode/azure_sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Vectra%20XDR/Data%20Connectors/VectraDataConnector/SharedCode/azure_sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Authomize/Data%20Connectors/AuthomizeSentinelConnector/azureworker.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "        return None\n    \n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 126,
            "startColumn" : 73,
            "endColumn" : 87
          },
          "contextRegion" : {
            "startLine" : 124,
            "endLine" : 128,
            "snippet" : {
              "text" : "\n    def _request(self, method: str, uri: str, body: Optional[bytes] = None) -> requests.Response:\n        digester = hmac.new(self._credentials.token_key.encode(), None, hashlib.sha256)\n        digester.update(f'{method}{uri}'.encode())\n        digester = hmac.new(digester.digest(), None, hashlib.sha256)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c8d515e346efb150:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 128,
            "startColumn" : 54,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 126,
            "endLine" : 130,
            "snippet" : {
              "text" : "        digester = hmac.new(self._credentials.token_key.encode(), None, hashlib.sha256)\n        digester.update(f'{method}{uri}'.encode())\n        digester = hmac.new(digester.digest(), None, hashlib.sha256)\n        datetime_formatted = datetime.datetime.now().astimezone().isoformat('T')\n        digester.update(datetime_formatted[:13].encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6882a17b696e504:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 54,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "        datetime_formatted = datetime.datetime.now().astimezone().isoformat('T')\n        digester.update(datetime_formatted[:13].encode())\n        digester = hmac.new(digester.digest(), None, hashlib.sha256)\n\n        if body is not None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24ad9de03d8846f2:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/AlertsGraphStatisticsDetails/bitsight.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 30,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "                    j['Company_name'] = company_name\n                    i = json.dumps(j, sort_keys=True)\n                    result = hashlib.sha512(i.encode())\n                    result_hash = result.hexdigest()\n                    if last_data:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ac7988c698a2e1f:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/AlertsGraphStatisticsDetails/bitsight.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 463,
            "startColumn" : 22,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 461,
            "endLine" : 465,
            "snippet" : {
              "text" : "            data['company_name'] = company_name\n            data = json.dumps(data, sort_keys=True)\n            result = hashlib.sha512(data.encode())\n            result_hash = result.hexdigest()\n            return result_hash\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a8874ce55a590f1:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/CompaniesDetails/bitsight_companies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 264,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 262,
            "endLine" : 266,
            "snippet" : {
              "text" : "                rating_details = response.get(\"rating_details\")\n                rating = json.dumps(rating_details, sort_keys=True)\n                result = hashlib.sha512(rating.encode())\n                result_hash = result.hexdigest()\n                if(result_hash != last_data_company_ratings):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4288454bacbbec4:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/CompaniesDetails/bitsight_companies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 281,
            "startColumn" : 22,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 279,
            "endLine" : 283,
            "snippet" : {
              "text" : "                del response['rating_details']\n            rating = json.dumps(response, sort_keys=True)\n            result = hashlib.sha512(rating.encode())\n            result_hash = result.hexdigest()\n            if(result_hash != last_data_company_details):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4288454bacbbec4:2",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/FindingsSummaryDetails/bitsight_findings_summary.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 159,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 157,
            "endLine" : 161,
            "snippet" : {
              "text" : "                    j[\"Company\"] = company_name\n                    body = json.dumps(j, sort_keys=True)\n                    data_hash = hashlib.sha512(body.encode())\n                    result_hash = data_hash.hexdigest()\n                    data_to_post.append(result_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c22bdcd3061931b5:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Vectra%20XDR/Data%20Connectors/VectraDataConnector/SharedCode/collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 583,
            "snippet" : {
              "text" : "        \"\"\"\n        data = json.dumps(data, sort_keys=True)\n        result = hashlib.sha512(data.encode())\n        result_hash = result.hexdigest()\n        return result_hash\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6e007dd2dbe17415:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Trend%20Micro%20Vision%20One/Data%20Connectors/AzureFunctionTrendMicroXDR/shared_code/data_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.workspace_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(self.workspace_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Dataminr%20Pulse/Data%20Connectors/DataminrPulseAlerts/RetryFailedIndicators/post_to_log_analytics.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(consts.WORKSPACE_KEY)\n    encoded_hash = base64.b64encode(\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n    ).decode()\n    authorization = \"SharedKey {}:{}\".format(consts.WORKSPACE_ID, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 108,
            "startColumn" : 89,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 106,
            "endLine" : 110,
            "snippet" : {
              "text" : "        )\r\n        hmac_sha1 = hmac.new(\r\n            base64.b64decode(self.secret_key), unsigned_auth_header.encode(), digestmod=EncryptionAlgo\r\n        ).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32d42baa1f90ffec:1",
        "primaryLocationStartColumnFingerprint" : "76"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "            base64.b64decode(self.secret_key),\r\n            unsigned_auth_header.encode(),\r\n            digestmod=EncryptionAlgo).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n        headers = {\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cfad2f7bdac67549:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 110,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 108,
            "endLine" : 112,
            "snippet" : {
              "text" : "            base64.b64decode(self.secret_key),\r\n            unsigned_auth_header.encode(),\r\n            digestmod=EncryptionAlgo).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n        headers = {\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cfad2f7bdac67549:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Dataminr%20Pulse/Data%20Connectors/DataminrPulseAlerts/DataminrPulseAlertsSentinelActivity/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ZeroFox/Data%20Connectors/CTI/connections/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseTriage/Data%20Connectors/CofenseTriageDataConnector/CofenseBasedIndicatorCreator/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(WORKSPACE_KEY)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(WORKSPACE_ID, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(consts.WORKSPACE_KEY)\n    encoded_hash = base64.b64encode(\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n    ).decode()\n    authorization = \"SharedKey {}:{}\".format(consts.WORKSPACE_ID, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/RubrikSecurityCloud/Data%20Connectors/RubrikWebhookEvents/RubrikActivity/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(self.customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Feedly/Data%20Connectors/FeedlySentinelConnector/sentinel_api.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 86,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 60,
            "snippet" : {
              "text" : "\n    def encode(self, text: str) -> str:\n        return b64encode(hmac.new(self.key, bytes(text, encoding=\"utf-8\"), digestmod=hashlib.sha256).digest()).decode()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec000d82b01d19ff:1",
        "primaryLocationStartColumnFingerprint" : "77"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MailRisk/Data%20Connectors/sentinel_api.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n    decoded_key = base64.b64decode(workspace_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(workspace_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Oracle%20Cloud%20Infrastructure/Data%20Connectors/AzureFunctionOCILogs/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GoogleCloudPlatformDNS/Data%20Connectors/AzureFunctionGCPDNS/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Sophos%20Endpoint%20Protection/Data%20Connectors/AzureFunctionSophos/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Auth0/Data%20Connectors/Auth0Connector/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Snowflake/Data%20Connectors/AzureFunctionSnowflake/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Google%20Apigee/Data%20Connectors/AzureFunctionApigeeX/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Cisco%20Secure%20Endpoint/Data%20Connectors/AzureFunctionCiscoSecureEndpoint/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CiscoDuoSecurity/Data%20Connectors/AzureFunctionCiscoDuo/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Box/Data%20Connectors/AzureFunctionBox/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GoogleCloudPlatformIAM/Data%20Connectors/AzureFunctionGCPIAM/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Proofpoint%20On%20demand(POD)%20Email%20Security/Data%20Connectors/ProofpointSentinelConnector/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Rapid7InsightVM/Data%20Connectors/InsightVMCloudAPISentinelConnector/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 72
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Cloudflare/Data%20Connectors/AzureFunctionCloudflare/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/PaloAltoPrismaCloud/Data%20Connectors/AzureFunctionPrismaCloud/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Data%20Connectors/CrowdstrikeReplicator/CrowdstrikeFalconAPISentinelConnector/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 75
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Google%20Cloud%20Platform%20Cloud%20Monitoring/Data%20Connectors/AzureFunctionGCPMonitor/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/AbnormalSecurity/Data%20Connectors/SentinelFunctionsOrchestrator/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 89,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 105,
            "endLine" : 109,
            "snippet" : {
              "text" : "        )\r\n        hmac_sha1 = hmac.new(\r\n            base64.b64decode(self.secret_key), unsigned_auth_header.encode(), digestmod=EncryptionAlgo\r\n        ).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32d42baa1f90ffec:1",
        "primaryLocationStartColumnFingerprint" : "76"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from ..Models.Error.errors import MimecastRequestError\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from ..Models.Error.errors import MimecastRequestError\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/HYAS%20Protect/Data%20Connectors/HyasProtect/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "    decoded_key = b64decode(shared_key)\r\n    encoded_hash = b64encode(\r\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\r\n    ).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Cybersixgill-Actionable-Alerts/Data%20Connectors/CybersixgillAlerts/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 77,
            "endColumn" : 91
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = b64decode(shared_key)\r\n    encoded_hash = b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2610f64d8b8e527f:1",
        "primaryLocationStartColumnFingerprint" : "72"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES128\nUse of algorithm PKCS7\nUse of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 9,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\n    key = Fernet.generate_key()\n    f = Fernet(key)\n\n    def __init__(self, azure_function_name) -> None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e793d43b89d7a28:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardRatings/SecurityScorecardRatingsSentinelConnector/writers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardFactor/SecurityScorecardFactorSentinelConnector/writers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardIssue/SecurityScorecardIssueSentinelConnector/writers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
        "index" : 2
      },
      "message" : {
        "text" : "Use of algorithm PKCS7"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 9,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\n    key = Fernet.generate_key()\n    f = Fernet(key)\n\n    def __init__(self, azure_function_name) -> None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e793d43b89d7a28:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Digital%20Shadows/Data%20Connectors/Digital%20Shadows/DigitalShadowsConnectorAzureFunction/AS_api.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/OneLoginIAM/Data%20Connectors/OneLoginWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armis/Data%20Connectors/ArmisActivities/ArmisActivitySentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 358,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 356,
            "endLine" : 360,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/TheHive/Data%20Connectors/TheHiveWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 30,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 28,
            "endLine" : 32,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Alibaba%20Cloud/DataConnectors/AliCloudSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CyberArkEPM/DataConnectors/CyberArkEPMSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SlackAudit/Data%20Connectors/SlackAuditAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 197,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Mulesoft/Data%20Connectors/MuleSoftCloudhubSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 55,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 53,
            "endLine" : 57,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/HolmSecurity/Data%20Connectors/AzureFunctionHolmSecurityAssetsConn/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash).encode('utf-8')  \n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest())\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ESET%20Inspect/Data%20Connectors/datacollector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n    ).decode()\n    authorization = f\"SharedKey {customer_id}:{encoded_hash}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa91e2392e:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SailPointIdentityNow/Data%20Connectors/SearchEvent/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Neustar%20IP%20GeoPoint/Playbooks/NeustarIPGeoPoint_FunctionAppConnector/GetIPGeoInfo/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from urllib import response\nfrom os import environ\nfrom hashlib import sha256\nfrom time import time\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a560947f8afe2051:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ImpervaCloudWAF/Data%20Connectors/ImpervaWAFCloudSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 202,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 200,
            "endLine" : 204,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "DataConnectors/AWS-SecurityHubFindings/AzFunAWSSecurityHubIngestion/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 249,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 247,
            "endLine" : 251,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Bitglass/Data%20Connectors/BitglassSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 156,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 154,
            "endLine" : 158,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Trend%20Micro%20Cloud%20App%20Security/Data%20Connectors/TrendMicroCASSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 134,
            "endLine" : 138,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/PDNS%20Block%20Data%20Connector/DataConnectors/block-data-connector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 94,
            "startColumn" : 19,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 92,
            "endLine" : 96,
            "snippet" : {
              "text" : "        base64.b64decode(shared_key),\r\n        content.encode('utf-8'),\r\n        digestmod=hashlib.sha256\r\n    ).digest()\r\n\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cc578fd95796f7d8:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityAnamolies/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.sharedkey)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout/Data%20Connectors/LookoutAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = base64.b64decode(shared_key)\r\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "DataConnectors/AWS-S3-AzureFunction/AzFun-AWS-S3-Ingestion/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 538,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 536,
            "endLine" : 540,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GoogleWorkspaceReports/Data%20Connectors/GWorkspaceReportsAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 188,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 186,
            "endLine" : 190,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CiscoUmbrella/Data%20Connectors/ciscoUmbrellaDataConn/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GitHub/Data%20Connectors/GithubWebhook/GithubWebhookConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 101,
            "endColumn" : 115
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "     # check webhook signature if GitHubWebhookSecret exists\n     if ((github_webhook_secret not in (None, '') and not str(github_webhook_secret).isspace())):    \n        hash_object = hmac.new(github_webhook_secret.encode('utf-8'), msg=req.get_body(), digestmod=hashlib.sha256)\n        expected_signature = \"sha256=\" + hash_object.hexdigest()\n        if 'x-hub-signature-256' not in req.headers:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "77999e1e6e0eb635:1",
        "primaryLocationStartColumnFingerprint" : "92"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GitHub/Data%20Connectors/GithubWebhook/GithubWebhookConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 92,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 90,
            "endLine" : 94,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "DataConnectors/AWS-CloudTrail-AzureFunction/AzFunAWSCloudTrailLogsIngestion/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 415,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 413,
            "endLine" : 417,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armis/Data%20Connectors/ArmisDevice/ArmisDeviceSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 358,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 356,
            "endLine" : 360,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Salesforce%20Service%20Cloud/Data%20Connectors/SalesforceSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 176,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 174,
            "endLine" : 178,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armis/Data%20Connectors/ArmisAlerts/ArmisAlertSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 353,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 351,
            "endLine" : 355,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Armorblox/Data%20Connectors/ArmorbloxAzureSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 112,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 110,
            "endLine" : 114,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(SENTINEL_WORKSPACE_KEY)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(SENTINEL_WORKSPACE_ID, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityEvents/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.sharedkey)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Workplace%20from%20Facebook/Data%20Connectors/WorkplaceFacebook/WorkplaceWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 38,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "    message = bytes(message, 'utf-8')\n    secret = bytes(secret, 'utf-8')\n    hash = hmac.new(secret, message, hashlib.sha1)\n    return hash.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dd1170d22aea3723:1",
        "primaryLocationStartColumnFingerprint" : "33"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Workplace%20from%20Facebook/Data%20Connectors/WorkplaceFacebook/WorkplaceWebhooksTrigger/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/AtlassianConfluenceAudit/Data%20Connector/AtlassianConfluenceAudit/ConfluenceAuditAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 100,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Lookout%20Cloud%20Security%20Platform%20for%20Microsoft%20Sentinel/Data%20Connectors/LookoutCSConnector/LookoutCloudSecurityViolations/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 278,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 276,
            "endLine" : 280,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.sharedkey)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SentinelOne/Data%20Connectors/SentinelOneSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/AtlassianJiraAudit/Data%20Connectors/JiraAuditAPISentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n    decoded_key = base64.b64decode(shared_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ZoomReports/Data%20Connectors/ZoomSentinelConnector/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 287,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 285,
            "endLine" : 289,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/azure_monitor_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 21,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 19,
            "endLine" : 23,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/azure_monitor_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n        return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79613fb1ac5e68fd:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/azure_monitor_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 22,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 20,
            "endLine" : 24,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\r\n        encoded_hash = base64.b64encode(\r\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\r\n        ).decode()\r\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/TenableIO/Data%20Connectors/azure_sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 51,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self._workspace_key)\n        encoded_hash = base64.b64encode(hmac.new(\n            decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(\n            self._workspace_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "28f2723ef8ebccdb:1",
        "primaryLocationStartColumnFingerprint" : "38"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/SharedCode/azure_sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Vectra%20XDR/Data%20Connectors/VectraDataConnector/SharedCode/azure_sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Authomize/Data%20Connectors/AuthomizeSentinelConnector/azureworker.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "        return None\n    \n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 126,
            "startColumn" : 73,
            "endColumn" : 87
          },
          "contextRegion" : {
            "startLine" : 124,
            "endLine" : 128,
            "snippet" : {
              "text" : "\n    def _request(self, method: str, uri: str, body: Optional[bytes] = None) -> requests.Response:\n        digester = hmac.new(self._credentials.token_key.encode(), None, hashlib.sha256)\n        digester.update(f'{method}{uri}'.encode())\n        digester = hmac.new(digester.digest(), None, hashlib.sha256)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c8d515e346efb150:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 128,
            "startColumn" : 54,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 126,
            "endLine" : 130,
            "snippet" : {
              "text" : "        digester = hmac.new(self._credentials.token_key.encode(), None, hashlib.sha256)\n        digester.update(f'{method}{uri}'.encode())\n        digester = hmac.new(digester.digest(), None, hashlib.sha256)\n        datetime_formatted = datetime.datetime.now().astimezone().isoformat('T')\n        digester.update(datetime_formatted[:13].encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6882a17b696e504:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/bhe_client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 54,
            "endColumn" : 68
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "        datetime_formatted = datetime.datetime.now().astimezone().isoformat('T')\n        digester.update(datetime_formatted[:13].encode())\n        digester = hmac.new(digester.digest(), None, hashlib.sha256)\n\n        if body is not None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "24ad9de03d8846f2:1",
        "primaryLocationStartColumnFingerprint" : "45"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/AlertsGraphStatisticsDetails/bitsight.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 30,
            "endColumn" : 44
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "                    j['Company_name'] = company_name\n                    i = json.dumps(j, sort_keys=True)\n                    result = hashlib.sha512(i.encode())\n                    result_hash = result.hexdigest()\n                    if last_data:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ac7988c698a2e1f:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/AlertsGraphStatisticsDetails/bitsight.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 463,
            "startColumn" : 22,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 461,
            "endLine" : 465,
            "snippet" : {
              "text" : "            data['company_name'] = company_name\n            data = json.dumps(data, sort_keys=True)\n            result = hashlib.sha512(data.encode())\n            result_hash = result.hexdigest()\n            return result_hash\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1a8874ce55a590f1:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/CompaniesDetails/bitsight_companies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 264,
            "startColumn" : 26,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 262,
            "endLine" : 266,
            "snippet" : {
              "text" : "                rating_details = response.get(\"rating_details\")\n                rating = json.dumps(rating_details, sort_keys=True)\n                result = hashlib.sha512(rating.encode())\n                result_hash = result.hexdigest()\n                if(result_hash != last_data_company_ratings):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4288454bacbbec4:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/CompaniesDetails/bitsight_companies.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 281,
            "startColumn" : 22,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 279,
            "endLine" : 283,
            "snippet" : {
              "text" : "                del response['rating_details']\n            rating = json.dumps(response, sort_keys=True)\n            result = hashlib.sha512(rating.encode())\n            result_hash = result.hexdigest()\n            if(result_hash != last_data_company_details):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4288454bacbbec4:2",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BitSight/Data%20Connectors/BitSightDataConnector/FindingsSummaryDetails/bitsight_findings_summary.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 159,
            "startColumn" : 33,
            "endColumn" : 47
          },
          "contextRegion" : {
            "startLine" : 157,
            "endLine" : 161,
            "snippet" : {
              "text" : "                    j[\"Company\"] = company_name\n                    body = json.dumps(j, sort_keys=True)\n                    data_hash = hashlib.sha512(body.encode())\n                    result_hash = data_hash.hexdigest()\n                    data_to_post.append(result_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c22bdcd3061931b5:1",
        "primaryLocationStartColumnFingerprint" : "12"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Vectra%20XDR/Data%20Connectors/VectraDataConnector/SharedCode/collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 583,
            "snippet" : {
              "text" : "        \"\"\"\n        data = json.dumps(data, sort_keys=True)\n        result = hashlib.sha512(data.encode())\n        result_hash = result.hexdigest()\n        return result_hash\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6e007dd2dbe17415:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Trend%20Micro%20Vision%20One/Data%20Connectors/AzureFunctionTrendMicroXDR/shared_code/data_collector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.workspace_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(self.workspace_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Dataminr%20Pulse/Data%20Connectors/DataminrPulseAlerts/RetryFailedIndicators/post_to_log_analytics.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(consts.WORKSPACE_KEY)\n    encoded_hash = base64.b64encode(\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n    ).decode()\n    authorization = \"SharedKey {}:{}\".format(consts.WORKSPACE_ID, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 108,
            "startColumn" : 89,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 106,
            "endLine" : 110,
            "snippet" : {
              "text" : "        )\r\n        hmac_sha1 = hmac.new(\r\n            base64.b64decode(self.secret_key), unsigned_auth_header.encode(), digestmod=EncryptionAlgo\r\n        ).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32d42baa1f90ffec:1",
        "primaryLocationStartColumnFingerprint" : "76"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTTP/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 115,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 113,
            "endLine" : 117,
            "snippet" : {
              "text" : "            base64.b64decode(self.secret_key),\r\n            unsigned_auth_header.encode(),\r\n            digestmod=EncryptionAlgo).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n        headers = {\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cfad2f7bdac67549:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastAudit/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 110,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 108,
            "endLine" : 112,
            "snippet" : {
              "text" : "            base64.b64decode(self.secret_key),\r\n            unsigned_auth_header.encode(),\r\n            digestmod=EncryptionAlgo).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n        headers = {\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cfad2f7bdac67549:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastSEG/Data%20Connectors/Helpers/request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "from ..Models.Request.refresh_access_key import RefreshAccessKeyRequest\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Dataminr%20Pulse/Data%20Connectors/DataminrPulseAlerts/DataminrPulseAlertsSentinelActivity/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/ZeroFox/Data%20Connectors/CTI/connections/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 105,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 103,
            "endLine" : 107,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseTriage/Data%20Connectors/CofenseTriageDataConnector/CofenseBasedIndicatorCreator/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(WORKSPACE_KEY)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(WORKSPACE_ID, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    decoded_key = base64.b64decode(consts.WORKSPACE_KEY)\n    encoded_hash = base64.b64encode(\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n    ).decode()\n    authorization = \"SharedKey {}:{}\".format(consts.WORKSPACE_ID, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/RubrikSecurityCloud/Data%20Connectors/RubrikWebhookEvents/RubrikActivity/sentinel.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(self.shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(self.customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Feedly/Data%20Connectors/FeedlySentinelConnector/sentinel_api.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 86,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 60,
            "snippet" : {
              "text" : "\n    def encode(self, text: str) -> str:\n        return b64encode(hmac.new(self.key, bytes(text, encoding=\"utf-8\"), digestmod=hashlib.sha256).digest()).decode()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec000d82b01d19ff:1",
        "primaryLocationStartColumnFingerprint" : "77"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MailRisk/Data%20Connectors/sentinel_api.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 84,
            "endColumn" : 98
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")  \n    decoded_key = base64.b64decode(workspace_key)\n    encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n    authorization = \"SharedKey {}:{}\".format(workspace_id,encoded_hash)\n    return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Oracle%20Cloud%20Infrastructure/Data%20Connectors/AzureFunctionOCILogs/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GoogleCloudPlatformDNS/Data%20Connectors/AzureFunctionGCPDNS/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Sophos%20Endpoint%20Protection/Data%20Connectors/AzureFunctionSophos/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Auth0/Data%20Connectors/Auth0Connector/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Snowflake/Data%20Connectors/AzureFunctionSnowflake/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Google%20Apigee/Data%20Connectors/AzureFunctionApigeeX/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Cisco%20Secure%20Endpoint/Data%20Connectors/AzureFunctionCiscoSecureEndpoint/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CiscoDuoSecurity/Data%20Connectors/AzureFunctionCiscoDuo/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Box/Data%20Connectors/AzureFunctionBox/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/GoogleCloudPlatformIAM/Data%20Connectors/AzureFunctionGCPIAM/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 69
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/BloodHound%20Enterprise/Data%20Connectors/AzureFunctionBloodHoundEnterprise/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 70
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Proofpoint%20On%20demand(POD)%20Email%20Security/Data%20Connectors/ProofpointSentinelConnector/sentinel_connector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 71
          },
          "region" : {
            "startLine" : 62,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 60,
            "endLine" : 64,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Rapid7InsightVM/Data%20Connectors/InsightVMCloudAPISentinelConnector/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 72
          },
          "region" : {
            "startLine" : 33,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 31,
            "endLine" : 35,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Cloudflare/Data%20Connectors/AzureFunctionCloudflare/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 73
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/PaloAltoPrismaCloud/Data%20Connectors/AzureFunctionPrismaCloud/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 74
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CrowdStrike%20Falcon%20Endpoint%20Protection/Data%20Connectors/CrowdstrikeReplicator/CrowdstrikeFalconAPISentinelConnector/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 75
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Google%20Cloud%20Platform%20Cloud%20Monitoring/Data%20Connectors/AzureFunctionGCPMonitor/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 76
          },
          "region" : {
            "startLine" : 49,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 47,
            "endLine" : 51,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/AbnormalSecurity/Data%20Connectors/SentinelFunctionsOrchestrator/sentinel_connector_async.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 77
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "        bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\n        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\n        authorization = \"SharedKey {}:{}\".format(workspace_id, encoded_hash)\n        return authorization\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25e9d09e99d682c0:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 107,
            "startColumn" : 89,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 105,
            "endLine" : 109,
            "snippet" : {
              "text" : "        )\r\n        hmac_sha1 = hmac.new(\r\n            base64.b64decode(self.secret_key), unsigned_auth_header.encode(), digestmod=EncryptionAlgo\r\n        ).digest()\r\n        sig = base64.encodebytes(hmac_sha1).rstrip()\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32d42baa1f90ffec:1",
        "primaryLocationStartColumnFingerprint" : "76"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 21,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from ..Models.Error.errors import MimecastRequestError\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/MimecastTIRegional/Data%20Connectors/Helpers/threat_intel_feed_request_helper.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 78
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from ..Models.Error.errors import MimecastRequestError\r\nimport base64\r\nfrom hashlib import sha1 as EncryptionAlgo\r\nimport hmac\r\nimport uuid\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ddf47c8faaf0f0:1",
        "primaryLocationStartColumnFingerprint" : "28"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/HYAS%20Protect/Data%20Connectors/HyasProtect/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 79
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 56,
            "endColumn" : 70
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "    decoded_key = b64decode(shared_key)\r\n    encoded_hash = b64encode(\r\n        hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\r\n    ).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/Cybersixgill-Actionable-Alerts/Data%20Connectors/CybersixgillAlerts/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 80
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 77,
            "endColumn" : 91
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    bytes_to_hash = bytes(string_to_hash, encoding=\"utf-8\")\r\n    decoded_key = b64decode(shared_key)\r\n    encoded_hash = b64encode(hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()).decode()\r\n    authorization = \"SharedKey {}:{}\".format(customer_id,encoded_hash)\r\n    return authorization\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2610f64d8b8e527f:1",
        "primaryLocationStartColumnFingerprint" : "72"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardRatings/SecurityScorecardRatingsSentinelConnector/writers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 81
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardFactor/SecurityScorecardFactorSentinelConnector/writers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 82
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/SecurityScorecard%20Cybersecurity%20Ratings/Data%20Connectors/SecurityScorecardIssue/SecurityScorecardIssueSentinelConnector/writers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 83
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 60,
            "endColumn" : 74
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "        decoded_key = base64.b64decode(shared_key)\n        encoded_hash = base64.b64encode(\n            hmac.new(decoded_key, bytes_to_hash, digestmod=hashlib.sha256).digest()\n        ).decode()\n        authorization = \"SharedKey {}:{}\".format(customer_id, encoded_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "377b75fa8a6fe7d2:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES128"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 9,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\n    key = Fernet.generate_key()\n    f = Fernet(key)\n\n    def __init__(self, azure_function_name) -> None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e793d43b89d7a28:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Solutions/CofenseIntelligence/Data%20Connectors/CofenseIntelligenceDataConnector/SharedCode/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 16,
            "startColumn" : 9,
            "endColumn" : 20
          },
          "contextRegion" : {
            "startLine" : 14,
            "endLine" : 18,
            "snippet" : {
              "text" : "\n    key = Fernet.generate_key()\n    f = Fernet(key)\n\n    def __init__(self, azure_function_name) -> None:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e793d43b89d7a28:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    } ],
    "automationDetails" : {
      "id" : "CBOM:azure/azure-sentinel/python/"
    },
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}