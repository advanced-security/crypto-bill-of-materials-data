{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.1",
        "notifications" : [ {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        } ],
        "rules" : [ {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Asymmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Asymmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "name" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "shortDescription" : {
            "text" : "Known asymmetric key source generation"
          },
          "fullDescription" : {
            "text" : "Finds all known potential sources for asymmetric key generation while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all known potential sources for asymmetric key generation while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
            "kind" : "problem",
            "name" : "Known asymmetric key source generation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/block-cipher-mode",
          "name" : "py/quantum-readiness/cbom/block-cipher-mode",
          "shortDescription" : {
            "text" : "Block cipher mode of operation"
          },
          "fullDescription" : {
            "text" : "Finds all potential block cipher modes of operations using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential block cipher modes of operations using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/block-cipher-mode",
            "kind" : "problem",
            "name" : "Block cipher mode of operation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "name" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "shortDescription" : {
            "text" : "Elliptic Curve Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of elliptic curve algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of elliptic curve algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
            "kind" : "problem",
            "name" : "Elliptic Curve Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "name" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "shortDescription" : {
            "text" : "Unknown Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
            "kind" : "problem",
            "name" : "Unknown Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Symmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with symmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with symmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Symmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Asymmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with asymmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with asymmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Asymmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/iv-sources",
          "name" : "py/quantum-readiness/cbom/iv-sources",
          "shortDescription" : {
            "text" : "Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/iv-sources",
            "kind" : "problem",
            "name" : "Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-exchange",
          "name" : "py/quantum-readiness/cbom/key-exchange",
          "shortDescription" : {
            "text" : "Key Exchange Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-exchange",
            "kind" : "problem",
            "name" : "Key Exchange Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "shortDescription" : {
            "text" : "All Asymmetric Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
            "kind" : "problem",
            "name" : "All Asymmetric Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "name" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "shortDescription" : {
            "text" : "All Cryptographic Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
            "kind" : "problem",
            "name" : "All Cryptographic Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "shortDescription" : {
            "text" : "Authenticated Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of authenticated encryption schemes using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of authenticated encryption schemes using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
            "kind" : "problem",
            "name" : "Authenticated Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/hash-algorithms",
          "name" : "py/quantum-readiness/cbom/hash-algorithms",
          "shortDescription" : {
            "text" : "Hash Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/hash-algorithms",
            "kind" : "problem",
            "name" : "Hash Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/signing-algorithms",
          "name" : "py/quantum-readiness/cbom/signing-algorithms",
          "shortDescription" : {
            "text" : "Signing Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of signing algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of signing algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/signing-algorithms",
            "kind" : "problem",
            "name" : "Signing Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "cpp/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "name" : "cpp/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Symmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries.",
            "id" : "cpp/quantum-readiness/cbom/symmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Symmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-derivation",
          "name" : "py/quantum-readiness/cbom/key-derivation",
          "shortDescription" : {
            "text" : "Key Derivation Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key derivation using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key derivation using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-derivation",
            "kind" : "problem",
            "name" : "Key Derivation Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/classic-model/block-cipher-mode",
          "name" : "py/quantum-readiness/cbom/classic-model/block-cipher-mode",
          "shortDescription" : {
            "text" : "Block cipher mode of operation"
          },
          "fullDescription" : {
            "text" : "Finds all potential block cipher modes of operations using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential block cipher modes of operations using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/classic-model/block-cipher-mode",
            "kind" : "problem",
            "name" : "Block cipher mode of operation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
          "name" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
          "shortDescription" : {
            "text" : "All Cryptographic Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
            "kind" : "problem",
            "name" : "All Cryptographic Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
          "name" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
          "shortDescription" : {
            "text" : "Hash Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
            "kind" : "problem",
            "name" : "Hash Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "pre-quantum-research/python-cryptography",
        "semanticVersion" : "0.0.1+8c23858f24380b6485f315fed454d97b2a94c734",
        "locations" : [ {
          "uri" : "file:///home/runner/.codeql/packages/pre-quantum-research/python-cryptography/0.0.1/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///home/runner/.codeql/packages/pre-quantum-research/python-cryptography/0.0.1/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "django/db/backends/sqlite3/_functions.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "django/utils/cache.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "django/template/loaders/cached.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "django/utils/crypto.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "django/core/cache/backends/filebased.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "django/contrib/auth/hashers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "django/test/runner.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "django/contrib/staticfiles/storage.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    }, {
      "location" : {
        "uri" : "tests/utils_tests/test_crypto.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      }
    }, {
      "location" : {
        "uri" : "tests/auth_tests/test_hashers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      }
    }, {
      "location" : {
        "uri" : "tests/test_runner/test_shuffler.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      }
    }, {
      "location" : {
        "uri" : "tests/file_uploads/tests.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      }
    }, {
      "location" : {
        "uri" : "django/db/backends/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      }
    }, {
      "location" : {
        "uri" : "django/core/cache/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      }
    }, {
      "location" : {
        "uri" : "tests/file_uploads/views.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      }
    } ],
    "results" : [ {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 26,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA224"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 32,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 40,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 48,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 56,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "55"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "import time\nfrom collections import defaultdict\nfrom hashlib import md5\n\nfrom django.conf import settings\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb0a4f537b9e972:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/template/loaders/cached.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 16,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\n    def generate_hash(self, values):\n        return hashlib.sha1(\"|\".join(values).encode()).hexdigest()\n\n    def reset(self):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd5b42a0ed288258:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 18,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    secret = force_bytes(secret)\n    try:\n        hasher = getattr(hashlib, algorithm)\n    except AttributeError as e:\n        raise InvalidAlgorithm(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a29e8f96578933a7:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 72,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 70,
            "endLine" : 74,
            "snippet" : {
              "text" : "    \"\"\"Return the hash of password using pbkdf2.\"\"\"\n    if digest is None:\n        digest = hashlib.sha256\n    dklen = dklen or None\n    password = force_bytes(password)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1790578f7b041d1:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 32,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 76,
            "snippet" : {
              "text" : "    password = force_bytes(password)\n    salt = force_bytes(salt)\n    return hashlib.pbkdf2_hmac(digest().name, password, salt, iterations, dklen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d024b4777d6516bb:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm PBKDF2HMAC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 12,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 76,
            "snippet" : {
              "text" : "    password = force_bytes(password)\n    salt = force_bytes(salt)\n    return hashlib.pbkdf2_hmac(digest().name, password, salt, iterations, dklen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d024b4777d6516bb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/backends/filebased.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import time\nimport zlib\nfrom hashlib import md5\n\nfrom django.core.cache.backends.base import DEFAULT_TIMEOUT, BaseCache\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f944fd6c4c1367ba:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 316,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 314,
            "endLine" : 318,
            "snippet" : {
              "text" : "    algorithm = \"pbkdf2_sha256\"\n    iterations = 870000\n    digest = hashlib.sha256\n\n    def encode(self, password, salt, iterations=None):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "287c8a6710cba9a8:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 370,
            "startColumn" : 14,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 368,
            "endLine" : 372,
            "snippet" : {
              "text" : "\n    algorithm = \"pbkdf2_sha1\"\n    digest = hashlib.sha1\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "febe455d85f2a40a:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 486,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 484,
            "endLine" : 488,
            "snippet" : {
              "text" : "\n    algorithm = \"bcrypt_sha256\"\n    digest = hashlib.sha256\n    library = (\"bcrypt\", \"bcrypt\")\n    rounds = 12\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "327887e30d5b2dfe:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 583,
            "snippet" : {
              "text" : "        r = r or self.block_size\n        p = p or self.parallelism\n        hash_ = hashlib.scrypt(\n            password.encode(),\n            salt=salt.encode(),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ff82c179c9abfb4:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 17,
            "endLine" : 589,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 591,
            "snippet" : {
              "text" : "        r = r or self.block_size\n        p = p or self.parallelism\n        hash_ = hashlib.scrypt(\n            password.encode(),\n            salt=salt.encode(),\n            n=n,\n            r=r,\n            p=p,\n            maxmem=self.maxmem,\n            dklen=64,\n        )\n        hash_ = base64.b64encode(hash_).decode(\"ascii\").strip()\n        return \"%s$%d$%s$%d$%d$%s\" % (self.algorithm, n, salt, r, p, hash_)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ff82c179c9abfb4:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 652,
            "startColumn" : 16,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 650,
            "endLine" : 654,
            "snippet" : {
              "text" : "    def encode(self, password, salt):\n        self._check_encode_args(password, salt)\n        hash = hashlib.md5((salt + password).encode()).hexdigest()\n        return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b90dedab612aa5cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/test/runner.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 592,
            "startColumn" : 25,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 590,
            "endLine" : 594,
            "snippet" : {
              "text" : "    @classmethod\n    def _hash_text(cls, text):\n        h = hashlib.new(cls.hash_algorithm, usedforsecurity=False)\n        h.update(text.encode(\"utf-8\"))\n        return h.hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dbc9923500e32a7b:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/test/runner.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 588,
            "startColumn" : 22,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 586,
            "endLine" : 590,
            "snippet" : {
              "text" : "\n    # This doesn't need to be cryptographically strong, so use what's fastest.\n    hash_algorithm = \"md5\"\n\n    @classmethod\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3498578379a1d02:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/staticfiles/storage.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import posixpath\nimport re\nfrom hashlib import md5\nfrom urllib.parse import unquote, urldefrag, urlsplit, urlunsplit\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fe2dc61bbc93253:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 34,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "            (\n                (\"salt\", \"value\"),\n                {\"secret\": \"x\" * hashlib.sha1().block_size},\n                \"bd3749347b412b1b0a9ea65220e55767ac8e96b0\",\n            ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d650d0d4380ad6c:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm BLAKE2B"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 37,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "                {\n                    \"algorithm\": \"blake2b\",\n                    \"secret\": \"x\" * hashlib.blake2b().block_size,\n                },\n                \"fc6b9800a584d40732a07fa33fb69c35211269441823bca431a143853c32f\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "636eed0cb71c3bf3:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 43,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 196,
            "snippet" : {
              "text" : "        self.assertEqual(\n            pbkdf2(**kwargs),\n            hashlib.pbkdf2_hmac(hash_name=hashlib.sha256().name, **kwargs),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d11c7438c487219:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 43,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 196,
            "snippet" : {
              "text" : "        self.assertEqual(\n            pbkdf2(**kwargs),\n            hashlib.pbkdf2_hmac(hash_name=hashlib.sha256().name, **kwargs),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d11c7438c487219:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm PBKDF2HMAC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 13,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 196,
            "snippet" : {
              "text" : "        self.assertEqual(\n            pbkdf2(**kwargs),\n            hashlib.pbkdf2_hmac(hash_name=hashlib.sha256().name, **kwargs),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d11c7438c487219:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"0c60c80f961f0e71f3a9b524af6012062fe037a6\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32833c06a8c36048:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 82,
            "snippet" : {
              "text" : "                \"iterations\": 2,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"ea6c014dc72d6f8ccd1ed92ace1d41f0d8de8957\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de2a3afefa71f441:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "                \"iterations\": 4096,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"4b007901b765489abead49d926f721d065a429c1\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5320a19091933676:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 111,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 109,
            "endLine" : 113,
            "snippet" : {
              "text" : "                \"iterations\": 4096,\n                \"dklen\": 25,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"3d2eec4fe41c849b80c8d83662c0e44a8b291a964cf2f07038\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83eacaeff314170f:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 123,
            "snippet" : {
              "text" : "                \"iterations\": 4096,\n                \"dklen\": 16,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"56fa6aa75548099dcc37d7f03425e0c3\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "23e43fe651aec750:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 134,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 132,
            "endLine" : 136,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha256,\n            },\n            \"result\": \"120fb6cffcf8b32c43e7225256c4f837a86548c9\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b15fef19eb808b0:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha512,\n            },\n            \"result\": \"867f70cf1ade02cff3752599a3a53dc4af34c7a6\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c507d2253fd0bc76:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 154,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 152,
            "endLine" : 156,
            "snippet" : {
              "text" : "                \"iterations\": 1000,\n                \"dklen\": 0,\n                \"digest\": hashlib.sha512,\n            },\n            \"result\": (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87d89db57adeeec7:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"0053d3b91a7f1e54effebd6d68771e8a6e0b2c5b\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7bebedc81c4046e:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/auth_tests/test_hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "    import hashlib\n\n    scrypt = hashlib.scrypt\nexcept ImportError:\n    scrypt = None\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a33e65552ef0c6a1:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/test_runner/test_shuffler.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 30,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "    def test_hash_text_hash_algorithm(self):\n        class MyShuffler(Shuffler):\n            hash_algorithm = \"sha1\"\n\n        actual = MyShuffler._hash_text(\"abcd\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a6185de86b38210:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 48,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 116,
            "snippet" : {
              "text" : "            for key in list(post_data):\n                try:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].read()\n                    ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3126cb20c48e241:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 119,
            "startColumn" : 48,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 117,
            "endLine" : 121,
            "snippet" : {
              "text" : "                    post_data[key].seek(0)\n                except AttributeError:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].encode()\n                    ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "207111bb1b7cc272:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "import warnings\nfrom contextlib import contextmanager\nfrom hashlib import md5\n\nfrom django.apps import apps\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd3822e37ab65472:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 1,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 3,
            "snippet" : {
              "text" : "from hashlib import md5\n\nTEMPLATE_FRAGMENT_KEY_TEMPLATE = \"template.cache.%s.%s\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fbeeef4cdd7d221f:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "        submitted_hash = form_data[key + \"_hash\"]\n        if isinstance(value, UploadedFile):\n            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fd8b75e2afc4cae:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 10,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 10
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n        if new_hash != submitted_hash:\n            return HttpResponseServerError()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec36f40e2cd09a32:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 26,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "25"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA224"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 32,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "31"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 40,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "39"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 48,
            "endColumn" : 54
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "47"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 56,
            "endColumn" : 62
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import zoneinfo\nfrom datetime import timedelta\nfrom hashlib import md5, sha1, sha224, sha256, sha384, sha512\nfrom math import (\n    acos,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6a9ee95f7d00186:1",
        "primaryLocationStartColumnFingerprint" : "55"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "import time\nfrom collections import defaultdict\nfrom hashlib import md5\n\nfrom django.conf import settings\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb0a4f537b9e972:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/template/loaders/cached.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 16,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\n    def generate_hash(self, values):\n        return hashlib.sha1(\"|\".join(values).encode()).hexdigest()\n\n    def reset(self):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd5b42a0ed288258:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 18,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    secret = force_bytes(secret)\n    try:\n        hasher = getattr(hashlib, algorithm)\n    except AttributeError as e:\n        raise InvalidAlgorithm(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a29e8f96578933a7:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 72,
            "startColumn" : 18,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 70,
            "endLine" : 74,
            "snippet" : {
              "text" : "    \"\"\"Return the hash of password using pbkdf2.\"\"\"\n    if digest is None:\n        digest = hashlib.sha256\n    dklen = dklen or None\n    password = force_bytes(password)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e1790578f7b041d1:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 32,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 76,
            "snippet" : {
              "text" : "    password = force_bytes(password)\n    salt = force_bytes(salt)\n    return hashlib.pbkdf2_hmac(digest().name, password, salt, iterations, dklen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d024b4777d6516bb:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/backends/filebased.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import time\nimport zlib\nfrom hashlib import md5\n\nfrom django.core.cache.backends.base import DEFAULT_TIMEOUT, BaseCache\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f944fd6c4c1367ba:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 316,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 314,
            "endLine" : 318,
            "snippet" : {
              "text" : "    algorithm = \"pbkdf2_sha256\"\n    iterations = 870000\n    digest = hashlib.sha256\n\n    def encode(self, password, salt, iterations=None):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "287c8a6710cba9a8:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 370,
            "startColumn" : 14,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 368,
            "endLine" : 372,
            "snippet" : {
              "text" : "\n    algorithm = \"pbkdf2_sha1\"\n    digest = hashlib.sha1\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "febe455d85f2a40a:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 486,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 484,
            "endLine" : 488,
            "snippet" : {
              "text" : "\n    algorithm = \"bcrypt_sha256\"\n    digest = hashlib.sha256\n    library = (\"bcrypt\", \"bcrypt\")\n    rounds = 12\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "327887e30d5b2dfe:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 583,
            "snippet" : {
              "text" : "        r = r or self.block_size\n        p = p or self.parallelism\n        hash_ = hashlib.scrypt(\n            password.encode(),\n            salt=salt.encode(),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ff82c179c9abfb4:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 652,
            "startColumn" : 16,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 650,
            "endLine" : 654,
            "snippet" : {
              "text" : "    def encode(self, password, salt):\n        self._check_encode_args(password, salt)\n        hash = hashlib.md5((salt + password).encode()).hexdigest()\n        return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b90dedab612aa5cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/test/runner.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 592,
            "startColumn" : 25,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 590,
            "endLine" : 594,
            "snippet" : {
              "text" : "    @classmethod\n    def _hash_text(cls, text):\n        h = hashlib.new(cls.hash_algorithm, usedforsecurity=False)\n        h.update(text.encode(\"utf-8\"))\n        return h.hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dbc9923500e32a7b:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/test/runner.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 588,
            "startColumn" : 22,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 586,
            "endLine" : 590,
            "snippet" : {
              "text" : "\n    # This doesn't need to be cryptographically strong, so use what's fastest.\n    hash_algorithm = \"md5\"\n\n    @classmethod\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f3498578379a1d02:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/staticfiles/storage.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import posixpath\nimport re\nfrom hashlib import md5\nfrom urllib.parse import unquote, urldefrag, urlsplit, urlunsplit\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fe2dc61bbc93253:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 34,
            "endColumn" : 46
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "            (\n                (\"salt\", \"value\"),\n                {\"secret\": \"x\" * hashlib.sha1().block_size},\n                \"bd3749347b412b1b0a9ea65220e55767ac8e96b0\",\n            ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d650d0d4380ad6c:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm BLAKE2B"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 37,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "                {\n                    \"algorithm\": \"blake2b\",\n                    \"secret\": \"x\" * hashlib.blake2b().block_size,\n                },\n                \"fc6b9800a584d40732a07fa33fb69c35211269441823bca431a143853c32f\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "636eed0cb71c3bf3:1",
        "primaryLocationStartColumnFingerprint" : "16"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 43,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 196,
            "snippet" : {
              "text" : "        self.assertEqual(\n            pbkdf2(**kwargs),\n            hashlib.pbkdf2_hmac(hash_name=hashlib.sha256().name, **kwargs),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d11c7438c487219:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 43,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 196,
            "snippet" : {
              "text" : "        self.assertEqual(\n            pbkdf2(**kwargs),\n            hashlib.pbkdf2_hmac(hash_name=hashlib.sha256().name, **kwargs),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d11c7438c487219:1",
        "primaryLocationStartColumnFingerprint" : "30"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"0c60c80f961f0e71f3a9b524af6012062fe037a6\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32833c06a8c36048:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 80,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 78,
            "endLine" : 82,
            "snippet" : {
              "text" : "                \"iterations\": 2,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"ea6c014dc72d6f8ccd1ed92ace1d41f0d8de8957\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de2a3afefa71f441:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "                \"iterations\": 4096,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"4b007901b765489abead49d926f721d065a429c1\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5320a19091933676:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 111,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 109,
            "endLine" : 113,
            "snippet" : {
              "text" : "                \"iterations\": 4096,\n                \"dklen\": 25,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"3d2eec4fe41c849b80c8d83662c0e44a8b291a964cf2f07038\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "83eacaeff314170f:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 123,
            "snippet" : {
              "text" : "                \"iterations\": 4096,\n                \"dklen\": 16,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"56fa6aa75548099dcc37d7f03425e0c3\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "23e43fe651aec750:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 134,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 132,
            "endLine" : 136,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha256,\n            },\n            \"result\": \"120fb6cffcf8b32c43e7225256c4f837a86548c9\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b15fef19eb808b0:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 144,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 142,
            "endLine" : 146,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha512,\n            },\n            \"result\": \"867f70cf1ade02cff3752599a3a53dc4af34c7a6\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c507d2253fd0bc76:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 154,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 152,
            "endLine" : 156,
            "snippet" : {
              "text" : "                \"iterations\": 1000,\n                \"dklen\": 0,\n                \"digest\": hashlib.sha512,\n            },\n            \"result\": (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "87d89db57adeeec7:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 170,
            "startColumn" : 27,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 168,
            "endLine" : 172,
            "snippet" : {
              "text" : "                \"iterations\": 1,\n                \"dklen\": 20,\n                \"digest\": hashlib.sha1,\n            },\n            \"result\": \"0053d3b91a7f1e54effebd6d68771e8a6e0b2c5b\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a7bebedc81c4046e:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/auth_tests/test_hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 14,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "    import hashlib\n\n    scrypt = hashlib.scrypt\nexcept ImportError:\n    scrypt = None\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a33e65552ef0c6a1:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/test_runner/test_shuffler.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 14,
            "startColumn" : 30,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 12,
            "endLine" : 16,
            "snippet" : {
              "text" : "    def test_hash_text_hash_algorithm(self):\n        class MyShuffler(Shuffler):\n            hash_algorithm = \"sha1\"\n\n        actual = MyShuffler._hash_text(\"abcd\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2a6185de86b38210:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 48,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 116,
            "snippet" : {
              "text" : "            for key in list(post_data):\n                try:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].read()\n                    ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3126cb20c48e241:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 119,
            "startColumn" : 48,
            "endColumn" : 60
          },
          "contextRegion" : {
            "startLine" : 117,
            "endLine" : 121,
            "snippet" : {
              "text" : "                    post_data[key].seek(0)\n                except AttributeError:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].encode()\n                    ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "207111bb1b7cc272:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "import warnings\nfrom contextlib import contextmanager\nfrom hashlib import md5\n\nfrom django.apps import apps\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd3822e37ab65472:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 1,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 3,
            "snippet" : {
              "text" : "from hashlib import md5\n\nTEMPLATE_FRAGMENT_KEY_TEMPLATE = \"template.cache.%s.%s\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fbeeef4cdd7d221f:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "        submitted_hash = form_data[key + \"_hash\"]\n        if isinstance(value, UploadedFile):\n            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fd8b75e2afc4cae:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 12,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 12
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n        if new_hash != submitted_hash:\n            return HttpResponseServerError()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec36f40e2cd09a32:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/key-derivation",
      "ruleIndex" : 15,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/key-derivation",
        "index" : 15
      },
      "message" : {
        "text" : "Use of key derivation algorithm PBKDF2HMAC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 12,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 76,
            "snippet" : {
              "text" : "    password = force_bytes(password)\n    salt = force_bytes(salt)\n    return hashlib.pbkdf2_hmac(digest().name, password, salt, iterations, dklen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d024b4777d6516bb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/key-derivation",
      "ruleIndex" : 15,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/key-derivation",
        "index" : 15
      },
      "message" : {
        "text" : "Use of key derivation algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 17,
            "endLine" : 589,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 591,
            "snippet" : {
              "text" : "        r = r or self.block_size\n        p = p or self.parallelism\n        hash_ = hashlib.scrypt(\n            password.encode(),\n            salt=salt.encode(),\n            n=n,\n            r=r,\n            p=p,\n            maxmem=self.maxmem,\n            dklen=64,\n        )\n        hash_ = base64.b64encode(hash_).decode(\"ascii\").strip()\n        return \"%s$%d$%s$%d$%d$%s\" % (self.algorithm, n, salt, r, p, hash_)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ff82c179c9abfb4:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/key-derivation",
      "ruleIndex" : 15,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/key-derivation",
        "index" : 15
      },
      "message" : {
        "text" : "Use of key derivation algorithm PBKDF2HMAC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/utils_tests/test_crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 195,
            "startColumn" : 13,
            "endColumn" : 75
          },
          "contextRegion" : {
            "startLine" : 193,
            "endLine" : 196,
            "snippet" : {
              "text" : "        self.assertEqual(\n            pbkdf2(**kwargs),\n            hashlib.pbkdf2_hmac(hash_name=hashlib.sha256().name, **kwargs),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4d11c7438c487219:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 397,
            "startColumn" : 12,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 395,
            "endLine" : 399,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return md5(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5277ee3c5805ee61:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 443,
            "startColumn" : 12,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 441,
            "endLine" : 445,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha1(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a69878130a7dd23:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA224"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 449,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 447,
            "endLine" : 451,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha224(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea3234afb0d93ba0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 455,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 453,
            "endLine" : 457,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha256(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79870de32c2ae28f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 461,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 459,
            "endLine" : 463,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha384(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1abf2069f66df276:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 467,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 465,
            "endLine" : 469,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha512(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3497dffc046df76f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 13,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 123,
            "snippet" : {
              "text" : "    if not response.streaming and response.content:\n        response.headers[\"ETag\"] = quote_etag(\n            md5(response.content, usedforsecurity=False).hexdigest(),\n        )\n    return response\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b4163f88ad88f9d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 355,
            "startColumn" : 13,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 353,
            "endLine" : 357,
            "snippet" : {
              "text" : "        value = request.META.get(header)\n        if value is not None:\n            ctx.update(value.encode())\n    url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n    cache_key = \"views.decorators.cache.cache_page.%s.%s.%s.%s\" % (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c8fc9f5a6dc761d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 356,
            "startColumn" : 11,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 354,
            "endLine" : 358,
            "snippet" : {
              "text" : "        if value is not None:\n            ctx.update(value.encode())\n    url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n    cache_key = \"views.decorators.cache.cache_page.%s.%s.%s.%s\" % (\n        key_prefix,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a23f64461d1c5d79:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 368,
            "startColumn" : 11,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 366,
            "endLine" : 370,
            "snippet" : {
              "text" : "def _generate_cache_header_key(key_prefix, request):\n    \"\"\"Return a cache key for the header cache.\"\"\"\n    url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n    cache_key = \"views.decorators.cache.cache_header.%s.%s\" % (\n        key_prefix,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a23f64461d1c5d79:2",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/template/loaders/cached.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 16,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\n    def generate_hash(self, values):\n        return hashlib.sha1(\"|\".join(values).encode()).hexdigest()\n\n    def reset(self):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd5b42a0ed288258:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm PBKDF2"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 12,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 76,
            "snippet" : {
              "text" : "    password = force_bytes(password)\n    salt = force_bytes(salt)\n    return hashlib.pbkdf2_hmac(digest().name, password, salt, iterations, dklen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d024b4777d6516bb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/backends/filebased.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 135,
            "startColumn" : 21,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 133,
            "endLine" : 137,
            "snippet" : {
              "text" : "            \"\".join(\n                [\n                    md5(key.encode(), usedforsecurity=False).hexdigest(),\n                    self.cache_suffix,\n                ]\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "514facd7a05a51dd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 17,
            "endLine" : 589,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 591,
            "snippet" : {
              "text" : "        r = r or self.block_size\n        p = p or self.parallelism\n        hash_ = hashlib.scrypt(\n            password.encode(),\n            salt=salt.encode(),\n            n=n,\n            r=r,\n            p=p,\n            maxmem=self.maxmem,\n            dklen=64,\n        )\n        hash_ = base64.b64encode(hash_).decode(\"ascii\").strip()\n        return \"%s$%d$%s$%d$%d$%s\" % (self.algorithm, n, salt, r, p, hash_)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ff82c179c9abfb4:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 652,
            "startColumn" : 16,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 650,
            "endLine" : 654,
            "snippet" : {
              "text" : "    def encode(self, password, salt):\n        self._check_encode_args(password, salt)\n        hash = hashlib.md5((salt + password).encode()).hexdigest()\n        return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b90dedab612aa5cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5\nUse of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/test/runner.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 593,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 591,
            "endLine" : 595,
            "snippet" : {
              "text" : "    def _hash_text(cls, text):\n        h = hashlib.new(cls.hash_algorithm, usedforsecurity=False)\n        h.update(text.encode(\"utf-8\"))\n        return h.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69d47b9538815378:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/staticfiles/storage.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 13,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "        hasher = md5(usedforsecurity=False)\n        for chunk in content.chunks():\n            hasher.update(chunk)\n        return hasher.hexdigest()[:12]\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c268296ef16ce3b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 48,
            "endLine" : 116,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 118,
            "snippet" : {
              "text" : "            for key in list(post_data):\n                try:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].read()\n                    ).hexdigest()\n                    post_data[key].seek(0)\n                except AttributeError:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3126cb20c48e241:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 119,
            "startColumn" : 48,
            "endLine" : 121,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 117,
            "endLine" : 123,
            "snippet" : {
              "text" : "                    post_data[key].seek(0)\n                except AttributeError:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].encode()\n                    ).hexdigest()\n\n            response = self.client.post(\"/verify/\", post_data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "207111bb1b7cc272:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 9,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "    h = md5(usedforsecurity=False)\n    for arg in args:\n        h.update(arg.encode())\n    return h.hexdigest()[:length]\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25bdcffc17daaf39:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "    if vary_on is not None:\n        for arg in vary_on:\n            hasher.update(str(arg).encode())\n            hasher.update(b\":\")\n    return TEMPLATE_FRAGMENT_KEY_TEMPLATE % (fragment_name, hasher.hexdigest())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c127413138436ba5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 13,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 12,
            "snippet" : {
              "text" : "        for arg in vary_on:\n            hasher.update(str(arg).encode())\n            hasher.update(b\":\")\n    return TEMPLATE_FRAGMENT_KEY_TEMPLATE % (fragment_name, hasher.hexdigest())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4715b4da68a2d78b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 24,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "        submitted_hash = form_data[key + \"_hash\"]\n        if isinstance(value, UploadedFile):\n            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fd8b75e2afc4cae:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
      "ruleIndex" : 17,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/all-cryptographic-algorithms",
        "index" : 17
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 24,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n        if new_hash != submitted_hash:\n            return HttpResponseServerError()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec36f40e2cd09a32:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 397,
            "startColumn" : 12,
            "endColumn" : 30
          },
          "contextRegion" : {
            "startLine" : 395,
            "endLine" : 399,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return md5(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5277ee3c5805ee61:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 443,
            "startColumn" : 12,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 441,
            "endLine" : 445,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha1(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a69878130a7dd23:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA224"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 449,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 447,
            "endLine" : 451,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha224(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ea3234afb0d93ba0:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 455,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 453,
            "endLine" : 457,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha256(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "79870de32c2ae28f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 461,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 459,
            "endLine" : 463,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha384(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1abf2069f66df276:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/sqlite3/_functions.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 467,
            "startColumn" : 12,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 465,
            "endLine" : 469,
            "snippet" : {
              "text" : "    if text is None:\n        return None\n    return sha512(text.encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3497dffc046df76f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 121,
            "startColumn" : 13,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 119,
            "endLine" : 123,
            "snippet" : {
              "text" : "    if not response.streaming and response.content:\n        response.headers[\"ETag\"] = quote_etag(\n            md5(response.content, usedforsecurity=False).hexdigest(),\n        )\n    return response\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6b4163f88ad88f9d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 355,
            "startColumn" : 13,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 353,
            "endLine" : 357,
            "snippet" : {
              "text" : "        value = request.META.get(header)\n        if value is not None:\n            ctx.update(value.encode())\n    url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n    cache_key = \"views.decorators.cache.cache_page.%s.%s.%s.%s\" % (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c8fc9f5a6dc761d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 356,
            "startColumn" : 11,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 354,
            "endLine" : 358,
            "snippet" : {
              "text" : "        if value is not None:\n            ctx.update(value.encode())\n    url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n    cache_key = \"views.decorators.cache.cache_page.%s.%s.%s.%s\" % (\n        key_prefix,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a23f64461d1c5d79:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/cache.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 368,
            "startColumn" : 11,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 366,
            "endLine" : 370,
            "snippet" : {
              "text" : "def _generate_cache_header_key(key_prefix, request):\n    \"\"\"Return a cache key for the header cache.\"\"\"\n    url = md5(request.build_absolute_uri().encode(\"ascii\"), usedforsecurity=False)\n    cache_key = \"views.decorators.cache.cache_header.%s.%s\" % (\n        key_prefix,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a23f64461d1c5d79:2",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/template/loaders/cached.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 16,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "\n    def generate_hash(self, values):\n        return hashlib.sha1(\"|\".join(values).encode()).hexdigest()\n\n    def reset(self):\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd5b42a0ed288258:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm PBKDF2"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/utils/crypto.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 12,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 76,
            "snippet" : {
              "text" : "    password = force_bytes(password)\n    salt = force_bytes(salt)\n    return hashlib.pbkdf2_hmac(digest().name, password, salt, iterations, dklen)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d024b4777d6516bb:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/backends/filebased.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 135,
            "startColumn" : 21,
            "endColumn" : 61
          },
          "contextRegion" : {
            "startLine" : 133,
            "endLine" : 137,
            "snippet" : {
              "text" : "            \"\".join(\n                [\n                    md5(key.encode(), usedforsecurity=False).hexdigest(),\n                    self.cache_suffix,\n                ]\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "514facd7a05a51dd:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SCRYPT"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 581,
            "startColumn" : 17,
            "endLine" : 589,
            "endColumn" : 10
          },
          "contextRegion" : {
            "startLine" : 579,
            "endLine" : 591,
            "snippet" : {
              "text" : "        r = r or self.block_size\n        p = p or self.parallelism\n        hash_ = hashlib.scrypt(\n            password.encode(),\n            salt=salt.encode(),\n            n=n,\n            r=r,\n            p=p,\n            maxmem=self.maxmem,\n            dklen=64,\n        )\n        hash_ = base64.b64encode(hash_).decode(\"ascii\").strip()\n        return \"%s$%d$%s$%d$%d$%s\" % (self.algorithm, n, salt, r, p, hash_)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8ff82c179c9abfb4:1",
        "primaryLocationStartColumnFingerprint" : "8"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/auth/hashers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 652,
            "startColumn" : 16,
            "endColumn" : 55
          },
          "contextRegion" : {
            "startLine" : 650,
            "endLine" : 654,
            "snippet" : {
              "text" : "    def encode(self, password, salt):\n        self._check_encode_args(password, salt)\n        hash = hashlib.md5((salt + password).encode()).hexdigest()\n        return \"%s$%s$%s\" % (self.algorithm, salt, hash)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b90dedab612aa5cc:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5\nUse of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/test/runner.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 593,
            "startColumn" : 9,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 591,
            "endLine" : 595,
            "snippet" : {
              "text" : "    def _hash_text(cls, text):\n        h = hashlib.new(cls.hash_algorithm, usedforsecurity=False)\n        h.update(text.encode(\"utf-8\"))\n        return h.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "69d47b9538815378:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/contrib/staticfiles/storage.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 131,
            "startColumn" : 13,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 129,
            "endLine" : 133,
            "snippet" : {
              "text" : "        hasher = md5(usedforsecurity=False)\n        for chunk in content.chunks():\n            hasher.update(chunk)\n        return hasher.hexdigest()[:12]\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c268296ef16ce3b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 114,
            "startColumn" : 48,
            "endLine" : 116,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 112,
            "endLine" : 118,
            "snippet" : {
              "text" : "            for key in list(post_data):\n                try:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].read()\n                    ).hexdigest()\n                    post_data[key].seek(0)\n                except AttributeError:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a3126cb20c48e241:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/tests.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 119,
            "startColumn" : 48,
            "endLine" : 121,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 117,
            "endLine" : 123,
            "snippet" : {
              "text" : "                    post_data[key].seek(0)\n                except AttributeError:\n                    post_data[key + \"_hash\"] = hashlib.sha1(\n                        post_data[key].encode()\n                    ).hexdigest()\n\n            response = self.client.post(\"/verify/\", post_data)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "207111bb1b7cc272:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/db/backends/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 309,
            "startColumn" : 9,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 307,
            "endLine" : 311,
            "snippet" : {
              "text" : "    h = md5(usedforsecurity=False)\n    for arg in args:\n        h.update(arg.encode())\n    return h.hexdigest()[:length]\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25bdcffc17daaf39:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 13,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "    if vary_on is not None:\n        for arg in vary_on:\n            hasher.update(str(arg).encode())\n            hasher.update(b\":\")\n    return TEMPLATE_FRAGMENT_KEY_TEMPLATE % (fragment_name, hasher.hexdigest())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c127413138436ba5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "django/core/cache/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 13,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 12,
            "snippet" : {
              "text" : "        for arg in vary_on:\n            hasher.update(str(arg).encode())\n            hasher.update(b\":\")\n    return TEMPLATE_FRAGMENT_KEY_TEMPLATE % (fragment_name, hasher.hexdigest())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4715b4da68a2d78b:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 50,
            "startColumn" : 24,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 48,
            "endLine" : 52,
            "snippet" : {
              "text" : "        submitted_hash = form_data[key + \"_hash\"]\n        if isinstance(value, UploadedFile):\n            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8fd8b75e2afc4cae:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
      "ruleIndex" : 18,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/classic-model/hash-algorithms",
        "index" : 18
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "tests/file_uploads/views.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 24,
            "endColumn" : 52
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "            new_hash = hashlib.sha1(value.read()).hexdigest()\n        else:\n            new_hash = hashlib.sha1(value.encode()).hexdigest()\n        if new_hash != submitted_hash:\n            return HttpResponseServerError()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ec36f40e2cd09a32:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    } ],
    "automationDetails" : {
      "id" : "PQC:django/django/python/"
    },
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}