{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.3",
        "notifications" : [ {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        } ],
        "rules" : [ {
          "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "name" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "shortDescription" : {
            "text" : "Unknown Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
            "kind" : "problem",
            "name" : "Unknown Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "name" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "shortDescription" : {
            "text" : "All Cryptographic Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
            "kind" : "problem",
            "name" : "All Cryptographic Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Symmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with symmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with symmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Symmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/iv-sources",
          "name" : "py/quantum-readiness/cbom/iv-sources",
          "shortDescription" : {
            "text" : "Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/iv-sources",
            "kind" : "problem",
            "name" : "Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "shortDescription" : {
            "text" : "All Asymmetric Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "description" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
            "kind" : "problem",
            "name" : "All Asymmetric Algorithms",
            "preci" : "cbom\n       cryptography",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-exchange",
          "name" : "py/quantum-readiness/cbom/key-exchange",
          "shortDescription" : {
            "text" : "Key Exchange Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-exchange",
            "kind" : "problem",
            "name" : "Key Exchange Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/hash-algorithms",
          "name" : "py/quantum-readiness/cbom/hash-algorithms",
          "shortDescription" : {
            "text" : "Hash Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/hash-algorithms",
            "kind" : "problem",
            "name" : "Hash Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Symmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Symmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "name" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "shortDescription" : {
            "text" : "Known asymmetric key source generation"
          },
          "fullDescription" : {
            "text" : "Finds all known potential sources for asymmetric key generation while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all known potential sources for asymmetric key generation while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
            "kind" : "problem",
            "name" : "Known asymmetric key source generation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Asymmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with asymmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with asymmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Asymmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-derivation",
          "name" : "py/quantum-readiness/cbom/key-derivation",
          "shortDescription" : {
            "text" : "Key Derivation Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key derivation using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key derivation using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-derivation",
            "kind" : "problem",
            "name" : "Key Derivation Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/signing-algorithms",
          "name" : "py/quantum-readiness/cbom/signing-algorithms",
          "shortDescription" : {
            "text" : "Signing Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of signing algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of signing algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/signing-algorithms",
            "kind" : "problem",
            "name" : "Signing Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "shortDescription" : {
            "text" : "Authenticated Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of authenticated encryption schemes using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of authenticated encryption schemes using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
            "kind" : "problem",
            "name" : "Authenticated Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Asymmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Asymmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/block-cipher-mode",
          "name" : "py/quantum-readiness/cbom/block-cipher-mode",
          "shortDescription" : {
            "text" : "Block cipher mode of operation"
          },
          "fullDescription" : {
            "text" : "Finds all potential block cipher modes of operations using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential block cipher modes of operations using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/block-cipher-mode",
            "kind" : "problem",
            "name" : "Block cipher mode of operation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "name" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "shortDescription" : {
            "text" : "Elliptic Curve Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of elliptic curve algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of elliptic curve algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
            "kind" : "problem",
            "name" : "Elliptic Curve Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "codeql/python-queries",
        "semanticVersion" : "0.9.3+ff65ffafb003e86bd4c18f2c031f5faaf6f1038b",
        "locations" : [ {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.3/x64/codeql/qlpacks/codeql/python-queries/0.9.3/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.3/x64/codeql/qlpacks/codeql/python-queries/0.9.3/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "hummingbot/connector/exchange/ascend_ex/ascend_ex_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/binance/binance_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/binance_perpetual/binance_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/bit_com_perpetual/bit_com_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/bitfinex/bitfinex_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/bitget_perpetual/bitget_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/bitmart/bitmart_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/bitmex/bitmex_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/bitmex_perpetual/bitmex_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/btc_markets/btc_markets_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/bybit/bybit_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/coinbase_pro/coinbase_pro_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/gate_io/gate_io_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/gate_io_perpetual/gate_io_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/hitbtc/hitbtc_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 15
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/huobi/huobi_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 16
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/kraken/kraken_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 17
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 18
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 19
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/gateway/clob_spot/data_sources/kujira/kujira_helpers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 20
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/mexc/mexc_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 21
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/ndax/ndax_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 22
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/okx/okx_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 23
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/utilities/oms_connector/oms_connector_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 24
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/test_support/oms_exchange_connector_test.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 25
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/derivative/phemex_perpetual/phemex_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 26
      }
    }, {
      "location" : {
        "uri" : "hummingbot/core/utils/ssl_cert.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 27
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 28
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/binance/test_binance_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 29
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 30
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/bit_com_perpetual/test_bit_com_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 31
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 32
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 33
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 34
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 35
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 36
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 37
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 38
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 39
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 40
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/huobi/test_huobi_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 41
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 42
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/kucoin_perpetual/test_kucoin_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 43
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/mexc/test_mexc_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 44
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 45
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/okx/test_okx_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 46
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_user_stream_data_source.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 47
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 48
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/derivative/phemex_perpetual/test_phemex_perpetual_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 49
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/test_utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 50
      }
    }, {
      "location" : {
        "uri" : "test/hummingbot/connector/exchange/woo_x/test_woo_x_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 51
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 52
      }
    }, {
      "location" : {
        "uri" : "hummingbot/connector/exchange/woo_x/woo_x_auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 53
      }
    } ],
    "results" : [ {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/ascend_ex/ascend_ex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 60,
            "snippet" : {
              "text" : "        timestamp = str(int(self._time() * 1e3))\n        message = timestamp + path_url\n        signature = hmac.new(self.secret_key.encode(\"utf-8\"), message.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n\n        return {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9314caf0d522d97f:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/binance/binance_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 63,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 61,
            "endLine" : 64,
            "snippet" : {
              "text" : "\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/binance_perpetual/binance_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bit_com_perpetual/bit_com_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bitfinex/bitfinex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 24,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "        sig = hmac.new(self.secret_key.encode('utf8'),\n                       payload.encode('utf8'),\n                       hashlib.sha384).hexdigest()\n        return sig\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f85e36ecba4de2d1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bitget_perpetual/bitget_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 104,
            "endColumn" : 112
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "    @staticmethod\n    def _sign(message, secret_key):\n        mac = hmac.new(bytes(secret_key, encoding='utf8'), bytes(message, encoding='utf-8'), digestmod='sha256')\n        d = mac.digest()\n        return base64.b64encode(d).decode().strip()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e82078d299dbfdb8:1",
        "primaryLocationStartColumnFingerprint" : "95"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bitmart/bitmart_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "            self.secret_key.encode(\"utf-8\"),\n            unsigned_signature.encode(\"utf-8\"),\n            hashlib.sha256).hexdigest()\n\n        return signature\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "30a8fe0a3bc17d9f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bitmex/bitmex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bitmex_perpetual/bitmex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/btc_markets/btc_markets_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 82,
            "endColumn" : 96
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "        \"\"\"\n        digest = base64.b64encode(hmac.new(\n            base64.b64decode(self.secret_key), payload.encode(\"utf8\"), digestmod=hashlib.sha512).digest())\n        return digest.decode('utf8')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64e2adf82d2e0545:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bybit/bybit_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "    def _generate_signature(self, params: Dict[str, Any]) -> str:\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bybit/bybit_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 79,
            "startColumn" : 51,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 77,
            "endLine" : 81,
            "snippet" : {
              "text" : "        _val = f'GET/realtime{expires}'\n        signature = hmac.new(self.secret_key.encode(\"utf8\"),\n                             _val.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        auth_message = {\n            \"op\": \"auth\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ea933f2c56f4aa5:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 78,
            "endColumn" : 92
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "        raw_signature = \"GET/realtime\" + expires\n        signature = hmac.new(\n            self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n        auth_info = [self._api_key, expires, signature]\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7e14ba0d87b3d17:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 95,
            "endColumn" : 109
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "            key_value_elements.append(str(key) + \"=\" + converted_value)\n        raw_signature = \"&\".join(key_value_elements)\n        signature = hmac.new(self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        params[\"sign\"] = signature\n        return params\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d5ae1be4a8fcf4c:1",
        "primaryLocationStartColumnFingerprint" : "86"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/coinbase_pro/coinbase_pro_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 59,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 57,
            "endLine" : 61,
            "snippet" : {
              "text" : "        message = timestamp + method_str + path_url + body\n        hmac_key = base64.b64decode(self.secret_key)\n        signature = hmac.new(hmac_key, message.encode('utf8'), hashlib.sha256)\n        signature_b64 = base64.b64encode(bytes(signature.digest())).decode('utf8')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1d719330f880457:1",
        "primaryLocationStartColumnFingerprint" : "55"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/gate_io/gate_io_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 78,
            "snippet" : {
              "text" : "\n        ts = time.time()\n        m = hashlib.sha512()\n        path = urlparse(r.url).path\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e928d97825dbaa7:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/gate_io/gate_io_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 98,
            "snippet" : {
              "text" : "            self.secret_key.encode('utf-8'),\n            payload.encode('utf-8'),\n            hashlib.sha512).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a311da9c2b182d7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/gate_io_perpetual/gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 72,
            "endLine" : 76,
            "snippet" : {
              "text" : "\n        ts = self._get_timestamp()\n        m = hashlib.sha512()\n        path = urlparse(r.url).path\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e928d97825dbaa7:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/gate_io_perpetual/gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "            self.secret_key.encode('utf-8'),\n            payload.encode('utf-8'),\n            hashlib.sha512).hexdigest()\n\n    @staticmethod\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ccf5f7fe036856d9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/hitbtc/hitbtc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 40,
            "startColumn" : 68,
            "endColumn" : 82
          },
          "contextRegion" : {
            "startLine" : 38,
            "endLine" : 42,
            "snippet" : {
              "text" : "        payload = f\"{method}{nonce}{url}{body}\"\n        # Create HS256 sig\n        sig = hmac.new(self.secret_key.encode(), payload.encode(), hashlib.sha256).hexdigest()\n        # Base64 encode it with public key and nonce\n        return b64encode(f\"{self.api_key}:{nonce}:{sig}\".encode()).decode().strip()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7610f4568e39ceb:1",
        "primaryLocationStartColumnFingerprint" : "59"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/hitbtc/hitbtc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 35,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "            \"signature\": hmac.new(self.secret_key.encode('utf-8'),\n                                  str(nonce).encode('utf-8'),\n                                  hashlib.sha256).hexdigest()\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e412e053cc45c2f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/huobi/huobi_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 83,
            "endColumn" : 97
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 85,
            "snippet" : {
              "text" : "        encoded_params_str = urlencode(params)\n        payload = \"\\n\".join([method.upper(), self.hostname, query_endpoint, encoded_params_str])\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), payload.encode(\"utf8\"), hashlib.sha256).digest()\n        signature_b64 = base64.b64encode(digest).decode()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c16820c629f72dec:1",
        "primaryLocationStartColumnFingerprint" : "74"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kraken/kraken_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 75,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "        # Cryptographic hash algorithms\n        api_sha256: bytes = hashlib.sha256(bytes(api_nonce + api_post, 'utf-8')).digest()\n        api_hmac: hmac.HMAC = hmac.new(api_secret, api_path + api_sha256, hashlib.sha512)\n\n        # Encode signature into base64 format used in API-Sign value\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22a5a8a2de330952:1",
        "primaryLocationStartColumnFingerprint" : "66"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kraken/kraken_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "\n        # Cryptographic hash algorithms\n        api_sha256: bytes = hashlib.sha256(bytes(api_nonce + api_post, 'utf-8')).digest()\n        api_hmac: hmac.HMAC = hmac.new(api_secret, api_path + api_sha256, hashlib.sha512)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d4250dcd8def0bf4:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 54,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 52,
            "endLine" : 56,
            "snippet" : {
              "text" : "                CONSTANTS.HB_PARTNER_KEY.encode(\"utf-8\"),\n                partner_payload.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        third_party = {\n            \"KC-API-PARTNER\": CONSTANTS.HB_PARTNER_ID,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a13c62e7fe29c40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "                self.secret_key.encode(\"utf-8\"),\n                payload.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        passphrase = base64.b64encode(\n            hmac.new(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4706fe0fe3174981:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "                self.secret_key.encode('utf-8'),\n                self.passphrase.encode('utf-8'),\n                hashlib.sha256).digest())\n        header[\"KC-API-SIGN\"] = str(signature, \"utf-8\")\n        header[\"KC-API-PASSPHRASE\"] = str(passphrase, \"utf-8\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d3b533fb5e14cf5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 78,
            "endColumn" : 92
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "        raw_signature = \"GET/realtime\" + expires\r\n        signature = hmac.new(\r\n            self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256\r\n        ).hexdigest()\r\n        auth_info = [self._api_key, expires, signature]\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7e14ba0d87b3d17:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 95,
            "endColumn" : 109
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "            key_value_elements.append(str(key) + \"=\" + converted_value)\r\n        raw_signature = \"&\".join(key_value_elements)\r\n        signature = hmac.new(self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).hexdigest()\r\n        params[\"sign\"] = signature\r\n        return params\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d5ae1be4a8fcf4c:1",
        "primaryLocationStartColumnFingerprint" : "86"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "                CONSTANTS.HB_PARTNER_KEY.encode(\"utf-8\"),\r\n                partner_payload.encode(\"utf-8\"),\r\n                hashlib.sha256).digest())\r\n        third_party = {\r\n            \"KC-API-PARTNER\": CONSTANTS.HB_PARTNER_ID,\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a13c62e7fe29c40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 135,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 133,
            "endLine" : 137,
            "snippet" : {
              "text" : "                self._secret_key.encode(\"utf-8\"),\r\n                payload.encode(\"utf-8\"),\r\n                hashlib.sha256).digest())\r\n        passphrase = base64.b64encode(\r\n            hmac.new(\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ab3d92017d033bf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "                self._secret_key.encode('utf-8'),\r\n                self._passphrase.encode('utf-8'),\r\n                hashlib.sha256).digest())\r\n        header[\"KC-API-SIGN\"] = str(signature, \"utf-8\")\r\n        header[\"KC-API-PASSPHRASE\"] = str(passphrase, \"utf-8\")\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d3b533fb5e14cf5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/gateway/clob_spot/data_sources/kujira/kujira_helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 18,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "    for input in inputs:\n        serialized = jsonpickle.encode(input, unpicklable=True)\n        hasher = hashlib.md5()\n        target = f\"{salt}{serialized}\".encode(\"utf-8\")\n        hasher.update(target)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b7f8d93318d42cb:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/mexc/mexc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 63,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 61,
            "endLine" : 64,
            "snippet" : {
              "text" : "\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/ndax/ndax_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "                     'Signature': hmac.new(self._secret_key.encode('utf-8'),\n                                           raw_signature.encode('utf-8'),\n                                           hashlib.sha256).hexdigest(),\n                     'UserId': self._uid}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c61c20fc84bad28:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/okx/okx_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "                self.secret_key.encode(\"utf-8\"),\n                unsigned_signature.encode(\"utf-8\"),\n                hashlib.sha256).digest()).decode()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c89584c699834ea1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/utilities/oms_connector/oms_connector_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 67,
            "snippet" : {
              "text" : "            key=self.secret_key.encode(\"utf-8\"),\n            msg=auth_concat.encode(\"utf-8\"),\n            digestmod=hashlib.sha256,\n        ).hexdigest()\n        return signature\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c9ba5fb2f8069ec:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/test_support/oms_exchange_connector_test.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "                key=cls.secret.encode(\"utf-8\"),\n                msg=auth_concat.encode(\"utf-8\"),\n                digestmod=hashlib.sha256,\n            ).hexdigest()\n            cls.user_name = \"someUserName\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8ac773ce74b4c47:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/phemex_perpetual/phemex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 89,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 21,
            "endLine" : 25,
            "snippet" : {
              "text" : "\n    def generate_signature_from_payload(self, payload: str) -> str:\n        signature = hmac.new(self._api_secret.encode(\"utf-8\"), payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3e3388c51228ed4:1",
        "primaryLocationStartColumnFingerprint" : "80"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endLine" : 40,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 42,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n        backend=default_backend()\n    )\n\n    algorithm = serialization.NoEncryption()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 9,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "    public_key = builder.sign(\n        private_key,\n        hashes.SHA256(),\n        default_backend()\n    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c65f7b171d07cd5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 118,
            "startColumn" : 37,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 116,
            "endLine" : 120,
            "snippet" : {
              "text" : "    )\n\n    csr = builder.sign(private_key, hashes.SHA256(), default_backend())\n\n    # filepath = join(CERT_FILE_PATH, filename)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cabc8986ac001120:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 23,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "        public_key = builder.sign(\n            private_key=ca_private_key,\n            algorithm=hashes.SHA256(),\n            backend=default_backend(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb7d5071b7c210cd:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509.oid import NameOID\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d8ab75cbd6ab81a:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 71,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "        message = timestamp + path_url\n        expected_signature = hmac.new(\n            self.secret_key.encode(\"utf-8\"), message.encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6ddc3de3e5b0703:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/binance/test_binance_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            self._secret.encode(\"utf-8\"),\n            encoded_params.encode(\"utf-8\"),\n            hashlib.sha256).hexdigest()\n        self.assertEqual(now * 1e3, configured_request.params[\"timestamp\"])\n        self.assertEqual(expected_signature, configured_request.params[\"signature\"])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3eac32b7136fd071:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 39,
            "startColumn" : 101,
            "endColumn" : 115
          },
          "contextRegion" : {
            "startLine" : 37,
            "endLine" : 41,
            "snippet" : {
              "text" : "    def _get_signature_from_test_payload(self):\n        return hmac.new(\n            bytes(self.auth._api_secret.encode(\"utf-8\")), self._get_test_payload().encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "134c57abb289b672:1",
        "primaryLocationStartColumnFingerprint" : "88"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bit_com_perpetual/test_bit_com_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(bytes(self.secret_key.encode(\"utf-8\")),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n        params = request.params\n        headers = request.headers\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dff48b237c1f0468:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bit_com_perpetual/test_bit_com_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(bytes(self.secret_key.encode(\"utf-8\")),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n        params = json.loads(request.data)\n        headers = request.headers\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce2365499d7ee1cb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 86,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "                         + request.throttler_limit_id + \"?one=1\")\n        expected_signature = base64.b64encode(\n            hmac.new(self.secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).digest()\n        ).decode().strip()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ab6b9abed801b2c:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 86,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "        raw_signature = str(int(self._time_synchronizer_mock.time())) + \"GET/user/verify\"\n        expected_signature = base64.b64encode(\n            hmac.new(self.secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).digest()\n        ).decode().strip()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ab6b9abed801b2c:2",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "            bytes(self.auth._api_secret.encode(\"utf-8\")),\n            payload.encode(\"utf-8\"),\n            hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc8022426ab06c91:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "            bytes(self.auth._api_secret.encode(\"utf-8\")),\n            payload.encode(\"utf-8\"),\n            hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc8022426ab06c91:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "        strToSign = f\"/users/self/subscribe\\n{now}\"\n        signature = base64.b64encode(hmac.new(\n            base64.b64decode(self.api_secret_key), strToSign.encode(\"utf8\"), digestmod=hashlib.sha512).digest()).decode('utf8')\n        auth_subscription = {\n            \"signature\": signature,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd0bc83645969481:1",
        "primaryLocationStartColumnFingerprint" : "75"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "    def _generate_signature(self, params: Dict[str, Any]) -> str:\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 112,
            "startColumn" : 51,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 110,
            "endLine" : 114,
            "snippet" : {
              "text" : "        _val = f'GET/realtime{expires}'\n        signature = hmac.new(self.api_secret_key.encode(\"utf8\"),\n                             _val.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        auth_subscription = {\n            \"op\": \"auth\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "15fdc0f43e0c914b:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "    def _generate_signature(self, params: Dict[str, Any]) -> str:\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n        params = request.params\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80a07f0ffb3f39ac:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n\n        self.assertEqual(3, len(payload))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45d13fa8b5485cb2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        self.async_run_with_timeout(self.auth.rest_authenticate(request))\n        m = hashlib.sha512()\n        body_hash = m.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9fcec7282afe5686:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha512).hexdigest()\n        params = request.params\n        headers = request.headers\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e45b7109e8653d9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/huobi/test_huobi_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 54,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 52,
            "endLine" : 56,
            "snippet" : {
              "text" : "            self._secret.encode(\"utf8\"),\n            payload.encode(\"utf8\"),\n            hashlib.sha256).digest()\n        expected_signature = base64.b64encode(test_digest).decode()\n        self.assertEqual(now, configured_request.params[\"Timestamp\"])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "674837d52fb74c80:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "                key.encode(\"utf-8\"),\n                message.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        return signed_message.decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ddbfeb7433ba922:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/kucoin_perpetual/test_kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 41,
            "endLine" : 45,
            "snippet" : {
              "text" : "                key.encode(\"utf-8\"),\r\n                passphrase.encode(\"utf-8\"),\r\n                hashlib.sha256).digest())\r\n        return signed_message.decode(\"utf-8\")\r\n\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ddbfeb7433ba922:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/kucoin_perpetual/test_kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 134,
            "endLine" : 138,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\r\n                                      raw_signature.encode(\"utf-8\"),\r\n                                      hashlib.sha256).hexdigest()\r\n\r\n        self.assertEqual(3, len(payload))\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45d13fa8b5485cb2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/mexc/test_mexc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            self._secret.encode(\"utf-8\"),\n            encoded_params.encode(\"utf-8\"),\n            hashlib.sha256).hexdigest()\n        self.assertEqual(now * 1e3, configured_request.params[\"timestamp\"])\n        self.assertEqual(expected_signature, configured_request.params[\"signature\"])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3eac32b7136fd071:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode('utf-8'),\n                                      raw_signature.encode('utf-8'),\n                                      hashlib.sha256).hexdigest()\n\n        self.assertEqual(5, len(headers))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de80b9674a59c547:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode('utf-8'),\n                                      raw_signature.encode('utf-8'),\n                                      hashlib.sha256).hexdigest()\n\n        self.assertEqual(4, len(auth_info))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86760ffc282ebf9d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/okx/test_okx_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "                key.encode(\"utf-8\"),\n                message.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        return signed_message.decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9c8a829b202b0f78:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_user_stream_data_source.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            key=cls.secret.encode(\"utf-8\"),\n            msg=auth_concat.encode(\"utf-8\"),\n            digestmod=hashlib.sha256,\n        ).hexdigest()\n        cls.user_name = \"someUserName\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8ac773ce74b4bee:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "            key=self.secret.encode(\"utf-8\"),\n            msg=concat.encode(\"utf-8\"),\n            digestmod=hashlib.sha256,\n        ).hexdigest()\n        expected_headers = {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64f06444af780646:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/phemex_perpetual/test_phemex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 114,
            "endColumn" : 128
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    def _get_signature_from_test_payload(self, is_get: bool = True):\n        return hmac.new(\n            bytes(self.auth._api_secret.encode(\"utf-8\")), self._get_test_payload(is_get=is_get).encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1f33295495b0e03:1",
        "primaryLocationStartColumnFingerprint" : "101"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/phemex_perpetual/test_phemex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "        auth_payload = self.auth.get_ws_auth_payload()\n        payload = f\"{self.api_key}{int(self.emulated_time) + 2}\"\n        signature = hmac.new(self.secret_key.encode(\"utf-8\"), payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        target_auth_payload = {\n            \"method\": \"user.auth\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6948330c22b7eed8:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/test_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import platform\nimport unittest\nfrom hashlib import md5\nfrom os import DirEntry, scandir\nfrom os.path import exists, join\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7db48c17802432bf:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/woo_x/test_woo_x_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "                bytes(self._secret, \"utf-8\"),\n                bytes(signable, \"utf-8\"),\n                hashlib.sha256\n            ).hexdigest().upper()\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1890a2999bfc2e6d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "import platform\nfrom collections import namedtuple\nfrom hashlib import md5\nfrom typing import Any, Callable, Dict, Optional, Tuple\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ec3842b9b64b8d4:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/woo_x/woo_x_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            bytes(self.secret_key, \"utf-8\"),\n            bytes(signable, \"utf-8\"),\n            hashlib.sha256\n        ).hexdigest().upper()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "288b2ebaae4c22ea:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endLine" : 40,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 42,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n        backend=default_backend()\n    )\n\n    algorithm = serialization.NoEncryption()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509.oid import NameOID\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d8ab75cbd6ab81a:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/ascend_ex/ascend_ex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 58,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 56,
            "endLine" : 60,
            "snippet" : {
              "text" : "        timestamp = str(int(self._time() * 1e3))\n        message = timestamp + path_url\n        signature = hmac.new(self.secret_key.encode(\"utf-8\"), message.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n\n        return {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9314caf0d522d97f:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/binance/binance_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 63,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 61,
            "endLine" : 64,
            "snippet" : {
              "text" : "\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/binance_perpetual/binance_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 25,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 23,
            "endLine" : 27,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bit_com_perpetual/bit_com_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 24,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 22,
            "endLine" : 26,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA384"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bitfinex/bitfinex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 24,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "        sig = hmac.new(self.secret_key.encode('utf8'),\n                       payload.encode('utf8'),\n                       hashlib.sha384).hexdigest()\n        return sig\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f85e36ecba4de2d1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bitget_perpetual/bitget_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 104,
            "endColumn" : 112
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "    @staticmethod\n    def _sign(message, secret_key):\n        mac = hmac.new(bytes(secret_key, encoding='utf8'), bytes(message, encoding='utf-8'), digestmod='sha256')\n        d = mac.digest()\n        return base64.b64encode(d).decode().strip()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e82078d299dbfdb8:1",
        "primaryLocationStartColumnFingerprint" : "95"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bitmart/bitmart_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "            self.secret_key.encode(\"utf-8\"),\n            unsigned_signature.encode(\"utf-8\"),\n            hashlib.sha256).hexdigest()\n\n        return signature\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "30a8fe0a3bc17d9f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bitmex/bitmex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bitmex_perpetual/bitmex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 28,
            "startColumn" : 63,
            "endColumn" : 77
          },
          "contextRegion" : {
            "startLine" : 26,
            "endLine" : 30,
            "snippet" : {
              "text" : "    def generate_signature_from_payload(self, payload: str) -> str:\n        secret = bytes(self._api_secret.encode(\"utf-8\"))\n        signature = hmac.new(secret, payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ad73231465d49e82:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/btc_markets/btc_markets_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 103,
            "startColumn" : 82,
            "endColumn" : 96
          },
          "contextRegion" : {
            "startLine" : 101,
            "endLine" : 105,
            "snippet" : {
              "text" : "        \"\"\"\n        digest = base64.b64encode(hmac.new(\n            base64.b64decode(self.secret_key), payload.encode(\"utf8\"), digestmod=hashlib.sha512).digest())\n        return digest.decode('utf8')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64e2adf82d2e0545:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bybit/bybit_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "    def _generate_signature(self, params: Dict[str, Any]) -> str:\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/bybit/bybit_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 79,
            "startColumn" : 51,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 77,
            "endLine" : 81,
            "snippet" : {
              "text" : "        _val = f'GET/realtime{expires}'\n        signature = hmac.new(self.secret_key.encode(\"utf8\"),\n                             _val.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        auth_message = {\n            \"op\": \"auth\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ea933f2c56f4aa5:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 78,
            "endColumn" : 92
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "        raw_signature = \"GET/realtime\" + expires\n        signature = hmac.new(\n            self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n        auth_info = [self._api_key, expires, signature]\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7e14ba0d87b3d17:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/bybit_perpetual/bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 95,
            "endColumn" : 109
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "            key_value_elements.append(str(key) + \"=\" + converted_value)\n        raw_signature = \"&\".join(key_value_elements)\n        signature = hmac.new(self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        params[\"sign\"] = signature\n        return params\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d5ae1be4a8fcf4c:1",
        "primaryLocationStartColumnFingerprint" : "86"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/coinbase_pro/coinbase_pro_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 59,
            "startColumn" : 64,
            "endColumn" : 78
          },
          "contextRegion" : {
            "startLine" : 57,
            "endLine" : 61,
            "snippet" : {
              "text" : "        message = timestamp + method_str + path_url + body\n        hmac_key = base64.b64decode(self.secret_key)\n        signature = hmac.new(hmac_key, message.encode('utf8'), hashlib.sha256)\n        signature_b64 = base64.b64encode(bytes(signature.digest())).decode('utf8')\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1d719330f880457:1",
        "primaryLocationStartColumnFingerprint" : "55"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/gate_io/gate_io_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 76,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 74,
            "endLine" : 78,
            "snippet" : {
              "text" : "\n        ts = time.time()\n        m = hashlib.sha512()\n        path = urlparse(r.url).path\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e928d97825dbaa7:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/gate_io/gate_io_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 98,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 96,
            "endLine" : 98,
            "snippet" : {
              "text" : "            self.secret_key.encode('utf-8'),\n            payload.encode('utf-8'),\n            hashlib.sha512).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9a311da9c2b182d7:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/gate_io_perpetual/gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 74,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 72,
            "endLine" : 76,
            "snippet" : {
              "text" : "\n        ts = self._get_timestamp()\n        m = hashlib.sha512()\n        path = urlparse(r.url).path\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4e928d97825dbaa7:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/gate_io_perpetual/gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 96,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 94,
            "endLine" : 98,
            "snippet" : {
              "text" : "            self.secret_key.encode('utf-8'),\n            payload.encode('utf-8'),\n            hashlib.sha512).hexdigest()\n\n    @staticmethod\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ccf5f7fe036856d9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/hitbtc/hitbtc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 40,
            "startColumn" : 68,
            "endColumn" : 82
          },
          "contextRegion" : {
            "startLine" : 38,
            "endLine" : 42,
            "snippet" : {
              "text" : "        payload = f\"{method}{nonce}{url}{body}\"\n        # Create HS256 sig\n        sig = hmac.new(self.secret_key.encode(), payload.encode(), hashlib.sha256).hexdigest()\n        # Base64 encode it with public key and nonce\n        return b64encode(f\"{self.api_key}:{nonce}:{sig}\".encode()).decode().strip()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7610f4568e39ceb:1",
        "primaryLocationStartColumnFingerprint" : "59"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/hitbtc/hitbtc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 56,
            "startColumn" : 35,
            "endColumn" : 49
          },
          "contextRegion" : {
            "startLine" : 54,
            "endLine" : 58,
            "snippet" : {
              "text" : "            \"signature\": hmac.new(self.secret_key.encode('utf-8'),\n                                  str(nonce).encode('utf-8'),\n                                  hashlib.sha256).hexdigest()\n        }\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5e412e053cc45c2f:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/huobi/huobi_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 83,
            "startColumn" : 83,
            "endColumn" : 97
          },
          "contextRegion" : {
            "startLine" : 81,
            "endLine" : 85,
            "snippet" : {
              "text" : "        encoded_params_str = urlencode(params)\n        payload = \"\\n\".join([method.upper(), self.hostname, query_endpoint, encoded_params_str])\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), payload.encode(\"utf8\"), hashlib.sha256).digest()\n        signature_b64 = base64.b64encode(digest).decode()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c16820c629f72dec:1",
        "primaryLocationStartColumnFingerprint" : "74"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kraken/kraken_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 37,
            "startColumn" : 75,
            "endColumn" : 89
          },
          "contextRegion" : {
            "startLine" : 35,
            "endLine" : 39,
            "snippet" : {
              "text" : "        # Cryptographic hash algorithms\n        api_sha256: bytes = hashlib.sha256(bytes(api_nonce + api_post, 'utf-8')).digest()\n        api_hmac: hmac.HMAC = hmac.new(api_secret, api_path + api_sha256, hashlib.sha512)\n\n        # Encode signature into base64 format used in API-Sign value\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22a5a8a2de330952:1",
        "primaryLocationStartColumnFingerprint" : "66"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kraken/kraken_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 29,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "\n        # Cryptographic hash algorithms\n        api_sha256: bytes = hashlib.sha256(bytes(api_nonce + api_post, 'utf-8')).digest()\n        api_hmac: hmac.HMAC = hmac.new(api_secret, api_path + api_sha256, hashlib.sha512)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d4250dcd8def0bf4:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 54,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 52,
            "endLine" : 56,
            "snippet" : {
              "text" : "                CONSTANTS.HB_PARTNER_KEY.encode(\"utf-8\"),\n                partner_payload.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        third_party = {\n            \"KC-API-PARTNER\": CONSTANTS.HB_PARTNER_ID,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a13c62e7fe29c40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 85,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 83,
            "endLine" : 87,
            "snippet" : {
              "text" : "                self.secret_key.encode(\"utf-8\"),\n                payload.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        passphrase = base64.b64encode(\n            hmac.new(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4706fe0fe3174981:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/kucoin/kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "                self.secret_key.encode('utf-8'),\n                self.passphrase.encode('utf-8'),\n                hashlib.sha256).digest())\n        header[\"KC-API-SIGN\"] = str(signature, \"utf-8\")\n        header[\"KC-API-PASSPHRASE\"] = str(passphrase, \"utf-8\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d3b533fb5e14cf5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 75,
            "startColumn" : 78,
            "endColumn" : 92
          },
          "contextRegion" : {
            "startLine" : 73,
            "endLine" : 77,
            "snippet" : {
              "text" : "        raw_signature = \"GET/realtime\" + expires\r\n        signature = hmac.new(\r\n            self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256\r\n        ).hexdigest()\r\n        auth_info = [self._api_key, expires, signature]\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f7e14ba0d87b3d17:1",
        "primaryLocationStartColumnFingerprint" : "65"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 95,
            "endColumn" : 109
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "            key_value_elements.append(str(key) + \"=\" + converted_value)\r\n        raw_signature = \"&\".join(key_value_elements)\r\n        signature = hmac.new(self._secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).hexdigest()\r\n        params[\"sign\"] = signature\r\n        return params\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d5ae1be4a8fcf4c:1",
        "primaryLocationStartColumnFingerprint" : "86"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "                CONSTANTS.HB_PARTNER_KEY.encode(\"utf-8\"),\r\n                partner_payload.encode(\"utf-8\"),\r\n                hashlib.sha256).digest())\r\n        third_party = {\r\n            \"KC-API-PARTNER\": CONSTANTS.HB_PARTNER_ID,\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a13c62e7fe29c40:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 135,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 133,
            "endLine" : 137,
            "snippet" : {
              "text" : "                self._secret_key.encode(\"utf-8\"),\r\n                payload.encode(\"utf-8\"),\r\n                hashlib.sha256).digest())\r\n        passphrase = base64.b64encode(\r\n            hmac.new(\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9ab3d92017d033bf:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/kucoin_perpetual/kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 140,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 138,
            "endLine" : 142,
            "snippet" : {
              "text" : "                self._secret_key.encode('utf-8'),\r\n                self._passphrase.encode('utf-8'),\r\n                hashlib.sha256).digest())\r\n        header[\"KC-API-SIGN\"] = str(signature, \"utf-8\")\r\n        header[\"KC-API-PASSPHRASE\"] = str(passphrase, \"utf-8\")\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8d3b533fb5e14cf5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/gateway/clob_spot/data_sources/kujira/kujira_helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 18,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "    for input in inputs:\n        serialized = jsonpickle.encode(input, unpicklable=True)\n        hasher = hashlib.md5()\n        target = f\"{salt}{serialized}\".encode(\"utf-8\")\n        hasher.update(target)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b7f8d93318d42cb:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/mexc/mexc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 63,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 61,
            "endLine" : 64,
            "snippet" : {
              "text" : "\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/ndax/ndax_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 44,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "                     'Signature': hmac.new(self._secret_key.encode('utf-8'),\n                                           raw_signature.encode('utf-8'),\n                                           hashlib.sha256).hexdigest(),\n                     'UserId': self._uid}\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8c61c20fc84bad28:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/okx/okx_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 60,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 58,
            "endLine" : 62,
            "snippet" : {
              "text" : "                self.secret_key.encode(\"utf-8\"),\n                unsigned_signature.encode(\"utf-8\"),\n                hashlib.sha256).digest()).decode()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c89584c699834ea1:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/utilities/oms_connector/oms_connector_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 65,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 63,
            "endLine" : 67,
            "snippet" : {
              "text" : "            key=self.secret_key.encode(\"utf-8\"),\n            msg=auth_concat.encode(\"utf-8\"),\n            digestmod=hashlib.sha256,\n        ).hexdigest()\n        return signature\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3c9ba5fb2f8069ec:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/test_support/oms_exchange_connector_test.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 27,
            "endColumn" : 41
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "                key=cls.secret.encode(\"utf-8\"),\n                msg=auth_concat.encode(\"utf-8\"),\n                digestmod=hashlib.sha256,\n            ).hexdigest()\n            cls.user_name = \"someUserName\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8ac773ce74b4c47:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/derivative/phemex_perpetual/phemex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 23,
            "startColumn" : 89,
            "endColumn" : 103
          },
          "contextRegion" : {
            "startLine" : 21,
            "endLine" : 25,
            "snippet" : {
              "text" : "\n    def generate_signature_from_payload(self, payload: str) -> str:\n        signature = hmac.new(self._api_secret.encode(\"utf-8\"), payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        return signature\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c3e3388c51228ed4:1",
        "primaryLocationStartColumnFingerprint" : "80"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 90,
            "startColumn" : 9,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 88,
            "endLine" : 92,
            "snippet" : {
              "text" : "    public_key = builder.sign(\n        private_key,\n        hashes.SHA256(),\n        default_backend()\n    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c65f7b171d07cd5:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 118,
            "startColumn" : 37,
            "endColumn" : 50
          },
          "contextRegion" : {
            "startLine" : 116,
            "endLine" : 120,
            "snippet" : {
              "text" : "    )\n\n    csr = builder.sign(private_key, hashes.SHA256(), default_backend())\n\n    # filepath = join(CERT_FILE_PATH, filename)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cabc8986ac001120:1",
        "primaryLocationStartColumnFingerprint" : "32"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 23,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "        public_key = builder.sign(\n            private_key=ca_private_key,\n            algorithm=hashes.SHA256(),\n            backend=default_backend(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb7d5071b7c210cd:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/ascend_ex/test_ascend_ex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 71,
            "endColumn" : 85
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "        message = timestamp + path_url\n        expected_signature = hmac.new(\n            self.secret_key.encode(\"utf-8\"), message.encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b6ddc3de3e5b0703:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/binance/test_binance_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            self._secret.encode(\"utf-8\"),\n            encoded_params.encode(\"utf-8\"),\n            hashlib.sha256).hexdigest()\n        self.assertEqual(now * 1e3, configured_request.params[\"timestamp\"])\n        self.assertEqual(expected_signature, configured_request.params[\"signature\"])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3eac32b7136fd071:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/binance_perpetual/test_binance_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 39,
            "startColumn" : 101,
            "endColumn" : 115
          },
          "contextRegion" : {
            "startLine" : 37,
            "endLine" : 41,
            "snippet" : {
              "text" : "    def _get_signature_from_test_payload(self):\n        return hmac.new(\n            bytes(self.auth._api_secret.encode(\"utf-8\")), self._get_test_payload().encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "134c57abb289b672:1",
        "primaryLocationStartColumnFingerprint" : "88"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bit_com_perpetual/test_bit_com_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(bytes(self.secret_key.encode(\"utf-8\")),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n        params = request.params\n        headers = request.headers\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dff48b237c1f0468:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bit_com_perpetual/test_bit_com_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(bytes(self.secret_key.encode(\"utf-8\")),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n        params = json.loads(request.data)\n        headers = request.headers\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ce2365499d7ee1cb:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 86,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "                         + request.throttler_limit_id + \"?one=1\")\n        expected_signature = base64.b64encode(\n            hmac.new(self.secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).digest()\n        ).decode().strip()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ab6b9abed801b2c:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bitget_perpetual/test_bitget_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 71,
            "startColumn" : 86,
            "endColumn" : 100
          },
          "contextRegion" : {
            "startLine" : 69,
            "endLine" : 73,
            "snippet" : {
              "text" : "        raw_signature = str(int(self._time_synchronizer_mock.time())) + \"GET/user/verify\"\n        expected_signature = base64.b64encode(\n            hmac.new(self.secret_key.encode(\"utf-8\"), raw_signature.encode(\"utf-8\"), hashlib.sha256).digest()\n        ).decode().strip()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4ab6b9abed801b2c:2",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/bitmex/test_bitmex_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "            bytes(self.auth._api_secret.encode(\"utf-8\")),\n            payload.encode(\"utf-8\"),\n            hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc8022426ab06c91:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bitmex_perpetual/test_bitmex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "            bytes(self.auth._api_secret.encode(\"utf-8\")),\n            payload.encode(\"utf-8\"),\n            hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bc8022426ab06c91:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_api_user_stream_data_source.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 169,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 167,
            "endLine" : 171,
            "snippet" : {
              "text" : "        strToSign = f\"/users/self/subscribe\\n{now}\"\n        signature = base64.b64encode(hmac.new(\n            base64.b64decode(self.api_secret_key), strToSign.encode(\"utf8\"), digestmod=hashlib.sha512).digest()).decode('utf8')\n        auth_subscription = {\n            \"signature\": signature,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fd0bc83645969481:1",
        "primaryLocationStartColumnFingerprint" : "75"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/btc_markets/test_btc_markets_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "    def _generate_signature(self, params: Dict[str, Any]) -> str:\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/bybit/test_bybit_api_user_stream_data_source.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 112,
            "startColumn" : 51,
            "endColumn" : 65
          },
          "contextRegion" : {
            "startLine" : 110,
            "endLine" : 114,
            "snippet" : {
              "text" : "        _val = f'GET/realtime{expires}'\n        signature = hmac.new(self.api_secret_key.encode(\"utf8\"),\n                             _val.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        auth_subscription = {\n            \"op\": \"auth\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "15fdc0f43e0c914b:1",
        "primaryLocationStartColumnFingerprint" : "21"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/bybit/test_bybit_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 100,
            "startColumn" : 94,
            "endColumn" : 108
          },
          "contextRegion" : {
            "startLine" : 98,
            "endLine" : 102,
            "snippet" : {
              "text" : "    def _generate_signature(self, params: Dict[str, Any]) -> str:\n        encoded_params_str = urlencode(params)\n        digest = hmac.new(self.secret_key.encode(\"utf8\"), encoded_params_str.encode(\"utf8\"), hashlib.sha256).hexdigest()\n        return digest\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1b18b88bdb33642f:1",
        "primaryLocationStartColumnFingerprint" : "85"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n        params = request.params\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "80a07f0ffb3f39ac:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/bybit_perpetual/test_bybit_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 68,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 66,
            "endLine" : 70,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha256).hexdigest()\n\n        self.assertEqual(3, len(payload))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45d13fa8b5485cb2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 45,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 43,
            "endLine" : 47,
            "snippet" : {
              "text" : "\n        self.async_run_with_timeout(self.auth.rest_authenticate(request))\n        m = hashlib.sha512()\n        body_hash = m.hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9fcec7282afe5686:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA512"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/gate_io_perpetual/test_gate_io_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\n                                      raw_signature.encode(\"utf-8\"),\n                                      hashlib.sha512).hexdigest()\n        params = request.params\n        headers = request.headers\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2e45b7109e8653d9:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/huobi/test_huobi_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 54,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 52,
            "endLine" : 56,
            "snippet" : {
              "text" : "            self._secret.encode(\"utf8\"),\n            payload.encode(\"utf8\"),\n            hashlib.sha256).digest()\n        expected_signature = base64.b64encode(test_digest).decode()\n        self.assertEqual(now, configured_request.params[\"Timestamp\"])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "674837d52fb74c80:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/kucoin/test_kucoin_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "                key.encode(\"utf-8\"),\n                message.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        return signed_message.decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ddbfeb7433ba922:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/kucoin_perpetual/test_kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 43,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 41,
            "endLine" : 45,
            "snippet" : {
              "text" : "                key.encode(\"utf-8\"),\r\n                passphrase.encode(\"utf-8\"),\r\n                hashlib.sha256).digest())\r\n        return signed_message.decode(\"utf-8\")\r\n\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ddbfeb7433ba922:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/kucoin_perpetual/test_kucoin_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 136,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 134,
            "endLine" : 138,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode(\"utf-8\"),\r\n                                      raw_signature.encode(\"utf-8\"),\r\n                                      hashlib.sha256).hexdigest()\r\n\r\n        self.assertEqual(3, len(payload))\r\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "45d13fa8b5485cb2:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/mexc/test_mexc_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            self._secret.encode(\"utf-8\"),\n            encoded_params.encode(\"utf-8\"),\n            hashlib.sha256).hexdigest()\n        self.assertEqual(now * 1e3, configured_request.params[\"timestamp\"])\n        self.assertEqual(expected_signature, configured_request.params[\"signature\"])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3eac32b7136fd071:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 41,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 39,
            "endLine" : 43,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode('utf-8'),\n                                      raw_signature.encode('utf-8'),\n                                      hashlib.sha256).hexdigest()\n\n        self.assertEqual(5, len(headers))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "de80b9674a59c547:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/ndax/test_ndax_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 61,
            "startColumn" : 39,
            "endColumn" : 53
          },
          "contextRegion" : {
            "startLine" : 59,
            "endLine" : 63,
            "snippet" : {
              "text" : "        expected_signature = hmac.new(self.secret_key.encode('utf-8'),\n                                      raw_signature.encode('utf-8'),\n                                      hashlib.sha256).hexdigest()\n\n        self.assertEqual(4, len(auth_info))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "86760ffc282ebf9d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/okx/test_okx_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "                key.encode(\"utf-8\"),\n                message.encode(\"utf-8\"),\n                hashlib.sha256).digest())\n        return signed_message.decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9c8a829b202b0f78:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_api_user_stream_data_source.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            key=cls.secret.encode(\"utf-8\"),\n            msg=auth_concat.encode(\"utf-8\"),\n            digestmod=hashlib.sha256,\n        ).hexdigest()\n        cls.user_name = \"someUserName\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a8ac773ce74b4bee:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/utilities/oms_connector/test_oms_connector_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 23,
            "endColumn" : 37
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "            key=self.secret.encode(\"utf-8\"),\n            msg=concat.encode(\"utf-8\"),\n            digestmod=hashlib.sha256,\n        ).hexdigest()\n        expected_headers = {\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64f06444af780646:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/phemex_perpetual/test_phemex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 53,
            "startColumn" : 114,
            "endColumn" : 128
          },
          "contextRegion" : {
            "startLine" : 51,
            "endLine" : 55,
            "snippet" : {
              "text" : "    def _get_signature_from_test_payload(self, is_get: bool = True):\n        return hmac.new(\n            bytes(self.auth._api_secret.encode(\"utf-8\")), self._get_test_payload(is_get=is_get).encode(\"utf-8\"), hashlib.sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b1f33295495b0e03:1",
        "primaryLocationStartColumnFingerprint" : "101"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/derivative/phemex_perpetual/test_phemex_perpetual_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 88,
            "endColumn" : 102
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "        auth_payload = self.auth.get_ws_auth_payload()\n        payload = f\"{self.api_key}{int(self.emulated_time) + 2}\"\n        signature = hmac.new(self.secret_key.encode(\"utf-8\"), payload.encode(\"utf-8\"), hashlib.sha256).hexdigest()\n        target_auth_payload = {\n            \"method\": \"user.auth\",\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6948330c22b7eed8:1",
        "primaryLocationStartColumnFingerprint" : "79"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/test_utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import platform\nimport unittest\nfrom hashlib import md5\nfrom os import DirEntry, scandir\nfrom os.path import exists, join\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7db48c17802432bf:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "test/hummingbot/connector/exchange/woo_x/test_woo_x_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 51,
            "startColumn" : 17,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 49,
            "endLine" : 53,
            "snippet" : {
              "text" : "                bytes(self._secret, \"utf-8\"),\n                bytes(signable, \"utf-8\"),\n                hashlib.sha256\n            ).hexdigest().upper()\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1890a2999bfc2e6d:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "import platform\nfrom collections import namedtuple\nfrom hashlib import md5\nfrom typing import Any, Callable, Dict, Optional, Tuple\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6ec3842b9b64b8d4:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/connector/exchange/woo_x/woo_x_auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 13,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "            bytes(self.secret_key, \"utf-8\"),\n            bytes(signable, \"utf-8\"),\n            hashlib.sha256\n        ).hexdigest().upper()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "288b2ebaae4c22ea:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endLine" : 40,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 42,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n        backend=default_backend()\n    )\n\n    algorithm = serialization.NoEncryption()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 38,
            "startColumn" : 18,
            "endColumn" : 22
          },
          "contextRegion" : {
            "startLine" : 36,
            "endLine" : 40,
            "snippet" : {
              "text" : "    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n        backend=default_backend()\n    )\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 38,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 36,
            "startColumn" : 19,
            "endLine" : 40,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 34,
            "endLine" : 42,
            "snippet" : {
              "text" : "    \"\"\"\n\n    private_key = rsa.generate_private_key(\n        public_exponent=65537,\n        key_size=2048,\n        backend=default_backend()\n    )\n\n    algorithm = serialization.NoEncryption()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e8d388d6c29ec0d0:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "hummingbot/core/utils/ssl_cert.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 12,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 10,
            "endLine" : 14,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import hashes, serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom cryptography.x509.oid import NameOID\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d8ab75cbd6ab81a:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    } ],
    "automationDetails" : {
      "id" : "CBOM:hummingbot/hummingbot/python/"
    },
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}