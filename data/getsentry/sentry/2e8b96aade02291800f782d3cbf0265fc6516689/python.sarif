{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.2",
        "notifications" : [ {
          "id" : "py/baseline/expected-extracted-files",
          "name" : "py/baseline/expected-extracted-files",
          "shortDescription" : {
            "text" : "Expected extracted files"
          },
          "fullDescription" : {
            "text" : "Files appearing in the source archive that are expected to be extracted."
          },
          "defaultConfiguration" : {
            "enabled" : true
          },
          "properties" : {
            "tags" : [ "expected-extracted-files", "telemetry" ]
          }
        } ],
        "rules" : [ {
          "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "name" : "py/quantum-readiness/cbom/unkown-iv-sources",
          "shortDescription" : {
            "text" : "Unknown Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potentially unknown sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
            "kind" : "problem",
            "name" : "Unknown Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "name" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
          "shortDescription" : {
            "text" : "All Cryptographic Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic algorithms usage using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
            "kind" : "problem",
            "name" : "All Cryptographic Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Symmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with symmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with symmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Symmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/iv-sources",
          "name" : "py/quantum-readiness/cbom/iv-sources",
          "shortDescription" : {
            "text" : "Initialization Vector (IV) or nonces"
          },
          "fullDescription" : {
            "text" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential sources for initialization vectors (IV) or nonce used in block ciphers while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/iv-sources",
            "kind" : "problem",
            "name" : "Initialization Vector (IV) or nonces",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
          "shortDescription" : {
            "text" : "All Asymmetric Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "description" : "Finds all potential usage of asymmeric keys (RSA & ECC) using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
            "kind" : "problem",
            "name" : "All Asymmetric Algorithms",
            "preci" : "cbom\n       cryptography",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-exchange",
          "name" : "py/quantum-readiness/cbom/key-exchange",
          "shortDescription" : {
            "text" : "Key Exchange Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-exchange",
            "kind" : "problem",
            "name" : "Key Exchange Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/hash-algorithms",
          "name" : "py/quantum-readiness/cbom/hash-algorithms",
          "shortDescription" : {
            "text" : "Hash Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of cryptographic hash algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/hash-algorithms",
            "kind" : "problem",
            "name" : "Hash Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Symmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of symmetric encryption algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Symmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "name" : "py/quantum-readiness/cbom/asymmetric-key-generation",
          "shortDescription" : {
            "text" : "Known asymmetric key source generation"
          },
          "fullDescription" : {
            "text" : "Finds all known potential sources for asymmetric key generation while using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all known potential sources for asymmetric key generation while using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
            "kind" : "problem",
            "name" : "Known asymmetric key source generation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "name" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
          "shortDescription" : {
            "text" : "Asymmetric Padding Schemes"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of padding schemes used with asymmeric algorithms."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of padding schemes used with asymmeric algorithms.",
            "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
            "kind" : "problem",
            "name" : "Asymmetric Padding Schemes",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/key-derivation",
          "name" : "py/quantum-readiness/cbom/key-derivation",
          "shortDescription" : {
            "text" : "Key Derivation Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of key derivation using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of key derivation using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/key-derivation",
            "kind" : "problem",
            "name" : "Key Derivation Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/signing-algorithms",
          "name" : "py/quantum-readiness/cbom/signing-algorithms",
          "shortDescription" : {
            "text" : "Signing Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of signing algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of signing algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/signing-algorithms",
            "kind" : "problem",
            "name" : "Signing Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
          "shortDescription" : {
            "text" : "Authenticated Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of authenticated encryption schemes using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of authenticated encryption schemes using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/authenticated-encryption-algorithms",
            "kind" : "problem",
            "name" : "Authenticated Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "name" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
          "shortDescription" : {
            "text" : "Asymmetric Encryption Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of asymmeric keys for encryption or key exchange using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
            "kind" : "problem",
            "name" : "Asymmetric Encryption Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/block-cipher-mode",
          "name" : "py/quantum-readiness/cbom/block-cipher-mode",
          "shortDescription" : {
            "text" : "Block cipher mode of operation"
          },
          "fullDescription" : {
            "text" : "Finds all potential block cipher modes of operations using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential block cipher modes of operations using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/block-cipher-mode",
            "kind" : "problem",
            "name" : "Block cipher mode of operation",
            "precision" : "high",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "name" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
          "shortDescription" : {
            "text" : "Elliptic Curve Algorithms"
          },
          "fullDescription" : {
            "text" : "Finds all potential usage of elliptic curve algorithms using the supported libraries."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "cbom", "cryptography" ],
            "description" : "Finds all potential usage of elliptic curve algorithms using the supported libraries.",
            "id" : "py/quantum-readiness/cbom/elliptic-curve-algorithms",
            "kind" : "problem",
            "name" : "Elliptic Curve Algorithms",
            "precision" : "high",
            "problem.severity" : "error"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "codeql/python-queries",
        "semanticVersion" : "0.9.2+78fcbd07d654881d9d3395efc0ea371c392529de",
        "locations" : [ {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.2/x64/codeql/qlpacks/codeql/python-queries/0.9.2/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///opt/hostedtoolcache/CodeQL/2.15.2/x64/codeql/qlpacks/codeql/python-queries/0.9.2/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "src/sentry/backup/helpers.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    }, {
      "location" : {
        "uri" : "src/sentry/tasks/relocation.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 1
      }
    }, {
      "location" : {
        "uri" : "src/sentry/grouping/enhancer/__init__.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 2
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/files/abstractfile.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 3
      }
    }, {
      "location" : {
        "uri" : "src/sentry/debug_files/artifact_bundle_indexing.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 4
      }
    }, {
      "location" : {
        "uri" : "src/sentry/tasks/assemble.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 5
      }
    }, {
      "location" : {
        "uri" : "src/sentry/integrations/utils/atlassian_connect.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 6
      }
    }, {
      "location" : {
        "uri" : "src/sentry/integrations/slack/utils/auth.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 7
      }
    }, {
      "location" : {
        "uri" : "src/sentry/testutils/helpers/backups.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 8
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/base.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 9
      }
    }, {
      "location" : {
        "uri" : "src/sentry_plugins/github/webhooks/base.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 10
      }
    }, {
      "location" : {
        "uri" : "src/sentry/tasks/beacon.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 11
      }
    }, {
      "location" : {
        "uri" : "src/sentry/testutils/cases.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 12
      }
    }, {
      "location" : {
        "uri" : "src/sentry_plugins/jira/client.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 13
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/colors.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 14
      }
    }, {
      "location" : {
        "uri" : "src/sentry/management/commands/collectstatic.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 15
      }
    }, {
      "location" : {
        "uri" : "src/sentry/eventstore/compressor.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 16
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/mockdata/core.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 17
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/debugfile.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 18
      }
    }, {
      "location" : {
        "uri" : "src/sentry/replays/usecases/ingest/dom_index.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 19
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/dynamicsampling.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 20
      }
    }, {
      "location" : {
        "uri" : "src/sentry/issues/escalating_group_forecast.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 21
      }
    }, {
      "location" : {
        "uri" : "src/sentry/replays/lib/event_linking.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 22
      }
    }, {
      "location" : {
        "uri" : "src/sentry/search/snuba/executors.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 23
      }
    }, {
      "location" : {
        "uri" : "src/sentry/snuba/metrics/extraction.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 24
      }
    }, {
      "location" : {
        "uri" : "src/sentry/testutils/factories.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 25
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/hashlib.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 26
      }
    }, {
      "location" : {
        "uri" : "src/sentry/tasks/deletion/hybrid_cloud.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 27
      }
    }, {
      "location" : {
        "uri" : "src/sentry/services/hybrid_cloud/organization_actions/impl.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 28
      }
    }, {
      "location" : {
        "uri" : "src/sentry/issues/ingest.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 29
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/detectors/io_main_thread_detector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 30
      }
    }, {
      "location" : {
        "uri" : "src/sentry/issues/issue_occurrence.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 31
      }
    }, {
      "location" : {
        "uri" : "src/sentry/statistical_detectors/issue_platform_adapter.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 32
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/jwt.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 33
      }
    }, {
      "location" : {
        "uri" : "src/sentry/web/frontend/mailgun_inbound_webhook.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 34
      }
    }, {
      "location" : {
        "uri" : "src/sentry/web/frontend/debug/mail.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 35
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/detectors/mn_plus_one_db_span_detector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 36
      }
    }, {
      "location" : {
        "uri" : "src/sentry/services/hybrid_cloud/app/model.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 37
      }
    }, {
      "location" : {
        "uri" : "src/sentry/eventstore/models.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 38
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/detectors/n_plus_one_db_span_detector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 39
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/detectors/n_plus_one_api_calls_detector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 40
      }
    }, {
      "location" : {
        "uri" : "src/sentry/api/endpoints/organization_spans_aggregation.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 41
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/otp.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 42
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/organizationmember.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 43
      }
    }, {
      "location" : {
        "uri" : "src/sentry/auth/password_validation.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 44
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/performance_detection.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 45
      }
    }, {
      "location" : {
        "uri" : "src/sentry_plugins/heroku/plugin.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 46
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/processingissue.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 47
      }
    }, {
      "location" : {
        "uri" : "src/sentry/api/endpoints/project_releases_token.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 48
      }
    }, {
      "location" : {
        "uri" : "src/sentry/auth/authenticators/recovery_code.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 49
      }
    }, {
      "location" : {
        "uri" : "src/sentry/tsdb/redis.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 50
      }
    }, {
      "location" : {
        "uri" : "src/sentry/web/frontend/release_webhook.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 51
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/releasefile.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 52
      }
    }, {
      "location" : {
        "uri" : "src/sentry/reprocessing2.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 53
      }
    }, {
      "location" : {
        "uri" : "src/sentry/services/hybrid_cloud/rpc.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 54
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/integrations/sentry_app.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 55
      }
    }, {
      "location" : {
        "uri" : "src/sentry/testutils/pytest/sentry.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 56
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/servicehook.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 57
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/performance_issues/detectors/slow_db_query_detector.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 58
      }
    }, {
      "location" : {
        "uri" : "src/sentry/auth/authenticators/sms.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 59
      }
    }, {
      "location" : {
        "uri" : "src/sentry/utils/snuba.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 60
      }
    }, {
      "location" : {
        "uri" : "src/sentry/data_export/tasks.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 61
      }
    }, {
      "location" : {
        "uri" : "src/sentry/silo/util.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 62
      }
    }, {
      "location" : {
        "uri" : "src/sentry/grouping/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 63
      }
    }, {
      "location" : {
        "uri" : "src/sentry/models/files/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 64
      }
    }, {
      "location" : {
        "uri" : "src/sentry/spans/grouping/utils.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 65
      }
    }, {
      "location" : {
        "uri" : "src/sentry/integrations/vercel/webhook.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 66
      }
    }, {
      "location" : {
        "uri" : "src/sentry/integrations/github_enterprise/webhook.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 67
      }
    }, {
      "location" : {
        "uri" : "src/sentry/integrations/github/webhook.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 68
      }
    } ],
    "results" : [ {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 158,
            "startColumn" : 24,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 156,
            "endLine" : 160,
            "snippet" : {
              "text" : "    pem = encryptor.get_public_key_pem()\n    data_encryption_key = Fernet.generate_key()\n    backup_encryptor = Fernet(data_encryption_key)\n    encrypted_json_export = backup_encryptor.encrypt(json.dumps(json_export).encode(\"utf-8\"))\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "271676a4e3dab688:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 367,
            "startColumn" : 14,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 365,
            "endLine" : 369,
            "snippet" : {
              "text" : "    # Decrypt the DEK, then use it to decrypt the underlying JSON.\n    decrypted_dek = decryptor.decrypt_data_encryption_key(unwrapped)\n    fernet = Fernet(decrypted_dek)\n    return fernet.decrypt(unwrapped.encrypted_json_blob)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51de62479c63fb53:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/unkown-iv-sources",
      "ruleIndex" : 0,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/unkown-iv-sources",
        "index" : 0
      },
      "message" : {
        "text" : "Block mode with unknown IV or Nonce configuration"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/relocation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 26,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "                )\n                plaintext_data_encryption_key = decryptor.decrypt_data_encryption_key(unwrapped)\n                fernet = Fernet(plaintext_data_encryption_key)\n                json_data = fernet.decrypt(unwrapped.encrypted_json_blob).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5bda9f48449e70b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/grouping/enhancer/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "import os\nimport zlib\nfrom hashlib import md5\nfrom typing import Any, Sequence\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7413ffb77ef2307:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/files/abstractfile.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import tempfile\nfrom concurrent.futures import ThreadPoolExecutor\nfrom hashlib import sha1\nfrom typing import ClassVar, Type\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6179e4d1f9eff618:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/debug_files/artifact_bundle_indexing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 113,
            "startColumn" : 16,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 111,
            "endLine" : 115,
            "snippet" : {
              "text" : "    def _hashed(self) -> str:\n        key = f\"{self.project_id}|{self.release}|{self.dist}\"\n        return hashlib.sha1(key.encode()).hexdigest()\n\n    def _flat_file_meta_cache_key(self) -> str:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18441da4a628733:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/assemble.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 164,
            "startColumn" : 11,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 162,
            "endLine" : 166,
            "snippet" : {
              "text" : "    return (\n        \"assemble-status:%s\"\n        % hashlib.sha1(\n            b\"%s|%s|%s\"\n            % (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a26d852e3dd3f36c:1",
        "primaryLocationStartColumnFingerprint" : "2"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/utils/atlassian_connect.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 12,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "\n    query_string = \"{}&{}&{}\".format(method, uri, \"&\".join(sorted_query))\n    return hashlib.sha256(query_string.encode(\"utf8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9efbf56a5693ebf3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/slack/utils/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 58,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "def _encode_data(secret: str, data: bytes, timestamp: str) -> str:\n    req = b\"v0:%s:%s\" % (timestamp.encode(\"utf-8\"), data)\n    return \"v0=\" + hmac.new(secret.encode(\"utf-8\"), req, sha256).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1de2493e677b2e0e:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/slack/utils/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import time\nfrom datetime import datetime\nfrom hashlib import sha256\nfrom typing import TYPE_CHECKING, TypedDict\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "afce91f3be74451b:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 153,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endLine" : 153,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 155,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    public_key = private_key.public_key()\n    private_key_pem = private_key.private_bytes(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom django.apps import apps\nfrom django.db import connections, router\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e245f79d228aff24:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 233,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 231,
            "endLine" : 235,
            "snippet" : {
              "text" : "            span_hashes.append(hash)\n    joined_hashes = \"-\".join(span_hashes)\n    return hashlib.sha1(joined_hashes.encode(\"utf8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1955e4d1f2f893da:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 244,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 242,
            "endLine" : 246,
            "snippet" : {
              "text" : "\n    signature = (str(op) + str(description)).encode(\"utf-8\")\n    full_fingerprint = hashlib.sha1(signature).hexdigest()\n    fingerprint = full_fingerprint[\n        :20\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3f7e699d1a3545a:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 326,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 324,
            "endLine" : 328,
            "snippet" : {
              "text" : "    path = ASSET_HASH_REGEX.sub(\"*\", path)\n    stripped_url = url._replace(path=path, query=\"\").geturl()\n    return hashlib.sha1(stripped_url.encode(\"utf-8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63b454a01d691a1d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 375,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 373,
            "endLine" : 377,
            "snippet" : {
              "text" : "    url_paths.sort()\n\n    hashed_url_paths = hashlib.sha1((\"-\".join(url_paths)).encode(\"utf8\")).hexdigest()\n    return hashed_url_paths\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d13d8eb3d0df66e:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/github/webhooks/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 19,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    def is_valid_signature(self, method, body, secret, signature):\n        if method == \"sha1\":\n            mod = hashlib.sha1\n        else:\n            raise NotImplementedError(f\"signature method {method} is not supported\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "386c9407ace46444:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/beacon.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import platform\nfrom datetime import timedelta\nfrom hashlib import sha1\nfrom uuid import uuid4\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78c68d85363595c5:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/cases.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 1482,
            "startColumn" : 37,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 1480,
            "endLine" : 1484,
            "snippet" : {
              "text" : "        if type == \"set\":\n            # Relay uses a different hashing algorithm, but that's ok\n            value = [int.from_bytes(hashlib.md5(str(value).encode()).digest()[:8], \"big\")]\n        elif type == \"distribution\":\n            value = [value]\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa720d4005655373:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/cases.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 2108,
            "startColumn" : 18,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 2106,
            "endLine" : 2110,
            "snippet" : {
              "text" : "        # this is a different hashing algorithm than is used by vroom\n        # but it's not a big deal\n        hasher = hashlib.md5()\n        if function.get(\"package\") is not None:\n            hasher.update(function[\"package\"].encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56c008417571d877:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/jira/client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 3,
            "startColumn" : 21,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 5,
            "snippet" : {
              "text" : "import logging\nimport re\nfrom hashlib import md5 as _md5\n\nfrom django.utils.encoding import force_bytes\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0b0d969a082c493:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/colors.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "\ndef get_hashed_color(string, l=0.5, s=0.5):  # noqa: E741\n    val = int(hashlib.md5(string.encode(\"utf-8\")).hexdigest()[:3], 16)\n    tup = colorsys.hls_to_rgb(val / 4096.0, l, s)\n    return f\"#{int(tup[0] * 255):02x}{int(tup[1] * 255):02x}{int(tup[2] * 255):02x}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ba9c0693592a1ee:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/management/commands/collectstatic.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import os\nfrom hashlib import md5\nfrom itertools import chain\nfrom operator import itemgetter\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd47a3e44cbb123e:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/eventstore/compressor.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 20,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "        to_deduplicate, to_inline = interface.encode(data.pop(key))\n        to_deduplicate_serialized = json.dumps(to_deduplicate).encode()\n        checksum = hashlib.md5(to_deduplicate_serialized).hexdigest()\n        extra_keys[checksum] = to_deduplicate\n        patchsets.append([key, checksum, to_inline])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "675ab4fb5670aa46:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/mockdata/core.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "import time\nfrom datetime import datetime, timedelta, timezone\nfrom hashlib import sha1\nfrom random import randint\nfrom typing import Any, Mapping, Optional\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8db22f5ef64a47ba:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/debugfile.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 298,
            "startColumn" : 13,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 296,
            "endLine" : 300,
            "snippet" : {
              "text" : "        checksum = file.checksum\n    elif fileobj is not None:\n        h = hashlib.sha1()\n        while True:\n            chunk = fileobj.read(16384)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c283eadcfec7b8e:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/replays/usecases/ingest/dom_index.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "import time\nimport uuid\nfrom hashlib import md5\nfrom typing import Any, Dict, List, Literal, Optional, TypedDict\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "388f5d5929673e4b:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/dynamicsampling.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "    rule_string = f\"{condition_string}-{project_string}\"\n    # make it a bit shorter\n    return hashlib.sha1(rule_string.encode(\"utf-8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4b92a3edc3a5237d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/issues/escalating_group_forecast.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 22,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "    @classmethod\n    def build_storage_identifier(cls, project_id: int, group_id: int) -> str:\n        identifier = hashlib.md5(f\"{project_id}::{group_id}\".encode()).hexdigest()\n        return f\"e-g-f:{identifier}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af91e72ca2dc9c00:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/replays/lib/event_linking.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import time\nimport uuid\nfrom hashlib import md5\nfrom typing import TYPE_CHECKING, TypedDict, Union\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1f0c4b3c17f5d45d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/search/snuba/executors.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "from dataclasses import dataclass, replace\nfrom datetime import datetime, timedelta\nfrom hashlib import md5\nfrom math import floor\nfrom typing import Any, List, Mapping, Optional, Sequence, Set, Tuple, TypedDict, cast\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18759042858dcb1:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHAKE128"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/snuba/metrics/extraction.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 1019,
            "startColumn" : 16,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 1017,
            "endLine" : 1021,
            "snippet" : {
              "text" : "    def query_hash(self) -> str:\n        str_to_hash = self._query_str_for_hash\n        hash = hashlib.shake_128(bytes(str_to_hash, encoding=\"ascii\")).hexdigest(4)\n        with sentry_sdk.start_span(op=\"OnDemandMetricSpec.query_hash\", description=hash) as span:\n            span.set_tag(\"str_to_hash\", str_to_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c2e00fbabdb632c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/factories.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from contextlib import contextmanager\nfrom datetime import datetime\nfrom hashlib import sha1\nfrom importlib import import_module\nfrom typing import Any, List, Mapping, Optional, Sequence\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c81309c47b93b4d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/hashlib.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "\nimport hashlib\nfrom hashlib import md5 as _md5\nfrom hashlib import sha1 as _sha1\nfrom hashlib import sha256 as _sha256\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e4daff11c379349:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/hashlib.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "import hashlib\nfrom hashlib import md5 as _md5\nfrom hashlib import sha1 as _sha1\nfrom hashlib import sha256 as _sha256\nfrom typing import Any, Callable, Iterable, Optional\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70a14f24f401e800:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/hashlib.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "from hashlib import md5 as _md5\nfrom hashlib import sha1 as _sha1\nfrom hashlib import sha256 as _sha256\nfrom typing import Any, Callable, Iterable, Optional\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "657a2a1b0d4d0c40:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES128\nUse of algorithm PKCS7\nUse of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 158,
            "startColumn" : 24,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 156,
            "endLine" : 160,
            "snippet" : {
              "text" : "    pem = encryptor.get_public_key_pem()\n    data_encryption_key = Fernet.generate_key()\n    backup_encryptor = Fernet(data_encryption_key)\n    encrypted_json_export = backup_encryptor.encrypt(json.dumps(json_export).encode(\"utf-8\"))\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "271676a4e3dab688:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 163,
            "startColumn" : 14,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 161,
            "endLine" : 165,
            "snippet" : {
              "text" : "    # Encrypt the newly minted DEK using asymmetric public key encryption.\n    dek_encryption_key = serialization.load_pem_public_key(pem, default_backend())\n    sha256 = hashes.SHA256()\n    mgf = padding.MGF1(algorithm=sha256)\n    oaep_padding = padding.OAEP(mgf=mgf, algorithm=sha256, label=None)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25d798ce75981dd4:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 165,
            "startColumn" : 20,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 163,
            "endLine" : 167,
            "snippet" : {
              "text" : "    sha256 = hashes.SHA256()\n    mgf = padding.MGF1(algorithm=sha256)\n    oaep_padding = padding.OAEP(mgf=mgf, algorithm=sha256, label=None)\n    encrypted_dek = dek_encryption_key.encrypt(data_encryption_key, oaep_padding)  # type: ignore\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22458d1a2a888dd6:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 296,
            "startColumn" : 44,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 294,
            "endLine" : 298,
            "snippet" : {
              "text" : "            unwrapped.encrypted_data_encryption_key,\n            padding.OAEP(\n                mgf=padding.MGF1(algorithm=hashes.SHA256()),\n                algorithm=hashes.SHA256(),\n                label=None,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6937f7e773603da0:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 297,
            "startColumn" : 27,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 295,
            "endLine" : 299,
            "snippet" : {
              "text" : "            padding.OAEP(\n                mgf=padding.MGF1(algorithm=hashes.SHA256()),\n                algorithm=hashes.SHA256(),\n                label=None,\n            ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "332f3f73db7243f:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 295,
            "startColumn" : 13,
            "endLine" : 299,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 293,
            "endLine" : 301,
            "snippet" : {
              "text" : "        return private_key.decrypt(  # type: ignore\n            unwrapped.encrypted_data_encryption_key,\n            padding.OAEP(\n                mgf=padding.MGF1(algorithm=hashes.SHA256()),\n                algorithm=hashes.SHA256(),\n                label=None,\n            ),\n        )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fef6fe0264ec9f68:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES128\nUse of algorithm PKCS7\nUse of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 367,
            "startColumn" : 14,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 365,
            "endLine" : 369,
            "snippet" : {
              "text" : "    # Decrypt the DEK, then use it to decrypt the underlying JSON.\n    decrypted_dek = decryptor.decrypt_data_encryption_key(unwrapped)\n    fernet = Fernet(decrypted_dek)\n    return fernet.decrypt(unwrapped.encrypted_json_blob)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51de62479c63fb53:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/deletion/hybrid_cloud.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "import datetime\nfrom dataclasses import dataclass\nfrom hashlib import sha1\nfrom typing import Any, List, Tuple, Type\nfrom uuid import uuid4\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2ccefa8c610cc995:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/organization_actions/impl.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 23,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "        slugified_base_str = uuid4().hex[0:10]\n\n    hashed_org_data = hashlib.md5(\n        \"/\".join([slugified_base_str, desired_org_name, str(owning_user_id)]).encode(\"utf8\")\n    ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c27a4979ecd08b0:1",
        "primaryLocationStartColumnFingerprint" : "18"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/issues/ingest.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import logging\nfrom datetime import datetime\nfrom hashlib import md5\nfrom typing import Any, Mapping, Optional, Tuple, TypedDict, cast\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "54fba06f1f91e763:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/io_main_thread_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "            )\n        call_stack = \"-\".join(sorted(set(overall_stack), key=lambda s: overall_stack.index(s)))\n        hashed_stack = hashlib.sha1(call_stack.encode(\"utf8\")).hexdigest()\n        return f\"1-{PerformanceFileIOMainThreadGroupType.type_id}-{hashed_stack}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae77afec99ca1c37:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/io_main_thread_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 224,
            "startColumn" : 26,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 222,
            "endLine" : 226,
            "snippet" : {
              "text" : "            sorted(set(description_strings), key=lambda c: description_strings.index(c))\n        )\n        hashed_queries = hashlib.sha1(joined_queries.encode(\"utf8\")).hexdigest()\n        return f\"1-{PerformanceDBMainThreadGroupType.type_id}-{hashed_queries}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a891e3838fd15788:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/issues/issue_occurrence.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 22,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    @classmethod\n    def build_storage_identifier(cls, id_: str, project_id: int) -> str:\n        identifier = hashlib.md5(f\"{id_}::{project_id}\".encode()).hexdigest()\n        return f\"i-o:{identifier}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b7b3e56c70840e3:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/statistical_detectors/issue_platform_adapter.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "def fingerprint_regression(transaction):\n    prehashed_fingerprint = f\"p95_transaction_duration_regression-{transaction}\"\n    return hashlib.sha1((prehashed_fingerprint).encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2b3bc0b34473f690:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 74,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/mailgun_inbound_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 27,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "                key=api_key.encode(\"utf-8\"),\n                msg=(f\"{timestamp}{token}\").encode(),\n                digestmod=sha256,\n            ).hexdigest(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d80eeaa321d1bfc:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/mailgun_inbound_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 3,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 5,
            "snippet" : {
              "text" : "import hmac\nimport logging\nfrom hashlib import sha256\nfrom typing import Any\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef693e998cf675ec:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/debug/mail.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "import uuid\nfrom datetime import datetime, timedelta\nfrom hashlib import md5\nfrom random import Random\nfrom typing import Any, Generator\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6de980171dff1802:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/mn_plus_one_db_span_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 239,
            "startColumn" : 28,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 237,
            "endLine" : 241,
            "snippet" : {
              "text" : "        parent_op = parent_span.get(\"op\") or \"\"\n        parent_hash = parent_span.get(\"hash\") or \"\"\n        full_fingerprint = hashlib.sha1(\n            (parent_op + parent_hash + db_hash).encode(\"utf8\")\n        ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6de0ac18cbd6e0f1:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/app/model.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 77,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        secret = self.application.client_secret\n        return hmac.new(\n            key=secret.encode(\"utf-8\"), msg=body.encode(\"utf-8\"), digestmod=sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d2b26132f11ce2f:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/app/model.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "import datetime\nimport hmac\nfrom hashlib import sha256\nfrom typing import Any, Dict, List, Mapping, Optional, Protocol\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e56a9600d98b1a8:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/eventstore/models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "from copy import deepcopy\nfrom datetime import datetime, timezone\nfrom hashlib import md5\nfrom typing import (\n    TYPE_CHECKING,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c60af7ba1bde958d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/n_plus_one_db_span_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 258,
            "startColumn" : 28,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 256,
            "endLine" : 260,
            "snippet" : {
              "text" : "        # XXX: this has to be a hardcoded string otherwise grouping will break\n        problem_class = \"GroupType.PERFORMANCE_N_PLUS_ONE_DB_QUERIES\"\n        full_fingerprint = hashlib.sha1(\n            (str(parent_op) + str(parent_hash) + str(source_hash) + str(n_hash)).encode(\"utf8\"),\n        ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e391dfb541e069df:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/n_plus_one_api_calls_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 12,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "        return None\n\n    hash = hashlib.md5()\n    for part in parts:\n        hash.update(force_bytes(part, errors=\"replace\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bbd6ebf3f3b974f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/api/endpoints/organization_spans_aggregation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 116,
            "startColumn" : 28,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 114,
            "endLine" : 118,
            "snippet" : {
              "text" : "                prefix = f\"{root_prefix}-{key}{nth_span}\"\n\n        node_fingerprint = hashlib.md5(prefix.encode()).hexdigest()[:16]\n        parent_node = self.aggregated_tree.get(parent_node_fingerprint, None)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2341c5d55360f78:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/otp.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 17,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "                base64.b32decode(self.secret.encode(\"ascii\"), casefold=True),\n                _pack_int(counter),\n                hashlib.sha1,\n            ).digest()\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb4dfbd64024b054:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/organizationmember.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "from datetime import timedelta\nfrom enum import Enum\nfrom hashlib import md5\nfrom typing import TYPE_CHECKING, Any, ClassVar, List, Mapping, MutableMapping, Set, TypedDict\nfrom urllib.parse import urlencode\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98a71c6492592778:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/password_validation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import logging\nfrom hashlib import sha1\n\nimport requests\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64174dc3518e30ee:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/performance_detection.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 22,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "    @classmethod\n    def build_identifier(cls, event_id: str, problem_hash: str) -> str:\n        identifier = hashlib.md5(f\"{problem_hash}:{event_id}\".encode()).hexdigest()\n        return f\"p-i-e:{identifier}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ebbbeb46b648fd6a:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/heroku/plugin.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 27,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "                key=secret.encode(\"utf-8\"),\n                msg=body.encode(\"utf-8\"),\n                digestmod=sha256,\n            ).digest()\n        ).decode(\"utf-8\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32cc0643ea1ea9c3:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/heroku/plugin.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "import hmac\nimport logging\nfrom hashlib import sha256\n\nfrom django.http import HttpResponse\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6927fc055884e202:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/processingissue.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 1,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 3,
            "snippet" : {
              "text" : "from hashlib import sha1\nfrom typing import ClassVar\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e21dd91dc66d97eb:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/api/endpoints/project_releases_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 19,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "        key=token.encode(\"utf-8\"),\n        msg=(f\"{plugin_id}-{project_id}\").encode(),\n        digestmod=sha256,\n    ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ba4d24866a3188:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/api/endpoints/project_releases_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import hmac\nfrom hashlib import sha256\nfrom uuid import uuid1\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1b921e0f1d0dbc1:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/authenticators/recovery_code.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 84,
            "endColumn" : 88
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "        rv = []\n        if self.is_enrolled():\n            h = hmac.new(key=force_bytes(self.config[\"salt\"]), msg=None, digestmod=sha1)\n            for x in range(10):\n                h.update((\"%s|\" % x).encode(\"utf-8\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c77e4b27724981fb:1",
        "primaryLocationStartColumnFingerprint" : "71"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/authenticators/recovery_code.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "from base64 import b32encode\nfrom binascii import hexlify\nfrom hashlib import sha1\nfrom os import urandom\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b029c6d48c34cfd8:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tsdb/redis.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "from collections import defaultdict, namedtuple\nfrom functools import reduce\nfrom hashlib import md5\nfrom typing import Callable, ContextManager, TypeVar\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4ef028e6ba510fb:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/release_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 27,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "                key=token.encode(\"utf-8\"),\n                msg=(f\"{plugin_id}-{project_id}\").encode(),\n                digestmod=sha256,\n            ).hexdigest(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d80eeaa321d1bfc:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/release_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 3,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 5,
            "snippet" : {
              "text" : "import hmac\nimport logging\nfrom hashlib import sha256\n\nfrom django.http import HttpRequest, HttpResponse\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "277f7f44491169d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm AES128\nUse of algorithm PKCS7\nUse of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/relocation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 26,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "                )\n                plaintext_data_encryption_key = decryptor.decrypt_data_encryption_key(unwrapped)\n                fernet = Fernet(plaintext_data_encryption_key)\n                json_data = fernet.decrypt(unwrapped.encrypted_json_blob).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5bda9f48449e70b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/releasefile.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "import zipfile\nfrom contextlib import contextmanager\nfrom hashlib import sha1\nfrom io import BytesIO\nfrom tempfile import TemporaryDirectory\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "feadd3bea3ec4009:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/reprocessing2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 12,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 151,
            "snippet" : {
              "text" : "\ndef _generate_unprocessed_event_node_id(project_id, event_id):\n    return hashlib.md5(f\"{project_id}:{event_id}:unprocessed\".encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3aa8ad69fb4c90c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/rpc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 617,
            "startColumn" : 67,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 615,
            "endLine" : 619,
            "snippet" : {
              "text" : "\n    for key in settings.RPC_SHARED_SECRET:\n        computed = hmac.new(key.encode(\"utf-8\"), signature_input, hashlib.sha256).hexdigest()\n\n        is_valid = hmac.compare_digest(computed.encode(\"utf-8\"), signature_data.encode(\"utf-8\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9bbe5e90ac59ba6b:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/rpc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 641,
            "startColumn" : 67,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 639,
            "endLine" : 642,
            "snippet" : {
              "text" : "    )\n    secret = settings.RPC_SHARED_SECRET[0]\n    signature = hmac.new(secret.encode(\"utf-8\"), signature_input, hashlib.sha256).hexdigest()\n    return f\"rpc0:{signature}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aa1f1c1f94df1cb:1",
        "primaryLocationStartColumnFingerprint" : "62"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/integrations/sentry_app.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 203,
            "startColumn" : 77,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 201,
            "endLine" : 205,
            "snippet" : {
              "text" : "        secret = self.application.client_secret\n        return hmac.new(\n            key=secret.encode(\"utf-8\"), msg=body.encode(\"utf-8\"), digestmod=sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1eeaf3fa68d9c16:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/pytest/sentry.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import sys\nfrom datetime import datetime\nfrom hashlib import md5\nfrom typing import TypeVar\nfrom unittest import mock\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6e7baaa6d160781d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/integrations/sentry_app.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import itertools\nimport uuid\nfrom hashlib import sha256\nfrom typing import ClassVar, List\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d2057e9baa4674d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/servicehook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 82,
            "endColumn" : 88
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "    def build_signature(self, body):\n        return hmac.new(\n            key=self.secret.encode(\"utf-8\"), msg=body.encode(\"utf-8\"), digestmod=sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bf992acafbfcc2:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/servicehook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import secrets\nfrom functools import cached_property\nfrom hashlib import sha256\nfrom typing import ClassVar\nfrom uuid import uuid4\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "410f7e1b6ca78f75:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/slow_db_query_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 118,
            "startColumn" : 28,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 116,
            "endLine" : 119,
            "snippet" : {
              "text" : "    def _fingerprint(self, hash):\n        signature = (str(hash)).encode(\"utf-8\")\n        full_fingerprint = hashlib.sha1(signature).hexdigest()\n        return f\"1-{PerformanceSlowDBQueryGroupType.type_id}-{full_fingerprint}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b0de3799b14ff45:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/authenticators/sms.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "\nimport logging\nfrom hashlib import md5\nfrom typing import TYPE_CHECKING\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2d872fafc2ebccf:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/snuba.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "from copy import deepcopy\nfrom datetime import datetime, timedelta, timezone\nfrom hashlib import sha1\nfrom typing import (\n    Any,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b562c066a8ad7ac9:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/data_export/tasks.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import logging\nimport tempfile\nfrom hashlib import sha1\n\nimport celery\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ccf4246259b8af4:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/silo/util.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 65,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "        request_body,\n    )\n    signature = hmac.new(secret.encode(\"utf-8\"), raw_signature, sha256).hexdigest()\n    return f\"v0={signature}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5128cf16a85b3d93:1",
        "primaryLocationStartColumnFingerprint" : "60"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/silo/util.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "\nimport hmac\nfrom hashlib import sha256\nfrom typing import Iterable, Mapping\nfrom wsgiref.util import is_hop_by_hop\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf5ff3bc34ec3e1b:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/grouping/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import re\nfrom hashlib import md5\n\nfrom django.utils.encoding import force_bytes\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb4c350bbfc8616e:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/files/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "from contextlib import contextmanager\nfrom datetime import timedelta\nfrom hashlib import sha1\n\nfrom django.conf import settings\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f2c512fb97e3274:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/spans/grouping/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import re\nfrom hashlib import md5\nfrom typing import Optional, Sequence\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "233846345fe306d2:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/vercel/webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 72,
            "endColumn" : 84
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\n    expected = hmac.new(\n        key=secret.encode(\"utf-8\"), msg=bytes(request.body), digestmod=hashlib.sha1\n    ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed3416d6fbe941af:1",
        "primaryLocationStartColumnFingerprint" : "63"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/github_enterprise/webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 61,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "            raise NotImplementedError(f\"signature method {method} is not supported\")\n        expected = hmac.new(\n            key=secret.encode(\"utf-8\"), msg=body, digestmod=hashlib.sha1\n        ).hexdigest()\n        return constant_time_compare(expected, signature)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dcc9738a9a2041f1:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
      "ruleIndex" : 1,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-cryptographic-algorithms",
        "index" : 1
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/github/webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 19,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "    def is_valid_signature(self, method: str, body: bytes, secret: str, signature: str) -> bool:\n        if method == \"sha1\":\n            mod = hashlib.sha1\n        else:\n            raise NotImplementedError(f\"signature method {method} is not supported\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "386c9407ace46444:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
        "index" : 2
      },
      "message" : {
        "text" : "Use of algorithm PKCS7"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 158,
            "startColumn" : 24,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 156,
            "endLine" : 160,
            "snippet" : {
              "text" : "    pem = encryptor.get_public_key_pem()\n    data_encryption_key = Fernet.generate_key()\n    backup_encryptor = Fernet(data_encryption_key)\n    encrypted_json_export = backup_encryptor.encrypt(json.dumps(json_export).encode(\"utf-8\"))\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "271676a4e3dab688:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
        "index" : 2
      },
      "message" : {
        "text" : "Use of algorithm PKCS7"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 367,
            "startColumn" : 14,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 365,
            "endLine" : 369,
            "snippet" : {
              "text" : "    # Decrypt the DEK, then use it to decrypt the underlying JSON.\n    decrypted_dek = decryptor.decrypt_data_encryption_key(unwrapped)\n    fernet = Fernet(decrypted_dek)\n    return fernet.decrypt(unwrapped.encrypted_json_blob)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51de62479c63fb53:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
      "ruleIndex" : 2,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-padding-schemes",
        "index" : 2
      },
      "message" : {
        "text" : "Use of algorithm PKCS7"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/relocation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 26,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "                )\n                plaintext_data_encryption_key = decryptor.decrypt_data_encryption_key(unwrapped)\n                fernet = Fernet(plaintext_data_encryption_key)\n                json_data = fernet.decrypt(unwrapped.encrypted_json_blob).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5bda9f48449e70b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 153,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endLine" : 153,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 155,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    public_key = private_key.public_key()\n    private_key_pem = private_key.private_bytes(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom django.apps import apps\nfrom django.db import connections, router\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e245f79d228aff24:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
      "ruleIndex" : 4,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-algorithms",
        "index" : 4
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 74,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/grouping/enhancer/__init__.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 2
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "import os\nimport zlib\nfrom hashlib import md5\nfrom typing import Any, Sequence\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c7413ffb77ef2307:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/files/abstractfile.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 3
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import tempfile\nfrom concurrent.futures import ThreadPoolExecutor\nfrom hashlib import sha1\nfrom typing import ClassVar, Type\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6179e4d1f9eff618:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/debug_files/artifact_bundle_indexing.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 4
          },
          "region" : {
            "startLine" : 113,
            "startColumn" : 16,
            "endColumn" : 28
          },
          "contextRegion" : {
            "startLine" : 111,
            "endLine" : 115,
            "snippet" : {
              "text" : "    def _hashed(self) -> str:\n        key = f\"{self.project_id}|{self.release}|{self.dist}\"\n        return hashlib.sha1(key.encode()).hexdigest()\n\n    def _flat_file_meta_cache_key(self) -> str:\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18441da4a628733:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/assemble.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 5
          },
          "region" : {
            "startLine" : 164,
            "startColumn" : 11,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 162,
            "endLine" : 166,
            "snippet" : {
              "text" : "    return (\n        \"assemble-status:%s\"\n        % hashlib.sha1(\n            b\"%s|%s|%s\"\n            % (\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a26d852e3dd3f36c:1",
        "primaryLocationStartColumnFingerprint" : "2"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/utils/atlassian_connect.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 6
          },
          "region" : {
            "startLine" : 44,
            "startColumn" : 12,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 42,
            "endLine" : 46,
            "snippet" : {
              "text" : "\n    query_string = \"{}&{}&{}\".format(method, uri, \"&\".join(sorted_query))\n    return hashlib.sha256(query_string.encode(\"utf8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9efbf56a5693ebf3:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/slack/utils/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 20,
            "startColumn" : 58,
            "endColumn" : 64
          },
          "contextRegion" : {
            "startLine" : 18,
            "endLine" : 22,
            "snippet" : {
              "text" : "def _encode_data(secret: str, data: bytes, timestamp: str) -> str:\n    req = b\"v0:%s:%s\" % (timestamp.encode(\"utf-8\"), data)\n    return \"v0=\" + hmac.new(secret.encode(\"utf-8\"), req, sha256).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1de2493e677b2e0e:1",
        "primaryLocationStartColumnFingerprint" : "53"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/slack/utils/auth.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 7
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import time\nfrom datetime import datetime\nfrom hashlib import sha256\nfrom typing import TYPE_CHECKING, TypedDict\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "afce91f3be74451b:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 233,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 231,
            "endLine" : 235,
            "snippet" : {
              "text" : "            span_hashes.append(hash)\n    joined_hashes = \"-\".join(span_hashes)\n    return hashlib.sha1(joined_hashes.encode(\"utf8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1955e4d1f2f893da:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 244,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 242,
            "endLine" : 246,
            "snippet" : {
              "text" : "\n    signature = (str(op) + str(description)).encode(\"utf-8\")\n    full_fingerprint = hashlib.sha1(signature).hexdigest()\n    fingerprint = full_fingerprint[\n        :20\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e3f7e699d1a3545a:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 326,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 324,
            "endLine" : 328,
            "snippet" : {
              "text" : "    path = ASSET_HASH_REGEX.sub(\"*\", path)\n    stripped_url = url._replace(path=path, query=\"\").geturl()\n    return hashlib.sha1(stripped_url.encode(\"utf-8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "63b454a01d691a1d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 9
          },
          "region" : {
            "startLine" : 375,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 373,
            "endLine" : 377,
            "snippet" : {
              "text" : "    url_paths.sort()\n\n    hashed_url_paths = hashlib.sha1((\"-\".join(url_paths)).encode(\"utf8\")).hexdigest()\n    return hashed_url_paths\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9d13d8eb3d0df66e:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/github/webhooks/base.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 10
          },
          "region" : {
            "startLine" : 32,
            "startColumn" : 19,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 30,
            "endLine" : 34,
            "snippet" : {
              "text" : "    def is_valid_signature(self, method, body, secret, signature):\n        if method == \"sha1\":\n            mod = hashlib.sha1\n        else:\n            raise NotImplementedError(f\"signature method {method} is not supported\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "386c9407ace46444:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/beacon.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 11
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import platform\nfrom datetime import timedelta\nfrom hashlib import sha1\nfrom uuid import uuid4\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "78c68d85363595c5:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/cases.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 1482,
            "startColumn" : 37,
            "endColumn" : 48
          },
          "contextRegion" : {
            "startLine" : 1480,
            "endLine" : 1484,
            "snippet" : {
              "text" : "        if type == \"set\":\n            # Relay uses a different hashing algorithm, but that's ok\n            value = [int.from_bytes(hashlib.md5(str(value).encode()).digest()[:8], \"big\")]\n        elif type == \"distribution\":\n            value = [value]\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fa720d4005655373:1",
        "primaryLocationStartColumnFingerprint" : "24"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/cases.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 12
          },
          "region" : {
            "startLine" : 2108,
            "startColumn" : 18,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 2106,
            "endLine" : 2110,
            "snippet" : {
              "text" : "        # this is a different hashing algorithm than is used by vroom\n        # but it's not a big deal\n        hasher = hashlib.md5()\n        if function.get(\"package\") is not None:\n            hasher.update(function[\"package\"].encode())\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "56c008417571d877:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/jira/client.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 13
          },
          "region" : {
            "startLine" : 3,
            "startColumn" : 21,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 5,
            "snippet" : {
              "text" : "import logging\nimport re\nfrom hashlib import md5 as _md5\n\nfrom django.utils.encoding import force_bytes\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f0b0d969a082c493:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/colors.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 14
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 15,
            "endColumn" : 26
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "\ndef get_hashed_color(string, l=0.5, s=0.5):  # noqa: E741\n    val = int(hashlib.md5(string.encode(\"utf-8\")).hexdigest()[:3], 16)\n    tup = colorsys.hls_to_rgb(val / 4096.0, l, s)\n    return f\"#{int(tup[0] * 255):02x}{int(tup[1] * 255):02x}{int(tup[2] * 255):02x}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1ba9c0693592a1ee:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/management/commands/collectstatic.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 15
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import os\nfrom hashlib import md5\nfrom itertools import chain\nfrom operator import itemgetter\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "cd47a3e44cbb123e:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/eventstore/compressor.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 16
          },
          "region" : {
            "startLine" : 66,
            "startColumn" : 20,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 64,
            "endLine" : 68,
            "snippet" : {
              "text" : "        to_deduplicate, to_inline = interface.encode(data.pop(key))\n        to_deduplicate_serialized = json.dumps(to_deduplicate).encode()\n        checksum = hashlib.md5(to_deduplicate_serialized).hexdigest()\n        extra_keys[checksum] = to_deduplicate\n        patchsets.append([key, checksum, to_inline])\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "675ab4fb5670aa46:1",
        "primaryLocationStartColumnFingerprint" : "11"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/mockdata/core.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 17
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "import time\nfrom datetime import datetime, timedelta, timezone\nfrom hashlib import sha1\nfrom random import randint\nfrom typing import Any, Mapping, Optional\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8db22f5ef64a47ba:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/debugfile.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 18
          },
          "region" : {
            "startLine" : 298,
            "startColumn" : 13,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 296,
            "endLine" : 300,
            "snippet" : {
              "text" : "        checksum = file.checksum\n    elif fileobj is not None:\n        h = hashlib.sha1()\n        while True:\n            chunk = fileobj.read(16384)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c283eadcfec7b8e:1",
        "primaryLocationStartColumnFingerprint" : "4"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/replays/usecases/ingest/dom_index.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 19
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "import time\nimport uuid\nfrom hashlib import md5\nfrom typing import Any, Dict, List, Literal, Optional, TypedDict\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "388f5d5929673e4b:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/dynamicsampling.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 20
          },
          "region" : {
            "startLine" : 42,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 40,
            "endLine" : 44,
            "snippet" : {
              "text" : "    rule_string = f\"{condition_string}-{project_string}\"\n    # make it a bit shorter\n    return hashlib.sha1(rule_string.encode(\"utf-8\")).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "4b92a3edc3a5237d:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/issues/escalating_group_forecast.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 21
          },
          "region" : {
            "startLine" : 109,
            "startColumn" : 22,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 107,
            "endLine" : 111,
            "snippet" : {
              "text" : "    @classmethod\n    def build_storage_identifier(cls, project_id: int, group_id: int) -> str:\n        identifier = hashlib.md5(f\"{project_id}::{group_id}\".encode()).hexdigest()\n        return f\"e-g-f:{identifier}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "af91e72ca2dc9c00:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/replays/lib/event_linking.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 22
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import time\nimport uuid\nfrom hashlib import md5\nfrom typing import TYPE_CHECKING, TypedDict, Union\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1f0c4b3c17f5d45d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/search/snuba/executors.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 23
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "from dataclasses import dataclass, replace\nfrom datetime import datetime, timedelta\nfrom hashlib import md5\nfrom math import floor\nfrom typing import Any, List, Mapping, Optional, Sequence, Set, Tuple, TypedDict, cast\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a18759042858dcb1:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHAKE128"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/snuba/metrics/extraction.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 24
          },
          "region" : {
            "startLine" : 1019,
            "startColumn" : 16,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 1017,
            "endLine" : 1021,
            "snippet" : {
              "text" : "    def query_hash(self) -> str:\n        str_to_hash = self._query_str_for_hash\n        hash = hashlib.shake_128(bytes(str_to_hash, encoding=\"ascii\")).hexdigest(4)\n        with sentry_sdk.start_span(op=\"OnDemandMetricSpec.query_hash\", description=hash) as span:\n            span.set_tag(\"str_to_hash\", str_to_hash)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2c2e00fbabdb632c:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/factories.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 25
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "from contextlib import contextmanager\nfrom datetime import datetime\nfrom hashlib import sha1\nfrom importlib import import_module\nfrom typing import Any, List, Mapping, Optional, Sequence\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6c81309c47b93b4d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/hashlib.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 32
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "\nimport hashlib\nfrom hashlib import md5 as _md5\nfrom hashlib import sha1 as _sha1\nfrom hashlib import sha256 as _sha256\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8e4daff11c379349:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/hashlib.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "import hashlib\nfrom hashlib import md5 as _md5\nfrom hashlib import sha1 as _sha1\nfrom hashlib import sha256 as _sha256\nfrom typing import Any, Callable, Iterable, Optional\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "70a14f24f401e800:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/hashlib.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 26
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "from hashlib import md5 as _md5\nfrom hashlib import sha1 as _sha1\nfrom hashlib import sha256 as _sha256\nfrom typing import Any, Callable, Iterable, Optional\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "657a2a1b0d4d0c40:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 163,
            "startColumn" : 14,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 161,
            "endLine" : 165,
            "snippet" : {
              "text" : "    # Encrypt the newly minted DEK using asymmetric public key encryption.\n    dek_encryption_key = serialization.load_pem_public_key(pem, default_backend())\n    sha256 = hashes.SHA256()\n    mgf = padding.MGF1(algorithm=sha256)\n    oaep_padding = padding.OAEP(mgf=mgf, algorithm=sha256, label=None)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "25d798ce75981dd4:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 296,
            "startColumn" : 44,
            "endColumn" : 57
          },
          "contextRegion" : {
            "startLine" : 294,
            "endLine" : 298,
            "snippet" : {
              "text" : "            unwrapped.encrypted_data_encryption_key,\n            padding.OAEP(\n                mgf=padding.MGF1(algorithm=hashes.SHA256()),\n                algorithm=hashes.SHA256(),\n                label=None,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6937f7e773603da0:1",
        "primaryLocationStartColumnFingerprint" : "27"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 297,
            "startColumn" : 27,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 295,
            "endLine" : 299,
            "snippet" : {
              "text" : "            padding.OAEP(\n                mgf=padding.MGF1(algorithm=hashes.SHA256()),\n                algorithm=hashes.SHA256(),\n                label=None,\n            ),\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "332f3f73db7243f:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/deletion/hybrid_cloud.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 27
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "import datetime\nfrom dataclasses import dataclass\nfrom hashlib import sha1\nfrom typing import Any, List, Tuple, Type\nfrom uuid import uuid4\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2ccefa8c610cc995:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/organization_actions/impl.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 28
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 23,
            "endColumn" : 34
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "        slugified_base_str = uuid4().hex[0:10]\n\n    hashed_org_data = hashlib.md5(\n        \"/\".join([slugified_base_str, desired_org_name, str(owning_user_id)]).encode(\"utf8\")\n    ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5c27a4979ecd08b0:1",
        "primaryLocationStartColumnFingerprint" : "18"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/issues/ingest.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 29
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import logging\nfrom datetime import datetime\nfrom hashlib import md5\nfrom typing import Any, Mapping, Optional, Tuple, TypedDict, cast\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "54fba06f1f91e763:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/io_main_thread_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 24,
            "endColumn" : 36
          },
          "contextRegion" : {
            "startLine" : 175,
            "endLine" : 179,
            "snippet" : {
              "text" : "            )\n        call_stack = \"-\".join(sorted(set(overall_stack), key=lambda s: overall_stack.index(s)))\n        hashed_stack = hashlib.sha1(call_stack.encode(\"utf8\")).hexdigest()\n        return f\"1-{PerformanceFileIOMainThreadGroupType.type_id}-{hashed_stack}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ae77afec99ca1c37:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/io_main_thread_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 30
          },
          "region" : {
            "startLine" : 224,
            "startColumn" : 26,
            "endColumn" : 38
          },
          "contextRegion" : {
            "startLine" : 222,
            "endLine" : 226,
            "snippet" : {
              "text" : "            sorted(set(description_strings), key=lambda c: description_strings.index(c))\n        )\n        hashed_queries = hashlib.sha1(joined_queries.encode(\"utf8\")).hexdigest()\n        return f\"1-{PerformanceDBMainThreadGroupType.type_id}-{hashed_queries}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a891e3838fd15788:1",
        "primaryLocationStartColumnFingerprint" : "17"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/issues/issue_occurrence.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 31
          },
          "region" : {
            "startLine" : 162,
            "startColumn" : 22,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 160,
            "endLine" : 164,
            "snippet" : {
              "text" : "    @classmethod\n    def build_storage_identifier(cls, id_: str, project_id: int) -> str:\n        identifier = hashlib.md5(f\"{id_}::{project_id}\".encode()).hexdigest()\n        return f\"i-o:{identifier}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5b7b3e56c70840e3:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/statistical_detectors/issue_platform_adapter.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 32
          },
          "region" : {
            "startLine" : 19,
            "startColumn" : 12,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 17,
            "endLine" : 21,
            "snippet" : {
              "text" : "def fingerprint_regression(transaction):\n    prehashed_fingerprint = f\"p95_transaction_duration_regression-{transaction}\"\n    return hashlib.sha1((prehashed_fingerprint).encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2b3bc0b34473f690:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/mailgun_inbound_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 27,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "                key=api_key.encode(\"utf-8\"),\n                msg=(f\"{timestamp}{token}\").encode(),\n                digestmod=sha256,\n            ).hexdigest(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d80eeaa321d1bfc:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/mailgun_inbound_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 34
          },
          "region" : {
            "startLine" : 3,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 5,
            "snippet" : {
              "text" : "import hmac\nimport logging\nfrom hashlib import sha256\nfrom typing import Any\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ef693e998cf675ec:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/debug/mail.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 35
          },
          "region" : {
            "startLine" : 10,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 8,
            "endLine" : 12,
            "snippet" : {
              "text" : "import uuid\nfrom datetime import datetime, timedelta\nfrom hashlib import md5\nfrom random import Random\nfrom typing import Any, Generator\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6de980171dff1802:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/mn_plus_one_db_span_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 36
          },
          "region" : {
            "startLine" : 239,
            "startColumn" : 28,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 237,
            "endLine" : 241,
            "snippet" : {
              "text" : "        parent_op = parent_span.get(\"op\") or \"\"\n        parent_hash = parent_span.get(\"hash\") or \"\"\n        full_fingerprint = hashlib.sha1(\n            (parent_op + parent_hash + db_hash).encode(\"utf8\")\n        ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6de0ac18cbd6e0f1:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/app/model.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 64,
            "startColumn" : 77,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 62,
            "endLine" : 66,
            "snippet" : {
              "text" : "        secret = self.application.client_secret\n        return hmac.new(\n            key=secret.encode(\"utf-8\"), msg=body.encode(\"utf-8\"), digestmod=sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "1d2b26132f11ce2f:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/app/model.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 37
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "import datetime\nimport hmac\nfrom hashlib import sha256\nfrom typing import Any, Dict, List, Mapping, Optional, Protocol\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e56a9600d98b1a8:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/eventstore/models.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 38
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "from copy import deepcopy\nfrom datetime import datetime, timezone\nfrom hashlib import md5\nfrom typing import (\n    TYPE_CHECKING,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c60af7ba1bde958d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/n_plus_one_db_span_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 39
          },
          "region" : {
            "startLine" : 258,
            "startColumn" : 28,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 256,
            "endLine" : 260,
            "snippet" : {
              "text" : "        # XXX: this has to be a hardcoded string otherwise grouping will break\n        problem_class = \"GroupType.PERFORMANCE_N_PLUS_ONE_DB_QUERIES\"\n        full_fingerprint = hashlib.sha1(\n            (str(parent_op) + str(parent_hash) + str(source_hash) + str(n_hash)).encode(\"utf8\"),\n        ).hexdigest()\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e391dfb541e069df:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/n_plus_one_api_calls_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 40
          },
          "region" : {
            "startLine" : 285,
            "startColumn" : 12,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 283,
            "endLine" : 287,
            "snippet" : {
              "text" : "        return None\n\n    hash = hashlib.md5()\n    for part in parts:\n        hash.update(force_bytes(part, errors=\"replace\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bbd6ebf3f3b974f:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/api/endpoints/organization_spans_aggregation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 41
          },
          "region" : {
            "startLine" : 116,
            "startColumn" : 28,
            "endColumn" : 39
          },
          "contextRegion" : {
            "startLine" : 114,
            "endLine" : 118,
            "snippet" : {
              "text" : "                prefix = f\"{root_prefix}-{key}{nth_span}\"\n\n        node_fingerprint = hashlib.md5(prefix.encode()).hexdigest()[:16]\n        parent_node = self.aggregated_tree.get(parent_node_fingerprint, None)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2341c5d55360f78:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/otp.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 42
          },
          "region" : {
            "startLine" : 52,
            "startColumn" : 17,
            "endColumn" : 29
          },
          "contextRegion" : {
            "startLine" : 50,
            "endLine" : 54,
            "snippet" : {
              "text" : "                base64.b32decode(self.secret.encode(\"ascii\"), casefold=True),\n                _pack_int(counter),\n                hashlib.sha1,\n            ).digest()\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fb4dfbd64024b054:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/organizationmember.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 43
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "from datetime import timedelta\nfrom enum import Enum\nfrom hashlib import md5\nfrom typing import TYPE_CHECKING, Any, ClassVar, List, Mapping, MutableMapping, Set, TypedDict\nfrom urllib.parse import urlencode\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "98a71c6492592778:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/password_validation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 44
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import logging\nfrom hashlib import sha1\n\nimport requests\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "64174dc3518e30ee:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/performance_detection.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 45
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 22,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "    @classmethod\n    def build_identifier(cls, event_id: str, problem_hash: str) -> str:\n        identifier = hashlib.md5(f\"{problem_hash}:{event_id}\".encode()).hexdigest()\n        return f\"p-i-e:{identifier}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ebbbeb46b648fd6a:1",
        "primaryLocationStartColumnFingerprint" : "13"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/heroku/plugin.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 48,
            "startColumn" : 27,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 46,
            "endLine" : 50,
            "snippet" : {
              "text" : "                key=secret.encode(\"utf-8\"),\n                msg=body.encode(\"utf-8\"),\n                digestmod=sha256,\n            ).digest()\n        ).decode(\"utf-8\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "32cc0643ea1ea9c3:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry_plugins/heroku/plugin.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 46
          },
          "region" : {
            "startLine" : 6,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 4,
            "endLine" : 8,
            "snippet" : {
              "text" : "import hmac\nimport logging\nfrom hashlib import sha256\n\nfrom django.http import HttpResponse\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6927fc055884e202:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/processingissue.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 47
          },
          "region" : {
            "startLine" : 1,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 3,
            "snippet" : {
              "text" : "from hashlib import sha1\nfrom typing import ClassVar\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e21dd91dc66d97eb:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/api/endpoints/project_releases_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 34,
            "startColumn" : 19,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 32,
            "endLine" : 36,
            "snippet" : {
              "text" : "        key=token.encode(\"utf-8\"),\n        msg=(f\"{plugin_id}-{project_id}\").encode(),\n        digestmod=sha256,\n    ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3ba4d24866a3188:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/api/endpoints/project_releases_token.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 48
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import hmac\nfrom hashlib import sha256\nfrom uuid import uuid1\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "d1b921e0f1d0dbc1:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/authenticators/recovery_code.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 35,
            "startColumn" : 84,
            "endColumn" : 88
          },
          "contextRegion" : {
            "startLine" : 33,
            "endLine" : 37,
            "snippet" : {
              "text" : "        rv = []\n        if self.is_enrolled():\n            h = hmac.new(key=force_bytes(self.config[\"salt\"]), msg=None, digestmod=sha1)\n            for x in range(10):\n                h.update((\"%s|\" % x).encode(\"utf-8\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c77e4b27724981fb:1",
        "primaryLocationStartColumnFingerprint" : "71"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/authenticators/recovery_code.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 49
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "from base64 import b32encode\nfrom binascii import hexlify\nfrom hashlib import sha1\nfrom os import urandom\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b029c6d48c34cfd8:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tsdb/redis.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 50
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "from collections import defaultdict, namedtuple\nfrom functools import reduce\nfrom hashlib import md5\nfrom typing import Callable, ContextManager, TypeVar\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "a4ef028e6ba510fb:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/release_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 31,
            "startColumn" : 27,
            "endColumn" : 33
          },
          "contextRegion" : {
            "startLine" : 29,
            "endLine" : 33,
            "snippet" : {
              "text" : "                key=token.encode(\"utf-8\"),\n                msg=(f\"{plugin_id}-{project_id}\").encode(),\n                digestmod=sha256,\n            ).hexdigest(),\n        )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2d80eeaa321d1bfc:1",
        "primaryLocationStartColumnFingerprint" : "10"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/web/frontend/release_webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 51
          },
          "region" : {
            "startLine" : 3,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 5,
            "snippet" : {
              "text" : "import hmac\nimport logging\nfrom hashlib import sha256\n\nfrom django.http import HttpRequest, HttpResponse\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "277f7f44491169d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/releasefile.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 52
          },
          "region" : {
            "startLine" : 8,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 6,
            "endLine" : 10,
            "snippet" : {
              "text" : "import zipfile\nfrom contextlib import contextmanager\nfrom hashlib import sha1\nfrom io import BytesIO\nfrom tempfile import TemporaryDirectory\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "feadd3bea3ec4009:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/reprocessing2.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 53
          },
          "region" : {
            "startLine" : 149,
            "startColumn" : 12,
            "endColumn" : 23
          },
          "contextRegion" : {
            "startLine" : 147,
            "endLine" : 151,
            "snippet" : {
              "text" : "\ndef _generate_unprocessed_event_node_id(project_id, event_id):\n    return hashlib.md5(f\"{project_id}:{event_id}:unprocessed\".encode()).hexdigest()\n\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3aa8ad69fb4c90c9:1",
        "primaryLocationStartColumnFingerprint" : "7"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/rpc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 617,
            "startColumn" : 67,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 615,
            "endLine" : 619,
            "snippet" : {
              "text" : "\n    for key in settings.RPC_SHARED_SECRET:\n        computed = hmac.new(key.encode(\"utf-8\"), signature_input, hashlib.sha256).hexdigest()\n\n        is_valid = hmac.compare_digest(computed.encode(\"utf-8\"), signature_data.encode(\"utf-8\"))\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "9bbe5e90ac59ba6b:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/services/hybrid_cloud/rpc.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 54
          },
          "region" : {
            "startLine" : 641,
            "startColumn" : 67,
            "endColumn" : 81
          },
          "contextRegion" : {
            "startLine" : 639,
            "endLine" : 642,
            "snippet" : {
              "text" : "    )\n    secret = settings.RPC_SHARED_SECRET[0]\n    signature = hmac.new(secret.encode(\"utf-8\"), signature_input, hashlib.sha256).hexdigest()\n    return f\"rpc0:{signature}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "2aa1f1c1f94df1cb:1",
        "primaryLocationStartColumnFingerprint" : "62"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/integrations/sentry_app.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 203,
            "startColumn" : 77,
            "endColumn" : 83
          },
          "contextRegion" : {
            "startLine" : 201,
            "endLine" : 205,
            "snippet" : {
              "text" : "        secret = self.application.client_secret\n        return hmac.new(\n            key=secret.encode(\"utf-8\"), msg=body.encode(\"utf-8\"), digestmod=sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c1eeaf3fa68d9c16:1",
        "primaryLocationStartColumnFingerprint" : "64"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/pytest/sentry.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 56
          },
          "region" : {
            "startLine" : 9,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 7,
            "endLine" : 11,
            "snippet" : {
              "text" : "import sys\nfrom datetime import datetime\nfrom hashlib import md5\nfrom typing import TypeVar\nfrom unittest import mock\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6e7baaa6d160781d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/integrations/sentry_app.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 55
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import itertools\nimport uuid\nfrom hashlib import sha256\nfrom typing import ClassVar, List\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "6d2057e9baa4674d:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/servicehook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 102,
            "startColumn" : 82,
            "endColumn" : 88
          },
          "contextRegion" : {
            "startLine" : 100,
            "endLine" : 104,
            "snippet" : {
              "text" : "    def build_signature(self, body):\n        return hmac.new(\n            key=self.secret.encode(\"utf-8\"), msg=body.encode(\"utf-8\"), digestmod=sha256\n        ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "3bf992acafbfcc2:1",
        "primaryLocationStartColumnFingerprint" : "69"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/servicehook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 57
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "import secrets\nfrom functools import cached_property\nfrom hashlib import sha256\nfrom typing import ClassVar\nfrom uuid import uuid4\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "410f7e1b6ca78f75:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/performance_issues/detectors/slow_db_query_detector.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 58
          },
          "region" : {
            "startLine" : 118,
            "startColumn" : 28,
            "endColumn" : 40
          },
          "contextRegion" : {
            "startLine" : 116,
            "endLine" : 119,
            "snippet" : {
              "text" : "    def _fingerprint(self, hash):\n        signature = (str(hash)).encode(\"utf-8\")\n        full_fingerprint = hashlib.sha1(signature).hexdigest()\n        return f\"1-{PerformanceSlowDBQueryGroupType.type_id}-{full_fingerprint}\"\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8b0de3799b14ff45:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/auth/authenticators/sms.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 59
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "\nimport logging\nfrom hashlib import md5\nfrom typing import TYPE_CHECKING\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "c2d872fafc2ebccf:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/snuba.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 60
          },
          "region" : {
            "startLine" : 13,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 11,
            "endLine" : 15,
            "snippet" : {
              "text" : "from copy import deepcopy\nfrom datetime import datetime, timedelta, timezone\nfrom hashlib import sha1\nfrom typing import (\n    Any,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "b562c066a8ad7ac9:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/data_export/tasks.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 61
          },
          "region" : {
            "startLine" : 5,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 3,
            "endLine" : 7,
            "snippet" : {
              "text" : "import logging\nimport tempfile\nfrom hashlib import sha1\n\nimport celery\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ccf4246259b8af4:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/silo/util.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 70,
            "startColumn" : 65,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 68,
            "endLine" : 72,
            "snippet" : {
              "text" : "        request_body,\n    )\n    signature = hmac.new(secret.encode(\"utf-8\"), raw_signature, sha256).hexdigest()\n    return f\"v0={signature}\"\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "5128cf16a85b3d93:1",
        "primaryLocationStartColumnFingerprint" : "60"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA256\nUse of algorithm UNKNOWN"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/silo/util.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 62
          },
          "region" : {
            "startLine" : 4,
            "startColumn" : 21,
            "endColumn" : 27
          },
          "contextRegion" : {
            "startLine" : 2,
            "endLine" : 6,
            "snippet" : {
              "text" : "\nimport hmac\nfrom hashlib import sha256\nfrom typing import Iterable, Mapping\nfrom wsgiref.util import is_hop_by_hop\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bf5ff3bc34ec3e1b:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/grouping/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 63
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import re\nfrom hashlib import md5\n\nfrom django.utils.encoding import force_bytes\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "bb4c350bbfc8616e:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/models/files/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 64
          },
          "region" : {
            "startLine" : 7,
            "startColumn" : 21,
            "endColumn" : 25
          },
          "contextRegion" : {
            "startLine" : 5,
            "endLine" : 9,
            "snippet" : {
              "text" : "from contextlib import contextmanager\nfrom datetime import timedelta\nfrom hashlib import sha1\n\nfrom django.conf import settings\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "8f2c512fb97e3274:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm MD5"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/spans/grouping/utils.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 65
          },
          "region" : {
            "startLine" : 2,
            "startColumn" : 21,
            "endColumn" : 24
          },
          "contextRegion" : {
            "startLine" : 1,
            "endLine" : 4,
            "snippet" : {
              "text" : "import re\nfrom hashlib import md5\nfrom typing import Optional, Sequence\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "233846345fe306d2:1",
        "primaryLocationStartColumnFingerprint" : "20"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/vercel/webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 66
          },
          "region" : {
            "startLine" : 47,
            "startColumn" : 72,
            "endColumn" : 84
          },
          "contextRegion" : {
            "startLine" : 45,
            "endLine" : 49,
            "snippet" : {
              "text" : "\n    expected = hmac.new(\n        key=secret.encode(\"utf-8\"), msg=bytes(request.body), digestmod=hashlib.sha1\n    ).hexdigest()\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "ed3416d6fbe941af:1",
        "primaryLocationStartColumnFingerprint" : "63"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/github_enterprise/webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 67
          },
          "region" : {
            "startLine" : 99,
            "startColumn" : 61,
            "endColumn" : 73
          },
          "contextRegion" : {
            "startLine" : 97,
            "endLine" : 101,
            "snippet" : {
              "text" : "            raise NotImplementedError(f\"signature method {method} is not supported\")\n        expected = hmac.new(\n            key=secret.encode(\"utf-8\"), msg=body, digestmod=hashlib.sha1\n        ).hexdigest()\n        return constant_time_compare(expected, signature)\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dcc9738a9a2041f1:1",
        "primaryLocationStartColumnFingerprint" : "48"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/hash-algorithms",
      "ruleIndex" : 6,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/hash-algorithms",
        "index" : 6
      },
      "message" : {
        "text" : "Use of algorithm SHA1"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/integrations/github/webhook.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 68
          },
          "region" : {
            "startLine" : 534,
            "startColumn" : 19,
            "endColumn" : 31
          },
          "contextRegion" : {
            "startLine" : 532,
            "endLine" : 536,
            "snippet" : {
              "text" : "    def is_valid_signature(self, method: str, body: bytes, secret: str, signature: str) -> bool:\n        if method == \"sha1\":\n            mod = hashlib.sha1\n        else:\n            raise NotImplementedError(f\"signature method {method} is not supported\")\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "386c9407ace46444:1",
        "primaryLocationStartColumnFingerprint" : "6"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES128"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 158,
            "startColumn" : 24,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 156,
            "endLine" : 160,
            "snippet" : {
              "text" : "    pem = encryptor.get_public_key_pem()\n    data_encryption_key = Fernet.generate_key()\n    backup_encryptor = Fernet(data_encryption_key)\n    encrypted_json_export = backup_encryptor.encrypt(json.dumps(json_export).encode(\"utf-8\"))\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "271676a4e3dab688:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES128"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 367,
            "startColumn" : 14,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 365,
            "endLine" : 369,
            "snippet" : {
              "text" : "    # Decrypt the DEK, then use it to decrypt the underlying JSON.\n    decrypted_dek = decryptor.decrypt_data_encryption_key(unwrapped)\n    fernet = Fernet(decrypted_dek)\n    return fernet.decrypt(unwrapped.encrypted_json_blob)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51de62479c63fb53:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
      "ruleIndex" : 7,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/symmetric-encryption-algorithms",
        "index" : 7
      },
      "message" : {
        "text" : "Use of algorithm AES128"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/relocation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 26,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "                )\n                plaintext_data_encryption_key = decryptor.decrypt_data_encryption_key(unwrapped)\n                fernet = Fernet(plaintext_data_encryption_key)\n                json_data = fernet.decrypt(unwrapped.encrypted_json_blob).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5bda9f48449e70b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-key-generation",
      "ruleIndex" : 8,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-key-generation",
        "index" : 8
      },
      "message" : {
        "text" : "Asymmetric key generation for algorithm RSA with key config source [ControlFlowNode for IntegerLiteral](1)"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endLine" : 153,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 155,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    public_key = private_key.public_key()\n    private_key_pem = private_key.private_bytes(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 152,
            "startColumn" : 41,
            "endColumn" : 45
          },
          "contextRegion" : {
            "startLine" : 150,
            "endLine" : 154,
            "snippet" : {
              "text" : "def generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    public_key = private_key.public_key()\n"
            }
          }
        },
        "message" : {
          "text" : "ControlFlowNode for IntegerLiteral"
        }
      } ]
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 165,
            "startColumn" : 20,
            "endColumn" : 71
          },
          "contextRegion" : {
            "startLine" : 163,
            "endLine" : 167,
            "snippet" : {
              "text" : "    sha256 = hashes.SHA256()\n    mgf = padding.MGF1(algorithm=sha256)\n    oaep_padding = padding.OAEP(mgf=mgf, algorithm=sha256, label=None)\n    encrypted_dek = dek_encryption_key.encrypt(data_encryption_key, oaep_padding)  # type: ignore\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "22458d1a2a888dd6:1",
        "primaryLocationStartColumnFingerprint" : "15"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/asymmetric-padding-schemes",
        "index" : 9
      },
      "message" : {
        "text" : "Use of algorithm OAEP"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 295,
            "startColumn" : 13,
            "endLine" : 299,
            "endColumn" : 14
          },
          "contextRegion" : {
            "startLine" : 293,
            "endLine" : 301,
            "snippet" : {
              "text" : "        return private_key.decrypt(  # type: ignore\n            unwrapped.encrypted_data_encryption_key,\n            padding.OAEP(\n                mgf=padding.MGF1(algorithm=hashes.SHA256()),\n                algorithm=hashes.SHA256(),\n                label=None,\n            ),\n        )\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "fef6fe0264ec9f68:1",
        "primaryLocationStartColumnFingerprint" : "0"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endColumn" : 43
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 153,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 151,
            "startColumn" : 19,
            "endLine" : 153,
            "endColumn" : 6
          },
          "contextRegion" : {
            "startLine" : 149,
            "endLine" : 155,
            "snippet" : {
              "text" : "\ndef generate_rsa_key_pair() -> Tuple[bytes, bytes]:\n    private_key = rsa.generate_private_key(\n        public_exponent=65537, key_size=2048, backend=default_backend()\n    )\n    public_key = private_key.public_key()\n    private_key_pem = private_key.private_bytes(\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "dc3bf6b94af6017b:1",
        "primaryLocationStartColumnFingerprint" : "14"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/testutils/helpers/backups.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 8
          },
          "region" : {
            "startLine" : 15,
            "startColumn" : 55,
            "endColumn" : 58
          },
          "contextRegion" : {
            "startLine" : 13,
            "endLine" : 17,
            "snippet" : {
              "text" : "from cryptography.hazmat.backends import default_backend\nfrom cryptography.hazmat.primitives import serialization\nfrom cryptography.hazmat.primitives.asymmetric import rsa\nfrom django.apps import apps\nfrom django.db import connections, router\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "e245f79d228aff24:1",
        "primaryLocationStartColumnFingerprint" : "54"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 6,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "5"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 59,
            "endColumn" : 72
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "58"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
      "ruleIndex" : 13,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/all-asymmetric-encryption-algorithms",
        "index" : 13
      },
      "message" : {
        "text" : "Use of algorithm RSA"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/utils/jwt.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 33
          },
          "region" : {
            "startLine" : 11,
            "startColumn" : 74,
            "endColumn" : 86
          },
          "contextRegion" : {
            "startLine" : 9,
            "endLine" : 13,
            "snippet" : {
              "text" : "\nimport jwt as pyjwt\nfrom cryptography.hazmat.primitives.asymmetric.rsa import RSAPrivateKey, RSAPublicKey\nfrom cryptography.hazmat.primitives.serialization import (\n    Encoding,\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "7ef13a1bc9e5a364:1",
        "primaryLocationStartColumnFingerprint" : "73"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 158,
            "startColumn" : 24,
            "endColumn" : 51
          },
          "contextRegion" : {
            "startLine" : 156,
            "endLine" : 160,
            "snippet" : {
              "text" : "    pem = encryptor.get_public_key_pem()\n    data_encryption_key = Fernet.generate_key()\n    backup_encryptor = Fernet(data_encryption_key)\n    encrypted_json_export = backup_encryptor.encrypt(json.dumps(json_export).encode(\"utf-8\"))\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "271676a4e3dab688:1",
        "primaryLocationStartColumnFingerprint" : "19"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/backup/helpers.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 367,
            "startColumn" : 14,
            "endColumn" : 35
          },
          "contextRegion" : {
            "startLine" : 365,
            "endLine" : 369,
            "snippet" : {
              "text" : "    # Decrypt the DEK, then use it to decrypt the underlying JSON.\n    decrypted_dek = decryptor.decrypt_data_encryption_key(unwrapped)\n    fernet = Fernet(decrypted_dek)\n    return fernet.decrypt(unwrapped.encrypted_json_blob)\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "51de62479c63fb53:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    }, {
      "ruleId" : "py/quantum-readiness/cbom/block-cipher-mode",
      "ruleIndex" : 14,
      "rule" : {
        "id" : "py/quantum-readiness/cbom/block-cipher-mode",
        "index" : 14
      },
      "message" : {
        "text" : "Use of algorithm CBC"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/sentry/tasks/relocation.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 1
          },
          "region" : {
            "startLine" : 254,
            "startColumn" : 26,
            "endColumn" : 63
          },
          "contextRegion" : {
            "startLine" : 252,
            "endLine" : 256,
            "snippet" : {
              "text" : "                )\n                plaintext_data_encryption_key = decryptor.decrypt_data_encryption_key(unwrapped)\n                fernet = Fernet(plaintext_data_encryption_key)\n                json_data = fernet.decrypt(unwrapped.encrypted_json_blob).decode(\"utf-8\")\n\n"
            }
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "f5bda9f48449e70b:1",
        "primaryLocationStartColumnFingerprint" : "9"
      }
    } ],
    "automationDetails" : {
      "id" : "CBOM:getsentry/sentry/python/"
    },
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarifv2.1.0"
    }
  } ]
}